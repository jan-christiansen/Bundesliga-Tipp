(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/create-element.js":[function(require,module,exports){
var createElement = require("./vdom/create-element.js")

module.exports = createElement

},{"./vdom/create-element.js":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vdom/create-element.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/diff.js":[function(require,module,exports){
var diff = require("./vtree/diff.js")

module.exports = diff

},{"./vtree/diff.js":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vtree/diff.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/node_modules/global/document.js":[function(require,module,exports){
(function (global){
var topLevel = typeof global !== 'undefined' ? global :
    typeof window !== 'undefined' ? window : {}
var minDoc = require('min-document');

if (typeof document !== 'undefined') {
    module.exports = document;
} else {
    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];

    if (!doccy) {
        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;
    }

    module.exports = doccy;
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"min-document":"/usr/local/lib/node_modules/pulp/node_modules/browserify/node_modules/browser-resolve/empty.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/node_modules/is-object/index.js":[function(require,module,exports){
"use strict";

module.exports = function isObject(x) {
	return typeof x === "object" && x !== null;
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/node_modules/x-is-array/index.js":[function(require,module,exports){
var nativeIsArray = Array.isArray
var toString = Object.prototype.toString

module.exports = nativeIsArray || isArray

function isArray(obj) {
    return toString.call(obj) === "[object Array]"
}

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/patch.js":[function(require,module,exports){
var patch = require("./vdom/patch.js")

module.exports = patch

},{"./vdom/patch.js":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vdom/patch.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vdom/apply-properties.js":[function(require,module,exports){
var isObject = require("is-object")
var isHook = require("../vnode/is-vhook.js")

module.exports = applyProperties

function applyProperties(node, props, previous) {
    for (var propName in props) {
        var propValue = props[propName]

        if (propValue === undefined) {
            removeProperty(node, propName, propValue, previous);
        } else if (isHook(propValue)) {
            removeProperty(node, propName, propValue, previous)
            if (propValue.hook) {
                propValue.hook(node,
                    propName,
                    previous ? previous[propName] : undefined)
            }
        } else {
            if (isObject(propValue)) {
                patchObject(node, props, previous, propName, propValue);
            } else {
                node[propName] = propValue
            }
        }
    }
}

function removeProperty(node, propName, propValue, previous) {
    if (previous) {
        var previousValue = previous[propName]

        if (!isHook(previousValue)) {
            if (propName === "attributes") {
                for (var attrName in previousValue) {
                    node.removeAttribute(attrName)
                }
            } else if (propName === "style") {
                for (var i in previousValue) {
                    node.style[i] = ""
                }
            } else if (typeof previousValue === "string") {
                node[propName] = ""
            } else {
                node[propName] = null
            }
        } else if (previousValue.unhook) {
            previousValue.unhook(node, propName, propValue)
        }
    }
}

function patchObject(node, props, previous, propName, propValue) {
    var previousValue = previous ? previous[propName] : undefined

    // Set attributes
    if (propName === "attributes") {
        for (var attrName in propValue) {
            var attrValue = propValue[attrName]

            if (attrValue === undefined) {
                node.removeAttribute(attrName)
            } else {
                node.setAttribute(attrName, attrValue)
            }
        }

        return
    }

    if(previousValue && isObject(previousValue) &&
        getPrototype(previousValue) !== getPrototype(propValue)) {
        node[propName] = propValue
        return
    }

    if (!isObject(node[propName])) {
        node[propName] = {}
    }

    var replacer = propName === "style" ? "" : undefined

    for (var k in propValue) {
        var value = propValue[k]
        node[propName][k] = (value === undefined) ? replacer : value
    }
}

function getPrototype(value) {
    if (Object.getPrototypeOf) {
        return Object.getPrototypeOf(value)
    } else if (value.__proto__) {
        return value.__proto__
    } else if (value.constructor) {
        return value.constructor.prototype
    }
}

},{"../vnode/is-vhook.js":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-vhook.js","is-object":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/node_modules/is-object/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vdom/create-element.js":[function(require,module,exports){
var document = require("global/document")

var applyProperties = require("./apply-properties")

var isVNode = require("../vnode/is-vnode.js")
var isVText = require("../vnode/is-vtext.js")
var isWidget = require("../vnode/is-widget.js")
var handleThunk = require("../vnode/handle-thunk.js")

module.exports = createElement

function createElement(vnode, opts) {
    var doc = opts ? opts.document || document : document
    var warn = opts ? opts.warn : null

    vnode = handleThunk(vnode).a

    if (isWidget(vnode)) {
        return vnode.init()
    } else if (isVText(vnode)) {
        return doc.createTextNode(vnode.text)
    } else if (!isVNode(vnode)) {
        if (warn) {
            warn("Item is not a valid virtual dom node", vnode)
        }
        return null
    }

    var node = (vnode.namespace === null) ?
        doc.createElement(vnode.tagName) :
        doc.createElementNS(vnode.namespace, vnode.tagName)

    var props = vnode.properties
    applyProperties(node, props)

    var children = vnode.children

    for (var i = 0; i < children.length; i++) {
        var childNode = createElement(children[i], opts)
        if (childNode) {
            node.appendChild(childNode)
        }
    }

    return node
}

},{"../vnode/handle-thunk.js":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/handle-thunk.js","../vnode/is-vnode.js":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-vnode.js","../vnode/is-vtext.js":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-vtext.js","../vnode/is-widget.js":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-widget.js","./apply-properties":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vdom/apply-properties.js","global/document":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/node_modules/global/document.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vdom/dom-index.js":[function(require,module,exports){
// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.
// We don't want to read all of the DOM nodes in the tree so we use
// the in-order tree indexing to eliminate recursion down certain branches.
// We only recurse into a DOM node if we know that it contains a child of
// interest.

var noChild = {}

module.exports = domIndex

function domIndex(rootNode, tree, indices, nodes) {
    if (!indices || indices.length === 0) {
        return {}
    } else {
        indices.sort(ascending)
        return recurse(rootNode, tree, indices, nodes, 0)
    }
}

function recurse(rootNode, tree, indices, nodes, rootIndex) {
    nodes = nodes || {}


    if (rootNode) {
        if (indexInRange(indices, rootIndex, rootIndex)) {
            nodes[rootIndex] = rootNode
        }

        var vChildren = tree.children

        if (vChildren) {

            var childNodes = rootNode.childNodes

            for (var i = 0; i < tree.children.length; i++) {
                rootIndex += 1

                var vChild = vChildren[i] || noChild
                var nextIndex = rootIndex + (vChild.count || 0)

                // skip recursion down the tree if there are no nodes down here
                if (indexInRange(indices, rootIndex, nextIndex)) {
                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)
                }

                rootIndex = nextIndex
            }
        }
    }

    return nodes
}

// Binary search for an index in the interval [left, right]
function indexInRange(indices, left, right) {
    if (indices.length === 0) {
        return false
    }

    var minIndex = 0
    var maxIndex = indices.length - 1
    var currentIndex
    var currentItem

    while (minIndex <= maxIndex) {
        currentIndex = ((maxIndex + minIndex) / 2) >> 0
        currentItem = indices[currentIndex]

        if (minIndex === maxIndex) {
            return currentItem >= left && currentItem <= right
        } else if (currentItem < left) {
            minIndex = currentIndex + 1
        } else  if (currentItem > right) {
            maxIndex = currentIndex - 1
        } else {
            return true
        }
    }

    return false;
}

function ascending(a, b) {
    return a > b ? 1 : -1
}

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vdom/patch-op.js":[function(require,module,exports){
var applyProperties = require("./apply-properties")

var isWidget = require("../vnode/is-widget.js")
var VPatch = require("../vnode/vpatch.js")

var updateWidget = require("./update-widget")

module.exports = applyPatch

function applyPatch(vpatch, domNode, renderOptions) {
    var type = vpatch.type
    var vNode = vpatch.vNode
    var patch = vpatch.patch

    switch (type) {
        case VPatch.REMOVE:
            return removeNode(domNode, vNode)
        case VPatch.INSERT:
            return insertNode(domNode, patch, renderOptions)
        case VPatch.VTEXT:
            return stringPatch(domNode, vNode, patch, renderOptions)
        case VPatch.WIDGET:
            return widgetPatch(domNode, vNode, patch, renderOptions)
        case VPatch.VNODE:
            return vNodePatch(domNode, vNode, patch, renderOptions)
        case VPatch.ORDER:
            reorderChildren(domNode, patch)
            return domNode
        case VPatch.PROPS:
            applyProperties(domNode, patch, vNode.properties)
            return domNode
        case VPatch.THUNK:
            return replaceRoot(domNode,
                renderOptions.patch(domNode, patch, renderOptions))
        default:
            return domNode
    }
}

function removeNode(domNode, vNode) {
    var parentNode = domNode.parentNode

    if (parentNode) {
        parentNode.removeChild(domNode)
    }

    destroyWidget(domNode, vNode);

    return null
}

function insertNode(parentNode, vNode, renderOptions) {
    var newNode = renderOptions.render(vNode, renderOptions)

    if (parentNode) {
        parentNode.appendChild(newNode)
    }

    return parentNode
}

function stringPatch(domNode, leftVNode, vText, renderOptions) {
    var newNode

    if (domNode.nodeType === 3) {
        domNode.replaceData(0, domNode.length, vText.text)
        newNode = domNode
    } else {
        var parentNode = domNode.parentNode
        newNode = renderOptions.render(vText, renderOptions)

        if (parentNode && newNode !== domNode) {
            parentNode.replaceChild(newNode, domNode)
        }
    }

    return newNode
}

function widgetPatch(domNode, leftVNode, widget, renderOptions) {
    var updating = updateWidget(leftVNode, widget)
    var newNode

    if (updating) {
        newNode = widget.update(leftVNode, domNode) || domNode
    } else {
        newNode = renderOptions.render(widget, renderOptions)
    }

    var parentNode = domNode.parentNode

    if (parentNode && newNode !== domNode) {
        parentNode.replaceChild(newNode, domNode)
    }

    if (!updating) {
        destroyWidget(domNode, leftVNode)
    }

    return newNode
}

function vNodePatch(domNode, leftVNode, vNode, renderOptions) {
    var parentNode = domNode.parentNode
    var newNode = renderOptions.render(vNode, renderOptions)

    if (parentNode && newNode !== domNode) {
        parentNode.replaceChild(newNode, domNode)
    }

    return newNode
}

function destroyWidget(domNode, w) {
    if (typeof w.destroy === "function" && isWidget(w)) {
        w.destroy(domNode)
    }
}

function reorderChildren(domNode, moves) {
    var childNodes = domNode.childNodes
    var keyMap = {}
    var node
    var remove
    var insert

    for (var i = 0; i < moves.removes.length; i++) {
        remove = moves.removes[i]
        node = childNodes[remove.from]
        if (remove.key) {
            keyMap[remove.key] = node
        }
        domNode.removeChild(node)
    }

    var length = childNodes.length
    for (var j = 0; j < moves.inserts.length; j++) {
        insert = moves.inserts[j]
        node = keyMap[insert.key]
        // this is the weirdest bug i've ever seen in webkit
        domNode.insertBefore(node, insert.to >= length++ ? null : childNodes[insert.to])
    }
}

function replaceRoot(oldRoot, newRoot) {
    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {
        oldRoot.parentNode.replaceChild(newRoot, oldRoot)
    }

    return newRoot;
}

},{"../vnode/is-widget.js":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-widget.js","../vnode/vpatch.js":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/vpatch.js","./apply-properties":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vdom/apply-properties.js","./update-widget":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vdom/update-widget.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vdom/patch.js":[function(require,module,exports){
var document = require("global/document")
var isArray = require("x-is-array")

var render = require("./create-element")
var domIndex = require("./dom-index")
var patchOp = require("./patch-op")
module.exports = patch

function patch(rootNode, patches, renderOptions) {
    renderOptions = renderOptions || {}
    renderOptions.patch = renderOptions.patch && renderOptions.patch !== patch
        ? renderOptions.patch
        : patchRecursive
    renderOptions.render = renderOptions.render || render

    return renderOptions.patch(rootNode, patches, renderOptions)
}

function patchRecursive(rootNode, patches, renderOptions) {
    var indices = patchIndices(patches)

    if (indices.length === 0) {
        return rootNode
    }

    var index = domIndex(rootNode, patches.a, indices)
    var ownerDocument = rootNode.ownerDocument

    if (!renderOptions.document && ownerDocument !== document) {
        renderOptions.document = ownerDocument
    }

    for (var i = 0; i < indices.length; i++) {
        var nodeIndex = indices[i]
        rootNode = applyPatch(rootNode,
            index[nodeIndex],
            patches[nodeIndex],
            renderOptions)
    }

    return rootNode
}

function applyPatch(rootNode, domNode, patchList, renderOptions) {
    if (!domNode) {
        return rootNode
    }

    var newNode

    if (isArray(patchList)) {
        for (var i = 0; i < patchList.length; i++) {
            newNode = patchOp(patchList[i], domNode, renderOptions)

            if (domNode === rootNode) {
                rootNode = newNode
            }
        }
    } else {
        newNode = patchOp(patchList, domNode, renderOptions)

        if (domNode === rootNode) {
            rootNode = newNode
        }
    }

    return rootNode
}

function patchIndices(patches) {
    var indices = []

    for (var key in patches) {
        if (key !== "a") {
            indices.push(Number(key))
        }
    }

    return indices
}

},{"./create-element":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vdom/create-element.js","./dom-index":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vdom/dom-index.js","./patch-op":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vdom/patch-op.js","global/document":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/node_modules/global/document.js","x-is-array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/node_modules/x-is-array/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vdom/update-widget.js":[function(require,module,exports){
var isWidget = require("../vnode/is-widget.js")

module.exports = updateWidget

function updateWidget(a, b) {
    if (isWidget(a) && isWidget(b)) {
        if ("name" in a && "name" in b) {
            return a.id === b.id
        } else {
            return a.init === b.init
        }
    }

    return false
}

},{"../vnode/is-widget.js":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-widget.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/virtual-hyperscript/hooks/soft-set-hook.js":[function(require,module,exports){
'use strict';

module.exports = SoftSetHook;

function SoftSetHook(value) {
    if (!(this instanceof SoftSetHook)) {
        return new SoftSetHook(value);
    }

    this.value = value;
}

SoftSetHook.prototype.hook = function (node, propertyName) {
    if (node[propertyName] !== this.value) {
        node[propertyName] = this.value;
    }
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/handle-thunk.js":[function(require,module,exports){
var isVNode = require("./is-vnode")
var isVText = require("./is-vtext")
var isWidget = require("./is-widget")
var isThunk = require("./is-thunk")

module.exports = handleThunk

function handleThunk(a, b) {
    var renderedA = a
    var renderedB = b

    if (isThunk(b)) {
        renderedB = renderThunk(b, a)
    }

    if (isThunk(a)) {
        renderedA = renderThunk(a, null)
    }

    return {
        a: renderedA,
        b: renderedB
    }
}

function renderThunk(thunk, previous) {
    var renderedThunk = thunk.vnode

    if (!renderedThunk) {
        renderedThunk = thunk.vnode = thunk.render(previous)
    }

    if (!(isVNode(renderedThunk) ||
            isVText(renderedThunk) ||
            isWidget(renderedThunk))) {
        throw new Error("thunk did not return a valid node");
    }

    return renderedThunk
}

},{"./is-thunk":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-thunk.js","./is-vnode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-vnode.js","./is-vtext":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-vtext.js","./is-widget":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-widget.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-thunk.js":[function(require,module,exports){
module.exports = isThunk

function isThunk(t) {
    return t && t.type === "Thunk"
}

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-vhook.js":[function(require,module,exports){
module.exports = isHook

function isHook(hook) {
    return hook &&
      (typeof hook.hook === "function" && !hook.hasOwnProperty("hook") ||
       typeof hook.unhook === "function" && !hook.hasOwnProperty("unhook"))
}

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-vnode.js":[function(require,module,exports){
var version = require("./version")

module.exports = isVirtualNode

function isVirtualNode(x) {
    return x && x.type === "VirtualNode" && x.version === version
}

},{"./version":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/version.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-vtext.js":[function(require,module,exports){
var version = require("./version")

module.exports = isVirtualText

function isVirtualText(x) {
    return x && x.type === "VirtualText" && x.version === version
}

},{"./version":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/version.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-widget.js":[function(require,module,exports){
module.exports = isWidget

function isWidget(w) {
    return w && w.type === "Widget"
}

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/version.js":[function(require,module,exports){
module.exports = "2"

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/vnode.js":[function(require,module,exports){
var version = require("./version")
var isVNode = require("./is-vnode")
var isWidget = require("./is-widget")
var isThunk = require("./is-thunk")
var isVHook = require("./is-vhook")

module.exports = VirtualNode

var noProperties = {}
var noChildren = []

function VirtualNode(tagName, properties, children, key, namespace) {
    this.tagName = tagName
    this.properties = properties || noProperties
    this.children = children || noChildren
    this.key = key != null ? String(key) : undefined
    this.namespace = (typeof namespace === "string") ? namespace : null

    var count = (children && children.length) || 0
    var descendants = 0
    var hasWidgets = false
    var hasThunks = false
    var descendantHooks = false
    var hooks

    for (var propName in properties) {
        if (properties.hasOwnProperty(propName)) {
            var property = properties[propName]
            if (isVHook(property) && property.unhook) {
                if (!hooks) {
                    hooks = {}
                }

                hooks[propName] = property
            }
        }
    }

    for (var i = 0; i < count; i++) {
        var child = children[i]
        if (isVNode(child)) {
            descendants += child.count || 0

            if (!hasWidgets && child.hasWidgets) {
                hasWidgets = true
            }

            if (!hasThunks && child.hasThunks) {
                hasThunks = true
            }

            if (!descendantHooks && (child.hooks || child.descendantHooks)) {
                descendantHooks = true
            }
        } else if (!hasWidgets && isWidget(child)) {
            if (typeof child.destroy === "function") {
                hasWidgets = true
            }
        } else if (!hasThunks && isThunk(child)) {
            hasThunks = true;
        }
    }

    this.count = count + descendants
    this.hasWidgets = hasWidgets
    this.hasThunks = hasThunks
    this.hooks = hooks
    this.descendantHooks = descendantHooks
}

VirtualNode.prototype.version = version
VirtualNode.prototype.type = "VirtualNode"

},{"./is-thunk":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-thunk.js","./is-vhook":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-vhook.js","./is-vnode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-vnode.js","./is-widget":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-widget.js","./version":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/version.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/vpatch.js":[function(require,module,exports){
var version = require("./version")

VirtualPatch.NONE = 0
VirtualPatch.VTEXT = 1
VirtualPatch.VNODE = 2
VirtualPatch.WIDGET = 3
VirtualPatch.PROPS = 4
VirtualPatch.ORDER = 5
VirtualPatch.INSERT = 6
VirtualPatch.REMOVE = 7
VirtualPatch.THUNK = 8

module.exports = VirtualPatch

function VirtualPatch(type, vNode, patch) {
    this.type = Number(type)
    this.vNode = vNode
    this.patch = patch
}

VirtualPatch.prototype.version = version
VirtualPatch.prototype.type = "VirtualPatch"

},{"./version":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/version.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/vtext.js":[function(require,module,exports){
var version = require("./version")

module.exports = VirtualText

function VirtualText(text) {
    this.text = String(text)
}

VirtualText.prototype.version = version
VirtualText.prototype.type = "VirtualText"

},{"./version":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/version.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vtree/diff-props.js":[function(require,module,exports){
var isObject = require("is-object")
var isHook = require("../vnode/is-vhook")

module.exports = diffProps

function diffProps(a, b) {
    var diff

    for (var aKey in a) {
        if (!(aKey in b)) {
            diff = diff || {}
            diff[aKey] = undefined
        }

        var aValue = a[aKey]
        var bValue = b[aKey]

        if (aValue === bValue) {
            continue
        } else if (isObject(aValue) && isObject(bValue)) {
            if (getPrototype(bValue) !== getPrototype(aValue)) {
                diff = diff || {}
                diff[aKey] = bValue
            } else if (isHook(bValue)) {
                 diff = diff || {}
                 diff[aKey] = bValue
            } else {
                var objectDiff = diffProps(aValue, bValue)
                if (objectDiff) {
                    diff = diff || {}
                    diff[aKey] = objectDiff
                }
            }
        } else {
            diff = diff || {}
            diff[aKey] = bValue
        }
    }

    for (var bKey in b) {
        if (!(bKey in a)) {
            diff = diff || {}
            diff[bKey] = b[bKey]
        }
    }

    return diff
}

function getPrototype(value) {
  if (Object.getPrototypeOf) {
    return Object.getPrototypeOf(value)
  } else if (value.__proto__) {
    return value.__proto__
  } else if (value.constructor) {
    return value.constructor.prototype
  }
}

},{"../vnode/is-vhook":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-vhook.js","is-object":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/node_modules/is-object/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vtree/diff.js":[function(require,module,exports){
var isArray = require("x-is-array")

var VPatch = require("../vnode/vpatch")
var isVNode = require("../vnode/is-vnode")
var isVText = require("../vnode/is-vtext")
var isWidget = require("../vnode/is-widget")
var isThunk = require("../vnode/is-thunk")
var handleThunk = require("../vnode/handle-thunk")

var diffProps = require("./diff-props")

module.exports = diff

function diff(a, b) {
    var patch = { a: a }
    walk(a, b, patch, 0)
    return patch
}

function walk(a, b, patch, index) {
    if (a === b) {
        return
    }

    var apply = patch[index]
    var applyClear = false

    if (isThunk(a) || isThunk(b)) {
        thunks(a, b, patch, index)
    } else if (b == null) {

        // If a is a widget we will add a remove patch for it
        // Otherwise any child widgets/hooks must be destroyed.
        // This prevents adding two remove patches for a widget.
        if (!isWidget(a)) {
            clearState(a, patch, index)
            apply = patch[index]
        }

        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))
    } else if (isVNode(b)) {
        if (isVNode(a)) {
            if (a.tagName === b.tagName &&
                a.namespace === b.namespace &&
                a.key === b.key) {
                var propsPatch = diffProps(a.properties, b.properties)
                if (propsPatch) {
                    apply = appendPatch(apply,
                        new VPatch(VPatch.PROPS, a, propsPatch))
                }
                apply = diffChildren(a, b, patch, apply, index)
            } else {
                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))
                applyClear = true
            }
        } else {
            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))
            applyClear = true
        }
    } else if (isVText(b)) {
        if (!isVText(a)) {
            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))
            applyClear = true
        } else if (a.text !== b.text) {
            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))
        }
    } else if (isWidget(b)) {
        if (!isWidget(a)) {
            applyClear = true
        }

        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))
    }

    if (apply) {
        patch[index] = apply
    }

    if (applyClear) {
        clearState(a, patch, index)
    }
}

function diffChildren(a, b, patch, apply, index) {
    var aChildren = a.children
    var orderedSet = reorder(aChildren, b.children)
    var bChildren = orderedSet.children

    var aLen = aChildren.length
    var bLen = bChildren.length
    var len = aLen > bLen ? aLen : bLen

    for (var i = 0; i < len; i++) {
        var leftNode = aChildren[i]
        var rightNode = bChildren[i]
        index += 1

        if (!leftNode) {
            if (rightNode) {
                // Excess nodes in b need to be added
                apply = appendPatch(apply,
                    new VPatch(VPatch.INSERT, null, rightNode))
            }
        } else {
            walk(leftNode, rightNode, patch, index)
        }

        if (isVNode(leftNode) && leftNode.count) {
            index += leftNode.count
        }
    }

    if (orderedSet.moves) {
        // Reorder nodes last
        apply = appendPatch(apply, new VPatch(
            VPatch.ORDER,
            a,
            orderedSet.moves
        ))
    }

    return apply
}

function clearState(vNode, patch, index) {
    // TODO: Make this a single walk, not two
    unhook(vNode, patch, index)
    destroyWidgets(vNode, patch, index)
}

// Patch records for all destroyed widgets must be added because we need
// a DOM node reference for the destroy function
function destroyWidgets(vNode, patch, index) {
    if (isWidget(vNode)) {
        if (typeof vNode.destroy === "function") {
            patch[index] = appendPatch(
                patch[index],
                new VPatch(VPatch.REMOVE, vNode, null)
            )
        }
    } else if (isVNode(vNode) && (vNode.hasWidgets || vNode.hasThunks)) {
        var children = vNode.children
        var len = children.length
        for (var i = 0; i < len; i++) {
            var child = children[i]
            index += 1

            destroyWidgets(child, patch, index)

            if (isVNode(child) && child.count) {
                index += child.count
            }
        }
    } else if (isThunk(vNode)) {
        thunks(vNode, null, patch, index)
    }
}

// Create a sub-patch for thunks
function thunks(a, b, patch, index) {
    var nodes = handleThunk(a, b)
    var thunkPatch = diff(nodes.a, nodes.b)
    if (hasPatches(thunkPatch)) {
        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)
    }
}

function hasPatches(patch) {
    for (var index in patch) {
        if (index !== "a") {
            return true
        }
    }

    return false
}

// Execute hooks when two nodes are identical
function unhook(vNode, patch, index) {
    if (isVNode(vNode)) {
        if (vNode.hooks) {
            patch[index] = appendPatch(
                patch[index],
                new VPatch(
                    VPatch.PROPS,
                    vNode,
                    undefinedKeys(vNode.hooks)
                )
            )
        }

        if (vNode.descendantHooks || vNode.hasThunks) {
            var children = vNode.children
            var len = children.length
            for (var i = 0; i < len; i++) {
                var child = children[i]
                index += 1

                unhook(child, patch, index)

                if (isVNode(child) && child.count) {
                    index += child.count
                }
            }
        }
    } else if (isThunk(vNode)) {
        thunks(vNode, null, patch, index)
    }
}

function undefinedKeys(obj) {
    var result = {}

    for (var key in obj) {
        result[key] = undefined
    }

    return result
}

// List diff, naive left to right reordering
function reorder(aChildren, bChildren) {
    // O(M) time, O(M) memory
    var bChildIndex = keyIndex(bChildren)
    var bKeys = bChildIndex.keys
    var bFree = bChildIndex.free

    if (bFree.length === bChildren.length) {
        return {
            children: bChildren,
            moves: null
        }
    }

    // O(N) time, O(N) memory
    var aChildIndex = keyIndex(aChildren)
    var aKeys = aChildIndex.keys
    var aFree = aChildIndex.free

    if (aFree.length === aChildren.length) {
        return {
            children: bChildren,
            moves: null
        }
    }

    // O(MAX(N, M)) memory
    var newChildren = []

    var freeIndex = 0
    var freeCount = bFree.length
    var deletedItems = 0

    // Iterate through a and match a node in b
    // O(N) time,
    for (var i = 0 ; i < aChildren.length; i++) {
        var aItem = aChildren[i]
        var itemIndex

        if (aItem.key) {
            if (bKeys.hasOwnProperty(aItem.key)) {
                // Match up the old keys
                itemIndex = bKeys[aItem.key]
                newChildren.push(bChildren[itemIndex])

            } else {
                // Remove old keyed items
                itemIndex = i - deletedItems++
                newChildren.push(null)
            }
        } else {
            // Match the item in a with the next free item in b
            if (freeIndex < freeCount) {
                itemIndex = bFree[freeIndex++]
                newChildren.push(bChildren[itemIndex])
            } else {
                // There are no free items in b to match with
                // the free items in a, so the extra free nodes
                // are deleted.
                itemIndex = i - deletedItems++
                newChildren.push(null)
            }
        }
    }

    var lastFreeIndex = freeIndex >= bFree.length ?
        bChildren.length :
        bFree[freeIndex]

    // Iterate through b and append any new keys
    // O(M) time
    for (var j = 0; j < bChildren.length; j++) {
        var newItem = bChildren[j]

        if (newItem.key) {
            if (!aKeys.hasOwnProperty(newItem.key)) {
                // Add any new keyed items
                // We are adding new items to the end and then sorting them
                // in place. In future we should insert new items in place.
                newChildren.push(newItem)
            }
        } else if (j >= lastFreeIndex) {
            // Add any leftover non-keyed items
            newChildren.push(newItem)
        }
    }

    var simulate = newChildren.slice()
    var simulateIndex = 0
    var removes = []
    var inserts = []
    var simulateItem

    for (var k = 0; k < bChildren.length;) {
        var wantedItem = bChildren[k]
        simulateItem = simulate[simulateIndex]

        // remove items
        while (simulateItem === null && simulate.length) {
            removes.push(remove(simulate, simulateIndex, null))
            simulateItem = simulate[simulateIndex]
        }

        if (!simulateItem || simulateItem.key !== wantedItem.key) {
            // if we need a key in this position...
            if (wantedItem.key) {
                if (simulateItem && simulateItem.key) {
                    // if an insert doesn't put this key in place, it needs to move
                    if (bKeys[simulateItem.key] !== k + 1) {
                        removes.push(remove(simulate, simulateIndex, simulateItem.key))
                        simulateItem = simulate[simulateIndex]
                        // if the remove didn't put the wanted item in place, we need to insert it
                        if (!simulateItem || simulateItem.key !== wantedItem.key) {
                            inserts.push({key: wantedItem.key, to: k})
                        }
                        // items are matching, so skip ahead
                        else {
                            simulateIndex++
                        }
                    }
                    else {
                        inserts.push({key: wantedItem.key, to: k})
                    }
                }
                else {
                    inserts.push({key: wantedItem.key, to: k})
                }
                k++
            }
            // a key in simulate has no matching wanted key, remove it
            else if (simulateItem && simulateItem.key) {
                removes.push(remove(simulate, simulateIndex, simulateItem.key))
            }
        }
        else {
            simulateIndex++
            k++
        }
    }

    // remove all the remaining nodes from simulate
    while(simulateIndex < simulate.length) {
        simulateItem = simulate[simulateIndex]
        removes.push(remove(simulate, simulateIndex, simulateItem && simulateItem.key))
    }

    // If the only moves we have are deletes then we can just
    // let the delete patch remove these items.
    if (removes.length === deletedItems && !inserts.length) {
        return {
            children: newChildren,
            moves: null
        }
    }

    return {
        children: newChildren,
        moves: {
            removes: removes,
            inserts: inserts
        }
    }
}

function remove(arr, index, key) {
    arr.splice(index, 1)

    return {
        from: index,
        key: key
    }
}

function keyIndex(children) {
    var keys = {}
    var free = []
    var length = children.length

    for (var i = 0; i < length; i++) {
        var child = children[i]

        if (child.key) {
            keys[child.key] = i
        } else {
            free.push(i)
        }
    }

    return {
        keys: keys,     // A hash of key name to index
        free: free      // An array of unkeyed item indices
    }
}

function appendPatch(apply, patch) {
    if (apply) {
        if (isArray(apply)) {
            apply.push(patch)
        } else {
            apply = [apply, patch]
        }

        return apply
    } else {
        return patch
    }
}

},{"../vnode/handle-thunk":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/handle-thunk.js","../vnode/is-thunk":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-thunk.js","../vnode/is-vnode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-vnode.js","../vnode/is-vtext":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-vtext.js","../vnode/is-widget":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/is-widget.js","../vnode/vpatch":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/vpatch.js","./diff-props":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vtree/diff-props.js","x-is-array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/node_modules/x-is-array/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Bootstrap.Classes/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Halogen_HTML_Core = require("Halogen.HTML.Core");
var Halogen_HTML = require("Halogen.HTML");
var Halogen_HTML_Elements = require("Halogen.HTML.Elements");
var navTabs = Halogen_HTML_Core.className("nav-tabs");
var navStacked = Halogen_HTML_Core.className("nav-stacked");
var navPills = Halogen_HTML_Core.className("nav-pills");
var nav = Halogen_HTML_Core.className("nav");
var active = Halogen_HTML_Core.className("active");
module.exports = {
    navStacked: navStacked, 
    navTabs: navTabs, 
    navPills: navPills, 
    nav: nav, 
    active: active
};

},{"Halogen.HTML":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML/index.js","Halogen.HTML.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Core/index.js","Halogen.HTML.Elements":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Elements/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Bootstrap/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Halogen_HTML_Properties = require("Halogen.HTML.Properties");
var Bootstrap_Classes = require("Bootstrap.Classes");
var Halogen_HTML_Elements = require("Halogen.HTML.Elements");
var Prelude = require("Prelude");
var Data_Array = require("Data.Array");
var Data_Tuple = require("Data.Tuple");
var Halogen_HTML = require("Halogen.HTML");
var Halogen_HTML_Events = require("Halogen.HTML.Events");
var Halogen_HTML_Core = require("Halogen.HTML.Core");
var nav = function (navClass) {
    return function (contents) {
        var pill = function (_62) {
            var props = (function () {
                if (_62.value1) {
                    return [ Halogen_HTML_Properties.class_(Bootstrap_Classes.active) ];
                };
                if (!_62.value1) {
                    return [  ];
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Bootstrap.purs line 21, column 9 - line 22, column 5: " + [ _62.value1.constructor.name ]);
            })();
            return Halogen_HTML_Elements.li(props)([ _62.value0 ]);
        };
        return Halogen_HTML_Elements.ul([ Halogen_HTML_Properties.classes([ Bootstrap_Classes.nav, navClass ]) ])(Prelude.map(Prelude.functorArray)(pill)(contents));
    };
};
var navPills = nav(Bootstrap_Classes.navPills);
var navTabs = nav(Bootstrap_Classes.navTabs);
module.exports = {
    navTabs: navTabs, 
    navPills: navPills, 
    nav: nav
};

},{"Bootstrap.Classes":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Bootstrap.Classes/index.js","Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Halogen.HTML":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML/index.js","Halogen.HTML.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Core/index.js","Halogen.HTML.Elements":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Elements/index.js","Halogen.HTML.Events":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Events/index.js","Halogen.HTML.Properties":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Properties/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Charts/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var DOM_HTML = require("DOM.HTML");
var DOM_HTML_Window = require("DOM.HTML.Window");
var DOM_Node_Document = require("DOM.Node.Document");
var DOM_HTML_Types = require("DOM.HTML.Types");
var DOM_Node_HTMLCollection = require("DOM.Node.HTMLCollection");
var Data_Foreign = require("Data.Foreign");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Options = require("ECharts.Options");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_Array = require("Data.Array");
var Tip = require("Tip");
var Util = require("Util");
var Data_Int = require("Data.Int");
var Team = require("Team");
var ECharts_Series = require("ECharts.Series");
var ECharts_Title = require("ECharts.Title");
var ECharts_Legend = require("ECharts.Legend");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var ECharts_Axis = require("ECharts.Axis");
var Control_Apply = require("Control.Apply");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Either = require("Data.Either");
var Data_Function = require("Data.Function");
var Data_String = require("Data.String");
var Halogen_HTML = require("Halogen.HTML");
var Halogen_HTML_Properties = require("Halogen.HTML.Properties");
var Control_Monad_Eff_JQuery = require("Control.Monad.Eff.JQuery");
var DOM = require("DOM");
var Data_Nullable = require("Data.Nullable");
var ECharts = require("ECharts");
var Ranking = require("Ranking");
var Ratings = require("Ratings");
var Player = require("Player");
var Halogen_HTML_Elements = require("Halogen.HTML.Elements");
var Halogen_HTML_Core = require("Halogen.HTML.Core");
var ECharts_Utils = require("ECharts.Utils");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Toolbox = require("ECharts.Toolbox");
var ECharts_Timeline = require("ECharts.Timeline");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Style_Text = require("ECharts.Style.Text");
var ECharts_Style_Node = require("ECharts.Style.Node");
var ECharts_Style_Link = require("ECharts.Style.Link");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Style_Item = require("ECharts.Style.Item");
var ECharts_Style_Chord = require("ECharts.Style.Chord");
var ECharts_Style_Checkpoint = require("ECharts.Style.Checkpoint");
var ECharts_Style_Area = require("ECharts.Style.Area");
var ECharts_Series_Gauge = require("ECharts.Series.Gauge");
var ECharts_Series_Force = require("ECharts.Series.Force");
var ECharts_Series_EventRiver = require("ECharts.Series.EventRiver");
var ECharts_RoamController = require("ECharts.RoamController");
var ECharts_Mark_Point = require("ECharts.Mark.Point");
var ECharts_Mark_Line = require("ECharts.Mark.Line");
var ECharts_Mark_Effect = require("ECharts.Mark.Effect");
var ECharts_Mark_Data = require("ECharts.Mark.Data");
var ECharts_Loading = require("ECharts.Loading");
var ECharts_Item_Value = require("ECharts.Item.Value");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Image = require("ECharts.Image");
var ECharts_Grid = require("ECharts.Grid");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Events = require("ECharts.Events");
var ECharts_Effects = require("ECharts.Effects");
var ECharts_DataZoom = require("ECharts.DataZoom");
var ECharts_DataRange = require("ECharts.DataRange");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Connect = require("ECharts.Connect");
var ECharts_Common = require("ECharts.Common");
var ECharts_Color = require("ECharts.Color");
var ECharts_AddData = require("ECharts.AddData");
var Data_Foldable = require("Data.Foldable");
var ratingsOptions = function (aggregated) {
    return function (metric) {
        return function (playerRatings) {
            var ratings = Data_Maybe.maybe([  ])(Data_Tuple.snd)(Data_Array.head(playerRatings));
            var points = function (ratings_1) {
                return Prelude.map(Prelude.functorArray)(Prelude[">>>"](Prelude.semigroupoidFn)(Tip.calculate(metric)(0))(Util.roundTo(2)))(Data_Array.range(0)(Prelude["-"](Prelude.ringInt)(Data_Array.length(ratings_1))(1)));
            };
            var datum = function (ratings_1) {
                return function (i) {
                    return Data_Int.toNumber(Data_Array.length(Data_Array.filter(function (r) {
                        return r.value === i;
                    })(ratings_1)));
                };
            };
            var series = function (_61) {
                return new ECharts_Series.BarSeries({
                    common: (function () {
                        var _89 = {};
                        for (var _90 in ECharts_Series.universalSeriesDefault) {
                            if (ECharts_Series.universalSeriesDefault.hasOwnProperty(_90)) {
                                _89[_90] = ECharts_Series.universalSeriesDefault[_90];
                            };
                        };
                        _89.name = new Data_Maybe.Just(Util.pretty(Player.prettyPlayer)(_61.value0));
                        return _89;
                    })(), 
                    barSeries: (function () {
                        var _92 = {};
                        for (var _93 in ECharts_Series.barSeriesDefault) {
                            if (ECharts_Series.barSeriesDefault.hasOwnProperty(_93)) {
                                _92[_93] = ECharts_Series.barSeriesDefault[_93];
                            };
                        };
                        _92.barGap = new Data_Maybe.Just(new ECharts_Common.Pixel(0.0));
                        _92.barCategoryGap = new Data_Maybe.Just(new ECharts_Common.Pixel(0.0));
                        _92.data = Data_Maybe.Just.create((function () {
                            if (aggregated) {
                                return Prelude.map(Prelude.functorArray)(Prelude[">>>"](Prelude.semigroupoidFn)(datum(_61.value1))(Prelude[">>>"](Prelude.semigroupoidFn)(ECharts_Item_Value.Simple.create)(ECharts_Item_Data.Value.create)))(points(_61.value1));
                            };
                            if (!aggregated) {
                                return Prelude.map(Prelude.functorArray)(Prelude[">>>"](Prelude.semigroupoidFn)(function (_3) {
                                    return _3.value;
                                })(Prelude[">>>"](Prelude.semigroupoidFn)(ECharts_Item_Value.Simple.create)(ECharts_Item_Data.Value.create)))(Data_Array.sortBy(Data_Function.on(Prelude.compare(Prelude.ordNumber))(function (_4) {
                                    return _4.value;
                                }))(_61.value1));
                            };
                            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Charts.purs line 55, column 1 - line 56, column 1: " + [ aggregated.constructor.name ]);
                        })());
                        return _92;
                    })()
                });
            };
            var categories = (function () {
                var _96 = Prelude[">="](Prelude.ordInt)(Data_Array.length(playerRatings))(1);
                if (_96) {
                    return Prelude.map(Prelude.functorArray)(function (_60) {
                        return "";
                    })(ratings);
                };
                if (!_96) {
                    return Prelude.map(Prelude.functorArray)(Prelude[">>>"](Prelude.semigroupoidFn)(function (_1) {
                        return _1.team;
                    })(Team["short"]))(Data_Array.sortBy(Data_Function.on(Prelude.compare(Prelude.ordNumber))(function (_2) {
                        return _2.value;
                    }))(ratings));
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Charts.purs line 55, column 1 - line 56, column 1: " + [ _96.constructor.name ]);
            })();
            return ECharts_Options.Option((function () {
                var _113 = {};
                for (var _114 in ECharts_Options.optionDefault) {
                    if (ECharts_Options.optionDefault.hasOwnProperty(_114)) {
                        _113[_114] = ECharts_Options.optionDefault[_114];
                    };
                };
                _113.title = Data_Maybe.Just.create((function () {
                    var _99 = {};
                    for (var _100 in ECharts_Title.titleDefault) {
                        if (ECharts_Title.titleDefault.hasOwnProperty(_100)) {
                            _99[_100] = ECharts_Title.titleDefault[_100];
                        };
                    };
                    _99.text = Data_Maybe.Just.create((function () {
                        if (aggregated) {
                            return "Aggregierte ";
                        };
                        if (!aggregated) {
                            return "";
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Charts.purs line 55, column 1 - line 56, column 1: " + [ aggregated.constructor.name ]);
                    })() + "Punkteverteilung");
                    return _99;
                })());
                _113.legend = Data_Maybe.Just.create(ECharts_Legend.Legend((function () {
                    var _102 = {};
                    for (var _103 in ECharts_Legend.legendDefault) {
                        if (ECharts_Legend.legendDefault.hasOwnProperty(_103)) {
                            _102[_103] = ECharts_Legend.legendDefault[_103];
                        };
                    };
                    _102.show = new Data_Maybe.Just(true);
                    _102.selected = (function () {
                        var _101 = Prelude[">="](Prelude.ordInt)(Data_Array.length(playerRatings))(4);
                        if (_101) {
                            return new Data_Maybe.Just(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)(Prelude.map(Prelude.functorArray)(Prelude[">>>"](Prelude.semigroupoidFn)(Data_Tuple.fst)(Prelude[">>>"](Prelude.semigroupoidFn)(Util.pretty(Player.prettyPlayer))(function (x) {
                                return new Data_Tuple.Tuple(x, false);
                            })))(playerRatings))));
                        };
                        if (!_101) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Charts.purs line 55, column 1 - line 56, column 1: " + [ _101.constructor.name ]);
                    })();
                    _102.data = Data_Maybe.Just.create(Prelude.map(Prelude.functorArray)(Prelude[">>>"](Prelude.semigroupoidFn)(Data_Tuple.fst)(Prelude[">>>"](Prelude.semigroupoidFn)(Util.pretty(Player.prettyPlayer))(ECharts_Legend.legendItemDefault)))(playerRatings));
                    return _102;
                })()));
                _113.xAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create(ECharts_Axis.Axis((function () {
                    var _107 = {};
                    for (var _108 in ECharts_Axis.axisDefault) {
                        if (ECharts_Axis.axisDefault.hasOwnProperty(_108)) {
                            _107[_108] = ECharts_Axis.axisDefault[_108];
                        };
                    };
                    _107.type = new Data_Maybe.Just(ECharts_Axis.CategoryAxis.value);
                    _107.data = Data_Maybe.Just.create(Prelude.map(Prelude.functorArray)(ECharts_Axis.CommonAxisData.create)((function () {
                        if (aggregated) {
                            return Prelude.map(Prelude.functorArray)(Prelude.show(Prelude.showNumber))(points(ratings));
                        };
                        if (!aggregated) {
                            return categories;
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Charts.purs line 55, column 1 - line 56, column 1: " + [ aggregated.constructor.name ]);
                    })()));
                    _107.splitLine = Data_Maybe.Just.create(ECharts_Axis.AxisSplitLine((function () {
                        var _105 = {};
                        for (var _106 in ECharts_Axis.axisSplitLineDefault) {
                            if (ECharts_Axis.axisSplitLineDefault.hasOwnProperty(_106)) {
                                _105[_106] = ECharts_Axis.axisSplitLineDefault[_106];
                            };
                        };
                        _105.show = new Data_Maybe.Just(false);
                        return _105;
                    })()));
                    return _107;
                })())));
                _113.yAxis = Data_Maybe.Just.create(ECharts_Axis.OneAxis.create(ECharts_Axis.Axis((function () {
                    var _111 = {};
                    for (var _112 in ECharts_Axis.axisDefault) {
                        if (ECharts_Axis.axisDefault.hasOwnProperty(_112)) {
                            _111[_112] = ECharts_Axis.axisDefault[_112];
                        };
                    };
                    _111.type = new Data_Maybe.Just(ECharts_Axis.ValueAxis.value);
                    _111.min = new Data_Maybe.Just(0.0);
                    _111.max = (function () {
                        if (aggregated) {
                            return new Data_Maybe.Just(6.0);
                        };
                        if (!aggregated) {
                            return new Data_Maybe.Just(Tip.calculate(metric)(1)(18));
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Charts.purs line 55, column 1 - line 56, column 1: " + [ aggregated.constructor.name ]);
                    })();
                    _111.splitNumber = (function () {
                        if (aggregated) {
                            return new Data_Maybe.Just(6.0);
                        };
                        if (!aggregated) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Charts.purs line 55, column 1 - line 56, column 1: " + [ aggregated.constructor.name ]);
                    })();
                    return _111;
                })())));
                _113.series = Data_Maybe.Just.create(Prelude.map(Prelude.functorArray)(Prelude[">>>"](Prelude.semigroupoidFn)(series)(Data_Maybe.Just.create))(playerRatings));
                return _113;
            })());
        };
    };
};
var renderRatingsChart = function (aggregated) {
    return function (metric) {
        return function (playerRatings) {
            return function (class_) {
                return function __do() {
                    var _19 = DOM_HTML.window();
                    var _18 = DOM_HTML_Window.document(_19)();
                    var _17 = DOM_Node_Document.getElementsByClassName(class_)(DOM_HTML_Types.htmlDocumentToDocument(_18))();
                    var _16 = DOM_Node_HTMLCollection.item(0)(_17)();
                    return (function () {
                        var _119 = DOM_HTML_Types.readHTMLElement(Data_Foreign.toForeign(_16));
                        if (_119 instanceof Data_Either.Left) {
                            return Prelude["return"](Control_Monad_Eff.applicativeEff)(Data_Maybe.Nothing.value);
                        };
                        if (_119 instanceof Data_Either.Right) {
                            return function __do() {
                                var _15 = ECharts_Chart.init(Data_Maybe.Nothing.value)(_119.value0)();
                                ECharts_Options.setOption(ratingsOptions(aggregated)(metric)(playerRatings))(true)(_15)();
                                return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Maybe.Just(_15))();
                            };
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Charts.purs line 41, column 1 - line 43, column 1: " + [ _119.constructor.name ]);
                    })()();
                };
            };
        };
    };
};
module.exports = {
    ratingsOptions: ratingsOptions, 
    renderRatingsChart: renderRatingsChart
};

},{"Control.Apply":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Apply/index.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Control.Monad.Eff.JQuery":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.JQuery/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","DOM.HTML":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML/index.js","DOM.HTML.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Types/index.js","DOM.HTML.Window":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Window/index.js","DOM.Node.Document":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.Document/index.js","DOM.Node.HTMLCollection":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.HTMLCollection/index.js","Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.Int":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Nullable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Nullable/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.String":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts/index.js","ECharts.AddData":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.AddData/index.js","ECharts.Axis":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Axis/index.js","ECharts.Chart":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Chart/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Connect":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Connect/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","ECharts.DataRange":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.DataRange/index.js","ECharts.DataZoom":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.DataZoom/index.js","ECharts.Effects":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Effects/index.js","ECharts.Events":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Events/index.js","ECharts.Formatter":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Formatter/index.js","ECharts.Grid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Grid/index.js","ECharts.Image":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Image/index.js","ECharts.Item.Data":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Item.Data/index.js","ECharts.Item.Value":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Item.Value/index.js","ECharts.Legend":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Legend/index.js","ECharts.Loading":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Loading/index.js","ECharts.Mark.Data":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Data/index.js","ECharts.Mark.Effect":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Effect/index.js","ECharts.Mark.Line":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Line/index.js","ECharts.Mark.Point":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Point/index.js","ECharts.Options":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Options/index.js","ECharts.RoamController":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.RoamController/index.js","ECharts.Series":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series/index.js","ECharts.Series.EventRiver":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series.EventRiver/index.js","ECharts.Series.Force":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series.Force/index.js","ECharts.Series.Gauge":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series.Gauge/index.js","ECharts.Style.Area":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Area/index.js","ECharts.Style.Checkpoint":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Checkpoint/index.js","ECharts.Style.Chord":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Chord/index.js","ECharts.Style.Item":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Item/index.js","ECharts.Style.Line":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Line/index.js","ECharts.Style.Link":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Link/index.js","ECharts.Style.Node":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Node/index.js","ECharts.Style.Text":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Text/index.js","ECharts.Symbol":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Symbol/index.js","ECharts.Timeline":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Timeline/index.js","ECharts.Title":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Title/index.js","ECharts.Toolbox":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Toolbox/index.js","ECharts.Tooltip":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Tooltip/index.js","ECharts.Utils":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Utils/index.js","Halogen.HTML":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML/index.js","Halogen.HTML.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Core/index.js","Halogen.HTML.Elements":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Elements/index.js","Halogen.HTML.Properties":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Properties/index.js","Player":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Player/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js","Ranking":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Ranking/index.js","Ratings":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Ratings/index.js","Team":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Team/index.js","Tip":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Tip/index.js","Util":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Util/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Alt = function (__superclass_Prelude$dotFunctor_0, alt) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.alt = alt;
};
var altArray = new Alt(function () {
    return Prelude.functorArray;
}, Prelude.append(Prelude.semigroupArray));
var alt = function (dict) {
    return dict.alt;
};
var $less$bar$greater = function (__dict_Alt_0) {
    return alt(__dict_Alt_0);
};
module.exports = {
    Alt: Alt, 
    "<|>": $less$bar$greater, 
    alt: alt, 
    altArray: altArray
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alternative/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Lazy = require("Control.Lazy");
var Control_Plus = require("Control.Plus");
var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
    this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
};
var alternativeArray = new Alternative(function () {
    return Control_Plus.plusArray;
}, function () {
    return Prelude.applicativeArray;
});
module.exports = {
    Alternative: Alternative, 
    alternativeArray: alternativeArray
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Lazy":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Lazy/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Apply/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var $less$times = function (__dict_Apply_0) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](__dict_Apply_0)(Prelude["<$>"](__dict_Apply_0["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
        };
    };
};
var $times$greater = function (__dict_Apply_1) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](__dict_Apply_1)(Prelude["<$>"](__dict_Apply_1["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
        };
    };
};
var lift5 = function (__dict_Apply_2) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<$>"](__dict_Apply_2["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
var lift4 = function (__dict_Apply_3) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return Prelude["<*>"](__dict_Apply_3)(Prelude["<*>"](__dict_Apply_3)(Prelude["<*>"](__dict_Apply_3)(Prelude["<$>"](__dict_Apply_3["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift3 = function (__dict_Apply_4) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return Prelude["<*>"](__dict_Apply_4)(Prelude["<*>"](__dict_Apply_4)(Prelude["<$>"](__dict_Apply_4["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift2 = function (__dict_Apply_5) {
    return function (f) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_5)(Prelude["<$>"](__dict_Apply_5["__superclass_Prelude.Functor_0"]())(f)(a))(b);
            };
        };
    };
};
module.exports = {
    lift5: lift5, 
    lift4: lift4, 
    lift3: lift3, 
    lift2: lift2, 
    "*>": $times$greater, 
    "<*": $less$times
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Biapplicative/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Biapply = require("Control.Biapply");
var Biapplicative = function (__superclass_Control$dotBiapply$dotBiapply_0, bipure) {
    this["__superclass_Control.Biapply.Biapply_0"] = __superclass_Control$dotBiapply$dotBiapply_0;
    this.bipure = bipure;
};
var bipure = function (dict) {
    return dict.bipure;
};
module.exports = {
    Biapplicative: Biapplicative, 
    bipure: bipure
};

},{"Control.Biapply":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Biapply/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Biapply/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Bifunctor = require("Data.Bifunctor");
var Biapply = function (__superclass_Data$dotBifunctor$dotBifunctor_0, biapply) {
    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    this.biapply = biapply;
};
var $less$less$dollar$greater$greater = Prelude.id(Prelude.categoryFn);
var biapply = function (dict) {
    return dict.biapply;
};
var $less$less$times$greater$greater = function (__dict_Biapply_0) {
    return biapply(__dict_Biapply_0);
};
var bilift2 = function (__dict_Biapply_1) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return $less$less$times$greater$greater(__dict_Biapply_1)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_1["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b);
                };
            };
        };
    };
};
var bilift3 = function (__dict_Biapply_2) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return $less$less$times$greater$greater(__dict_Biapply_2)($less$less$times$greater$greater(__dict_Biapply_2)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_2["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b))(c);
                    };
                };
            };
        };
    };
};
var $times$greater$greater = function (__dict_Biapply_3) {
    return function (a) {
        return function (b) {
            return $less$less$times$greater$greater(__dict_Biapply_3)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_3["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(Prelude["const"](Prelude.id(Prelude.categoryFn))))(a))(b);
        };
    };
};
var $less$less$times = function (__dict_Biapply_4) {
    return function (a) {
        return function (b) {
            return $less$less$times$greater$greater(__dict_Biapply_4)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_4["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"])(Prelude["const"]))(a))(b);
        };
    };
};
module.exports = {
    Biapply: Biapply, 
    bilift3: bilift3, 
    bilift2: bilift2, 
    "<<*": $less$less$times, 
    "*>>": $times$greater$greater, 
    "<<*>>": $less$less$times$greater$greater, 
    biapply: biapply, 
    "<<$>>": $less$less$dollar$greater$greater
};

},{"Data.Bifunctor":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bifunctor/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Bind/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var $greater$eq$greater = function (__dict_Bind_0) {
    return function (f) {
        return function (g) {
            return function (a) {
                return Prelude[">>="](__dict_Bind_0)(f(a))(g);
            };
        };
    };
};
var $eq$less$less = function (__dict_Bind_1) {
    return function (f) {
        return function (m) {
            return Prelude[">>="](__dict_Bind_1)(m)(f);
        };
    };
};
var $less$eq$less = function (__dict_Bind_2) {
    return function (f) {
        return function (g) {
            return function (a) {
                return $eq$less$less(__dict_Bind_2)(f)(g(a));
            };
        };
    };
};
var join = function (__dict_Bind_3) {
    return function (m) {
        return Prelude[">>="](__dict_Bind_3)(m)(Prelude.id(Prelude.categoryFn));
    };
};
var ifM = function (__dict_Bind_4) {
    return function (cond) {
        return function (t) {
            return function (f) {
                return Prelude[">>="](__dict_Bind_4)(cond)(function (cond$prime) {
                    if (cond$prime) {
                        return t;
                    };
                    if (!cond$prime) {
                        return f;
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-control/src/Control/Bind.purs line 44, column 1 - line 45, column 1: " + [ cond$prime.constructor.name ]);
                });
            };
        };
    };
};
module.exports = {
    ifM: ifM, 
    join: join, 
    "<=<": $less$eq$less, 
    ">=>": $greater$eq$greater, 
    "=<<": $eq$less$less
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Comonad/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Extend = require("Control.Extend");
var Comonad = function (__superclass_Control$dotExtend$dotExtend_0, extract) {
    this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
    this.extract = extract;
};
var extract = function (dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad, 
    extract: extract
};

},{"Control.Extend":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Extend/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Coroutine.Aff/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Aff_AVar = require("Control.Monad.Aff.AVar");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Monad_Aff = require("Control.Monad.Aff");
var Control_Coroutine = require("Control.Coroutine");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Data_Functor = require("Data.Functor");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Free_Trans = require("Control.Monad.Free.Trans");
var produce = function (recv) {
    return Prelude.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(Control_Monad_Aff.monadAff))(Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.makeVar))(function (_56) {
        return Prelude.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(Control_Monad_Aff.monadAff))(Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(Control_Monad_Aff.monadAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(recv(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Aff.launchAff)(Control_Monad_Aff_AVar.putVar(_56))))))(function () {
            return Control_Coroutine.producer(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.takeVar(_56));
        });
    });
};
module.exports = {
    produce: produce
};

},{"Control.Coroutine":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Coroutine/index.js","Control.Monad.Aff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff/index.js","Control.Monad.Aff.AVar":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff.AVar/index.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","Control.Monad.Free.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Free.Trans/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Functor":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Coroutine/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Control_Monad_Free_Trans = require("Control.Monad.Free.Trans");
var Data_Identity = require("Data.Identity");
var Data_Bifunctor = require("Data.Bifunctor");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Data_Functor = require("Data.Functor");
var Data_Profunctor = require("Data.Profunctor");
var Data_Tuple = require("Data.Tuple");
var Data_Either = require("Data.Either");
var Transform = function (x) {
    return x;
};
var Emit = (function () {
    function Emit(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Emit.create = function (value0) {
        return function (value1) {
            return new Emit(value0, value1);
        };
    };
    return Emit;
})();
var Await = function (x) {
    return x;
};
var runProcess = function (__dict_MonadRec_1) {
    return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(__dict_MonadRec_1)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["return"]((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]()))(Data_Identity.runIdentity));
};
var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (_227) {
            return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(_227);
        };
    };
});
var loop = function (__dict_Functor_2) {
    return function (__dict_Monad_3) {
        return function (me) {
            return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(__dict_Functor_2)(__dict_Monad_3))(function (_209) {
                return Prelude.map(Control_Monad_Free_Trans.functorFreeT(__dict_Functor_2)(((__dict_Monad_3["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Data_Maybe.maybe(new Data_Either.Left(Prelude.unit))(Data_Either.Right.create))(me);
            })(Prelude.unit);
        };
    };
};
var fuseWith = function (__dict_Functor_4) {
    return function (__dict_Functor_5) {
        return function (__dict_Functor_6) {
            return function (__dict_MonadRec_7) {
                return function (zap) {
                    return function (fs) {
                        return function (gs) {
                            var go = function (_225) {
                                return Prelude.bind((__dict_MonadRec_7["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(Control_Monad_Free_Trans.resume(__dict_Functor_5)(__dict_MonadRec_7)(_225.value1))(function (_35) {
                                    return Prelude.bind((__dict_MonadRec_7["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(Control_Monad_Free_Trans.resume(__dict_Functor_4)(__dict_MonadRec_7)(_225.value0))(function (_34) {
                                        var _709 = Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(zap(Data_Tuple.Tuple.create))(_34))(_35);
                                        if (_709 instanceof Data_Either.Left) {
                                            return Prelude["return"]((__dict_MonadRec_7["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(_709.value0));
                                        };
                                        if (_709 instanceof Data_Either.Right) {
                                            return Prelude["return"]((__dict_MonadRec_7["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(Prelude.map(__dict_Functor_6)(function (t) {
                                                return Control_Monad_Free_Trans.freeT(function (_210) {
                                                    return go(t);
                                                });
                                            })(_709.value0)));
                                        };
                                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-coroutines/src/Control/Coroutine.purs line 49, column 1 - line 54, column 1: " + [ _709.constructor.name ]);
                                    });
                                });
                            };
                            return Control_Monad_Free_Trans.freeT(function (_211) {
                                return go(new Data_Tuple.Tuple(fs, gs));
                            });
                        };
                    };
                };
            };
        };
    };
};
var functorAwait = new Prelude.Functor(Data_Profunctor.rmap(profunctorAwait));
var $bslash$div = function (__dict_MonadRec_11) {
    return fuseWith(functorAwait)(functorAwait)(functorAwait)(__dict_MonadRec_11)(function (f) {
        return function (_224) {
            return function (_223) {
                return function (_222) {
                    return f(_224(_222.value0))(_223(_222.value1));
                };
            };
        };
    });
};
var bifunctorTransform = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (_228) {
            return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(f)(g))(_228);
        };
    };
});
var functorTransform = new Prelude.Functor(Data_Bifunctor.rmap(bifunctorTransform));
var transform = function (__dict_Monad_0) {
    return function (f) {
        return Control_Monad_Free_Trans.liftFreeT(functorTransform)(__dict_Monad_0)(function (i) {
            return new Data_Tuple.Tuple(f(i), Prelude.unit);
        });
    };
};
var $tilde$dollar = function (__dict_MonadRec_12) {
    return fuseWith(functorTransform)(functorAwait)(functorAwait)(__dict_MonadRec_12)(function (f) {
        return function (_217) {
            return function (_216) {
                return function (i) {
                    var _726 = _217(i);
                    return f(_726.value1)(_216(_726.value0));
                };
            };
        };
    });
};
var $tilde$tilde = function (__dict_MonadRec_13) {
    return fuseWith(functorTransform)(functorTransform)(functorTransform)(__dict_MonadRec_13)(function (f) {
        return function (_219) {
            return function (_218) {
                return function (i) {
                    var _731 = _219(i);
                    var _732 = _218(_731.value0);
                    return new Data_Tuple.Tuple(_732.value0, f(_731.value1)(_732.value1));
                };
            };
        };
    });
};
var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (_226) {
            return new Emit(f(_226.value0), g(_226.value1));
        };
    };
});
var functorEmit = new Prelude.Functor(Data_Bifunctor.rmap(bifunctorEmit));
var emit = function (__dict_Monad_14) {
    return function (o) {
        return Control_Monad_Free_Trans.liftFreeT(functorEmit)(__dict_Monad_14)(new Emit(o, Prelude.unit));
    };
};
var producer = function (__dict_Monad_15) {
    return function (recv) {
        return loop(functorEmit)(__dict_Monad_15)(Prelude.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(__dict_Monad_15))(Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(__dict_Monad_15)(recv))(function (_36) {
            if (_36 instanceof Data_Either.Left) {
                return Data_Functor["$>"](Control_Monad_Free_Trans.functorFreeT(functorEmit)(((__dict_Monad_15["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(emit(__dict_Monad_15)(_36.value0))(Data_Maybe.Nothing.value);
            };
            if (_36 instanceof Data_Either.Right) {
                return Prelude["return"](Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(__dict_Monad_15))(new Data_Maybe.Just(_36.value0));
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-coroutines/src/Control/Coroutine.purs line 83, column 1 - line 84, column 1: " + [ _36.constructor.name ]);
        }));
    };
};
var $dollar$dollar = function (__dict_MonadRec_8) {
    return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(__dict_MonadRec_8)(function (f) {
        return function (_213) {
            return function (_212) {
                return f(_213.value1)(_212(_213.value0));
            };
        };
    });
};
var $dollar$tilde = function (__dict_MonadRec_9) {
    return fuseWith(functorEmit)(functorTransform)(functorEmit)(__dict_MonadRec_9)(function (f) {
        return function (_215) {
            return function (_214) {
                var _752 = _214(_215.value0);
                return new Emit(_752.value0, f(_215.value1)(_752.value1));
            };
        };
    });
};
var $div$bslash = function (__dict_MonadRec_10) {
    return fuseWith(functorEmit)(functorEmit)(functorEmit)(__dict_MonadRec_10)(function (f) {
        return function (_221) {
            return function (_220) {
                return new Emit(new Data_Tuple.Tuple(_221.value0, _220.value0), f(_221.value1)(_220.value1));
            };
        };
    });
};
var await = function (__dict_Monad_16) {
    return Control_Monad_Free_Trans.liftFreeT(functorAwait)(__dict_Monad_16)(Prelude.id(Prelude.categoryFn));
};
var consumer = function (__dict_Monad_17) {
    return function (send) {
        return loop(functorAwait)(__dict_Monad_17)(Prelude.bind(Control_Monad_Free_Trans.bindFreeT(functorAwait)(__dict_Monad_17))(await(__dict_Monad_17))(function (_37) {
            return Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(functorAwait))(__dict_Monad_17)(send(_37));
        }));
    };
};
module.exports = {
    Transform: Transform, 
    Await: Await, 
    Emit: Emit, 
    "\\/": $bslash$div, 
    "/\\": $div$bslash, 
    "~~": $tilde$tilde, 
    "~$": $tilde$dollar, 
    "$~": $dollar$tilde, 
    "$$": $dollar$dollar, 
    transform: transform, 
    consumer: consumer, 
    await: await, 
    producer: producer, 
    emit: emit, 
    fuseWith: fuseWith, 
    runProcess: runProcess, 
    loop: loop, 
    bifunctorEmit: bifunctorEmit, 
    functorEmit: functorEmit, 
    profunctorAwait: profunctorAwait, 
    functorAwait: functorAwait, 
    bifunctorTransform: bifunctorTransform, 
    functorTransform: functorTransform
};

},{"Control.Monad.Free.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Free.Trans/index.js","Control.Monad.Rec.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Rec.Class/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","Data.Bifunctor":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bifunctor/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Functor":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor/index.js","Data.Identity":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Identity/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Profunctor":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Profunctor/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Extend/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Extend = function (__superclass_Prelude$dotFunctor_0, extend) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.extend = extend;
};
var extendFn = function (__dict_Semigroup_0) {
    return new Extend(function () {
        return Prelude.functorFn;
    }, function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Prelude["<>"](__dict_Semigroup_0)(w)(w$prime));
                });
            };
        };
    });
};
var extend = function (dict) {
    return dict.extend;
};
var $less$less$eq = function (__dict_Extend_1) {
    return extend(__dict_Extend_1);
};
var $eq$less$eq = function (__dict_Extend_2) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f($less$less$eq(__dict_Extend_2)(g)(w));
            };
        };
    };
};
var $eq$greater$eq = function (__dict_Extend_3) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g($less$less$eq(__dict_Extend_3)(f)(w));
            };
        };
    };
};
var $eq$greater$greater = function (__dict_Extend_4) {
    return function (w) {
        return function (f) {
            return $less$less$eq(__dict_Extend_4)(f)(w);
        };
    };
};
var duplicate = function (__dict_Extend_5) {
    return extend(__dict_Extend_5)(Prelude.id(Prelude.categoryFn));
};
module.exports = {
    Extend: Extend, 
    duplicate: duplicate, 
    "=<=": $eq$less$eq, 
    "=>=": $eq$greater$eq, 
    "=>>": $eq$greater$greater, 
    "<<=": $less$less$eq, 
    extend: extend, 
    extendFn: extendFn
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Lazy/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Lazy = function (defer) {
    this.defer = defer;
};
var defer = function (dict) {
    return dict.defer;
};
var fix = function (__dict_Lazy_0) {
    return function (f) {
        return defer(__dict_Lazy_0)(function (_234) {
            return f(fix(__dict_Lazy_0)(f));
        });
    };
};
module.exports = {
    Lazy: Lazy, 
    fix: fix, 
    defer: defer
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff.AVar/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Aff.AVar

exports._makeVar = function (nonCanceler) {
  return function(success, error) {
    try {
      success({
        consumers: [],
        producers: [],
        error: undefined 
      });
    } catch (e) {
      error(e);
    }

    return nonCanceler;
  }
}

exports._takeVar = function (nonCanceler, avar) {
  return function(success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else if (avar.producers.length > 0) {
      var producer = avar.producers.shift();

      producer(success, error);
    } else {
      avar.consumers.push({success: success, error: error});
    }

    return nonCanceler;
  } 
}

exports._putVar = function (nonCanceler, avar, a) {
  return function(success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else if (avar.consumers.length === 0) {
      avar.producers.push(function(success, error) {
        try {
          success(a);
        } catch (e) {
          error(e);
        }
      });

      success({});
    } else {
      var consumer = avar.consumers.shift();

      try {
        consumer.success(a);
      } catch (e) {
        error(e);

        return;                  
      }

      success({});
    }

    return nonCanceler;
  }
}

exports._killVar = function (nonCanceler, avar, e) {
  return function(success, error) {
    if (avar.error !== undefined) {
      error(avar.error);
    } else {
      var errors = [];

      avar.error = e;

      while (avar.consumers.length > 0) {
        var consumer = avar.consumers.shift();

        try {
          consumer.error(e);
        } catch (e) {
          errors.push(e);              
        }
      }

      if (errors.length > 0) error(errors[0]);
      else success({});
    }

    return nonCanceler;
  }
}

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff.AVar/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Aff = require("Control.Monad.Aff");
var Prelude = require("Prelude");
var Data_Function = require("Data.Function");
var Control_Monad_Eff_Exception = require("Control.Monad.Eff.Exception");
var takeVar = function (q) {
    return $foreign._takeVar(Control_Monad_Aff.nonCanceler, q);
};
var putVar = function (q) {
    return function (a) {
        return $foreign._putVar(Control_Monad_Aff.nonCanceler, q, a);
    };
};
var modifyVar = function (f) {
    return function (v) {
        return Prelude[">>="](Control_Monad_Aff.bindAff)(takeVar(v))(Prelude[">>>"](Prelude.semigroupoidFn)(f)(putVar(v)));
    };
};
var makeVar = $foreign._makeVar(Control_Monad_Aff.nonCanceler);
var makeVar$prime = function (a) {
    return Prelude.bind(Control_Monad_Aff.bindAff)(makeVar)(function (_55) {
        return Prelude.bind(Control_Monad_Aff.bindAff)(putVar(_55)(a))(function () {
            return Prelude["return"](Control_Monad_Aff.applicativeAff)(_55);
        });
    });
};
var killVar = function (q) {
    return function (e) {
        return $foreign._killVar(Control_Monad_Aff.nonCanceler, q, e);
    };
};
module.exports = {
    takeVar: takeVar, 
    putVar: putVar, 
    modifyVar: modifyVar, 
    "makeVar'": makeVar$prime, 
    makeVar: makeVar, 
    killVar: killVar
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff.AVar/foreign.js","Control.Monad.Aff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff/index.js","Control.Monad.Eff.Exception":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Exception/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff.Par/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Control_Monad_Aff_AVar = require("Control.Monad.Aff.AVar");
var Control_Monad_Aff = require("Control.Monad.Aff");
var Data_Either = require("Data.Either");
var Control_Plus = require("Control.Plus");
var Control_Apply = require("Control.Apply");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Monad_Error_Class = require("Control.Monad.Error.Class");
var Par = function (x) {
    return x;
};
var runPar = function (_260) {
    return _260;
};
var functorPar = new Prelude.Functor(function (f) {
    return function (_261) {
        return Prelude["<$>"](Control_Monad_Aff.functorAff)(f)(_261);
    };
});
var applyPar = new Prelude.Apply(function () {
    return functorPar;
}, function (_262) {
    return function (_263) {
        return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (_60) {
            return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (_59) {
                return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.forkAff(Prelude[">>="](Control_Monad_Aff.bindAff)(_262)(Control_Monad_Aff_AVar.putVar(_60))))(function (_58) {
                    return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.forkAff(Prelude[">>="](Control_Monad_Aff.bindAff)(_263)(Control_Monad_Aff_AVar.putVar(_59))))(function (_57) {
                        return Control_Monad_Aff.cancelWith(Prelude["<*>"](Control_Monad_Aff.applyAff)(Control_Monad_Aff_AVar.takeVar(_60))(Control_Monad_Aff_AVar.takeVar(_59)))(Prelude["<>"](Control_Monad_Aff.semigroupCanceler)(_58)(_57));
                    });
                });
            });
        });
    };
});
var semigroupPar = function (__dict_Semigroup_0) {
    return new Prelude.Semigroup(function (a) {
        return function (b) {
            return Prelude["<*>"](applyPar)(Prelude["<$>"](functorPar)(Prelude.append(__dict_Semigroup_0))(a))(b);
        };
    });
};
var applicativePar = new Prelude.Applicative(function () {
    return applyPar;
}, function (v) {
    return Prelude.pure(Control_Monad_Aff.applicativeAff)(v);
});
var monoidPar = function (__dict_Monoid_1) {
    return new Data_Monoid.Monoid(function () {
        return semigroupPar(__dict_Monoid_1["__superclass_Prelude.Semigroup_0"]());
    }, Prelude.pure(applicativePar)(Data_Monoid.mempty(__dict_Monoid_1)));
};
var altPar = new Control_Alt.Alt(function () {
    return functorPar;
}, function (_264) {
    return function (_265) {
        var maybeKill = function (va) {
            return function (ve) {
                return function (err) {
                    return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ve))(function (_61) {
                        return Prelude.bind(Control_Monad_Aff.bindAff)((function () {
                            var _730 = Prelude["=="](Prelude.eqInt)(_61)(1);
                            if (_730) {
                                return Control_Monad_Aff_AVar.killVar(va)(err);
                            };
                            if (!_730) {
                                return Prelude["return"](Control_Monad_Aff.applicativeAff)(Prelude.unit);
                            };
                            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-aff/src/Control/Monad/Aff/Par.purs line 51, column 11 - line 55, column 7: " + [ _730.constructor.name ]);
                        })())(function () {
                            return Control_Monad_Aff_AVar.putVar(ve)(Prelude["+"](Prelude.semiringInt)(_61)(1));
                        });
                    });
                };
            };
        };
        return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (_65) {
            return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar["makeVar'"](0))(function (_64) {
                return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.forkAff(Prelude[">>="](Control_Monad_Aff.bindAff)(Control_Monad_Aff.attempt(_264))(Data_Either.either(maybeKill(_65)(_64))(Control_Monad_Aff_AVar.putVar(_65)))))(function (_63) {
                    return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.forkAff(Prelude[">>="](Control_Monad_Aff.bindAff)(Control_Monad_Aff.attempt(_265))(Data_Either.either(maybeKill(_65)(_64))(Control_Monad_Aff_AVar.putVar(_65)))))(function (_62) {
                        return Control_Monad_Aff.cancelWith(Control_Monad_Aff_AVar.takeVar(_65))(Prelude["<>"](Control_Monad_Aff.semigroupCanceler)(_63)(_62));
                    });
                });
            });
        });
    };
});
var plusPar = new Control_Plus.Plus(function () {
    return altPar;
}, Control_Plus.empty(Control_Monad_Aff.plusAff));
var alternativePar = new Control_Alternative.Alternative(function () {
    return plusPar;
}, function () {
    return applicativePar;
});
module.exports = {
    Par: Par, 
    runPar: runPar, 
    semigroupPar: semigroupPar, 
    monoidPar: monoidPar, 
    functorPar: functorPar, 
    applyPar: applyPar, 
    applicativePar: applicativePar, 
    altPar: altPar, 
    plusPar: plusPar, 
    alternativePar: alternativePar
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Alternative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alternative/index.js","Control.Apply":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Apply/index.js","Control.Monad.Aff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff/index.js","Control.Monad.Aff.AVar":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff.AVar/index.js","Control.Monad.Error.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Error.Class/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Aff

exports._cancelWith = function (nonCanceler, aff, canceler1) {
  return function(success, error) {
    var canceler2 = aff(success, error);

    return function(e) {
      return function(success, error) {
        var cancellations = 0;
        var result        = false;
        var errored       = false;

        var s = function(bool) {
          cancellations = cancellations + 1;
          result        = result || bool;

          if (cancellations === 2 && !errored) {
            try {
              success(result);
            } catch (e) {
              error(e);
            }
          }
        };

        var f = function(err) {
          if (!errored) {
            errored = true;

            error(err);
          }
        };

        canceler2(e)(s, f);
        canceler1(e)(s, f);

        return nonCanceler;
      };
    };
  };
}

exports._setTimeout = function (nonCanceler, millis, aff) {
  var set = setTimeout, clear = clearTimeout;
  if (millis <= 0 && typeof setImmediate === "function") {
    set = setImmediate;
    clear = clearImmediate;
  }
  return function(success, error) {
    var canceler;

    var timeout = set(function() {
      canceler = aff(success, error);
    }, millis);

    return function(e) {
      return function(s, f) {
        if (canceler !== undefined) {
          return canceler(e)(s, f);
        } else {
          clear(timeout);

          try {
            s(true);
          } catch (e) {
            f(e);
          }

          return nonCanceler;
        }
      };
    };
  };
}

exports._unsafeInterleaveAff = function (aff) {
  return aff;
}

exports._forkAff = function (nonCanceler, aff) {
  var voidF = function(){};

  return function(success, error) {
    var canceler = aff(voidF, voidF);

    try {
      success(canceler);
    } catch (e) {
      error(e);
    }

    return nonCanceler;
  };
}

exports._makeAff = function (cb) {
  return function(success, error) {
    return cb(function(e) {
      return function() {
        error(e);
      };
    })(function(v) {
      return function() {
        try {
          success(v);
        } catch (e) {
          error(e);
        }
      };
    })();
  }
}

exports._pure = function (nonCanceler, v) {
  return function(success, error) {
    try {
      success(v);
    } catch (e) {
      error(e);
    }

    return nonCanceler;
  };
}

exports._throwError = function (nonCanceler, e) {
  return function(success, error) {
    error(e);

    return nonCanceler;
  };
}

exports._fmap = function (f, aff) {
  return function(success, error) {
    return aff(function(v) {
      try {
        success(f(v));
      } catch (e) {
        error(e);
      }
    }, error);
  };
}

exports._bind = function (alwaysCanceler, aff, f) {
  return function(success, error) {
    var canceler1, canceler2;

    var isCanceled    = false;
    var requestCancel = false;

    var onCanceler = function(){};

    canceler1 = aff(function(v) {
      if (requestCancel) {
        isCanceled = true;

        return alwaysCanceler;
      } else {
        canceler2 = f(v)(success, error);

        onCanceler(canceler2);

        return canceler2;
      }
    }, error);

    return function(e) {
      return function(s, f) {
        requestCancel = true;

        if (canceler2 !== undefined) {
          return canceler2(e)(s, f);
        } else {
          return canceler1(e)(function(bool) {
            if (bool || isCanceled) {
              try {
                s(true);
              } catch (e) {
                f(e);
              }
            } else {
              onCanceler = function(canceler) {
                canceler(e)(s, f);
              };
            }
          }, f);
        }
      };
    };
  };
}

exports._attempt = function (Left, Right, aff) {
  return function(success, error) {
    return aff(function(v) {
      try {
        success(Right(v));
      } catch (e) {
        error(e);
      }
    }, function(e) {
      try {
        success(Left(e));
      } catch (e) {
        error(e);
      }
    });
  };
}

exports._runAff = function (errorT, successT, aff) {
  return function() {
    return aff(function(v) {
      try {
        successT(v)();
      } catch (e) {
        errorT(e)();
      }
    }, function(e) {
      errorT(e)();
    });
  };
}

exports._liftEff = function (nonCanceler, e) {
  return function(success, error) {
    try {
      success(e());
    } catch (e) {
      error(e);
    }

    return nonCanceler;
  };
}

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Control_Monad_Error_Class = require("Control.Monad.Error.Class");
var Data_Monoid = require("Data.Monoid");
var Control_Monad_Eff_Exception = require("Control.Monad.Eff.Exception");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Monad_Cont_Class = require("Control.Monad.Cont.Class");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Monad_Eff_Unsafe = require("Control.Monad.Eff.Unsafe");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Canceler = function (x) {
    return x;
};
var runAff = function (ex) {
    return function (f) {
        return function (aff) {
            return $foreign._runAff(ex, f, aff);
        };
    };
};
var makeAff$prime = function (h) {
    return $foreign._makeAff(h);
};
var launchAff = runAff(Prelude["const"](Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit)))(Prelude["const"](Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit)));
var functorAff = new Prelude.Functor(function (f) {
    return function (fa) {
        return $foreign._fmap(f, fa);
    };
});
var cancel = function (_257) {
    return _257;
};
var attempt = function (aff) {
    return $foreign._attempt(Data_Either.Left.create, Data_Either.Right.create, aff);
};
var apathize = function (a) {
    return Prelude["<$>"](functorAff)(Prelude["const"](Prelude.unit))(attempt(a));
};
var applyAff = new Prelude.Apply(function () {
    return functorAff;
}, function (ff) {
    return function (fa) {
        return $foreign._bind(alwaysCanceler, ff, function (f) {
            return Prelude["<$>"](functorAff)(f)(fa);
        });
    };
});
var applicativeAff = new Prelude.Applicative(function () {
    return applyAff;
}, function (v) {
    return $foreign._pure(nonCanceler, v);
});
var nonCanceler = Prelude["const"](Prelude.pure(applicativeAff)(false));
var alwaysCanceler = Prelude["const"](Prelude.pure(applicativeAff)(true));
var cancelWith = function (aff) {
    return function (c) {
        return $foreign._cancelWith(nonCanceler, aff, c);
    };
};
var forkAff = function (aff) {
    return $foreign._forkAff(nonCanceler, aff);
};
var later$prime = function (n) {
    return function (aff) {
        return $foreign._setTimeout(nonCanceler, n, aff);
    };
};
var later = later$prime(0);
var liftEff$prime = function (eff) {
    return attempt($foreign._unsafeInterleaveAff($foreign._liftEff(nonCanceler, eff)));
};
var makeAff = function (h) {
    return makeAff$prime(function (e) {
        return function (a) {
            return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](nonCanceler))(h(e)(a));
        };
    });
};
var monadContAff = new Control_Monad_Cont_Class.MonadCont(function (f) {
    return makeAff(function (eb) {
        return function (cb) {
            return runAff(eb)(cb)(f(function (a) {
                return makeAff(function (_256) {
                    return function (_255) {
                        return cb(a);
                    };
                });
            }));
        };
    });
});
var semigroupAff = function (__dict_Semigroup_0) {
    return new Prelude.Semigroup(function (a) {
        return function (b) {
            return Prelude["<*>"](applyAff)(Prelude["<$>"](functorAff)(Prelude["<>"](__dict_Semigroup_0))(a))(b);
        };
    });
};
var monoidAff = function (__dict_Monoid_1) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAff(__dict_Monoid_1["__superclass_Prelude.Semigroup_0"]());
    }, Prelude.pure(applicativeAff)(Data_Monoid.mempty(__dict_Monoid_1)));
};
var semigroupCanceler = new Prelude.Semigroup(function (_258) {
    return function (_259) {
        return function (e) {
            return Prelude["<*>"](applyAff)(Prelude["<$>"](functorAff)(Prelude["||"](Prelude.booleanAlgebraBoolean))(_258(e)))(_259(e));
        };
    };
});
var monoidCanceler = new Data_Monoid.Monoid(function () {
    return semigroupCanceler;
}, Prelude["const"](Prelude.pure(applicativeAff)(true)));
var bindAff = new Prelude.Bind(function () {
    return applyAff;
}, function (fa) {
    return function (f) {
        return $foreign._bind(alwaysCanceler, fa, f);
    };
});
var monadAff = new Prelude.Monad(function () {
    return applicativeAff;
}, function () {
    return bindAff;
});
var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
    return monadAff;
}, function (eff) {
    return $foreign._liftEff(nonCanceler, eff);
});
var monadErrorAff = new Control_Monad_Error_Class.MonadError(function (aff) {
    return function (ex) {
        return Prelude[">>="](bindAff)(attempt(aff))(Data_Either.either(ex)(Prelude.pure(applicativeAff)));
    };
}, function (e) {
    return $foreign._throwError(nonCanceler, e);
});
var $$finally = function (aff1) {
    return function (aff2) {
        return Prelude.bind(bindAff)(attempt(aff1))(function (_53) {
            return Prelude.bind(bindAff)(aff2)(function () {
                return Data_Either.either(Control_Monad_Error_Class.throwError(monadErrorAff))(Prelude.pure(applicativeAff))(_53);
            });
        });
    };
};
var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
    return monadAff;
}, function (f) {
    return function (a) {
        var go = function (size) {
            return function (f_1) {
                return function (a_1) {
                    return Prelude.bind(bindAff)(f_1(a_1))(function (_54) {
                        if (_54 instanceof Data_Either.Left) {
                            if (Prelude["<"](Prelude.ordInt)(size)(100)) {
                                return go(Prelude["+"](Prelude.semiringInt)(size)(1))(f_1)(_54.value0);
                            };
                            if (Prelude.otherwise) {
                                return later(Control_Monad_Rec_Class.tailRecM(monadRecAff)(f_1)(_54.value0));
                            };
                        };
                        if (_54 instanceof Data_Either.Right) {
                            return Prelude.pure(applicativeAff)(_54.value0);
                        };
                        throw new Error("Failed pattern match: " + [ _54.constructor.name ]);
                    });
                };
            };
        };
        return go(0)(f)(a);
    };
});
var altAff = new Control_Alt.Alt(function () {
    return functorAff;
}, function (a1) {
    return function (a2) {
        return Prelude[">>="](bindAff)(attempt(a1))(Data_Either.either(Prelude["const"](a2))(Prelude.pure(applicativeAff)));
    };
});
var plusAff = new Control_Plus.Plus(function () {
    return altAff;
}, Control_Monad_Error_Class.throwError(monadErrorAff)(Control_Monad_Eff_Exception.error("Always fails")));
var alternativeAff = new Control_Alternative.Alternative(function () {
    return plusAff;
}, function () {
    return applicativeAff;
});
var monadPlusAff = new Control_MonadPlus.MonadPlus(function () {
    return alternativeAff;
}, function () {
    return monadAff;
});
module.exports = {
    Canceler: Canceler, 
    runAff: runAff, 
    nonCanceler: nonCanceler, 
    "makeAff'": makeAff$prime, 
    makeAff: makeAff, 
    "liftEff'": liftEff$prime, 
    launchAff: launchAff, 
    "later'": later$prime, 
    later: later, 
    forkAff: forkAff, 
    "finally": $$finally, 
    cancelWith: cancelWith, 
    cancel: cancel, 
    attempt: attempt, 
    apathize: apathize, 
    semigroupAff: semigroupAff, 
    monoidAff: monoidAff, 
    functorAff: functorAff, 
    applyAff: applyAff, 
    applicativeAff: applicativeAff, 
    bindAff: bindAff, 
    monadAff: monadAff, 
    monadEffAff: monadEffAff, 
    monadErrorAff: monadErrorAff, 
    altAff: altAff, 
    plusAff: plusAff, 
    alternativeAff: alternativeAff, 
    monadPlusAff: monadPlusAff, 
    monadRecAff: monadRecAff, 
    monadContAff: monadContAff, 
    semigroupCanceler: semigroupCanceler, 
    monoidCanceler: monoidCanceler
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff/foreign.js","Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Alternative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alternative/index.js","Control.Monad.Cont.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Cont.Class/index.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","Control.Monad.Eff.Exception":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Exception/index.js","Control.Monad.Eff.Unsafe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Unsafe/index.js","Control.Monad.Error.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Error.Class/index.js","Control.Monad.Rec.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Rec.Class/index.js","Control.MonadPlus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.MonadPlus/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Cont.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Control_Monad_Cont_Trans = require("Control.Monad.Cont.Trans");
var Control_Monad_Error_Trans = require("Control.Monad.Error.Trans");
var Control_Monad_Maybe_Trans = require("Control.Monad.Maybe.Trans");
var Control_Monad_Reader_Trans = require("Control.Monad.Reader.Trans");
var Control_Monad_State_Trans = require("Control.Monad.State.Trans");
var Control_Monad_Writer_Trans = require("Control.Monad.Writer.Trans");
var Prelude = require("Prelude");
var Control_Monad_Error = require("Control.Monad.Error");
var Data_Monoid = require("Data.Monoid");
var MonadCont = function (callCC) {
    this.callCC = callCC;
};
var monadContContT = function (__dict_Monad_0) {
    return new MonadCont(Control_Monad_Cont_Trans.callCC);
};
var callCC = function (dict) {
    return dict.callCC;
};
var monadContErrorT = function (__dict_MonadCont_1) {
    return new MonadCont(Control_Monad_Error_Trans.liftCallCCError(callCC(__dict_MonadCont_1)));
};
var monadContMaybeT = function (__dict_MonadCont_2) {
    return new MonadCont(Control_Monad_Maybe_Trans.liftCallCCMaybe(callCC(__dict_MonadCont_2)));
};
var monadContReaderT = function (__dict_MonadCont_3) {
    return new MonadCont(Control_Monad_Reader_Trans.liftCallCCReader(callCC(__dict_MonadCont_3)));
};
var monadContStateT = function (__dict_MonadCont_4) {
    return new MonadCont(Control_Monad_State_Trans["liftCallCCState'"](callCC(__dict_MonadCont_4)));
};
var monadWriterT = function (__dict_Monoid_5) {
    return function (__dict_MonadCont_6) {
        return new MonadCont(Control_Monad_Writer_Trans.liftCallCCWriter(__dict_Monoid_5)(callCC(__dict_MonadCont_6)));
    };
};
module.exports = {
    MonadCont: MonadCont, 
    callCC: callCC, 
    monadContContT: monadContContT, 
    monadContErrorT: monadContErrorT, 
    monadContMaybeT: monadContMaybeT, 
    monadContReaderT: monadContReaderT, 
    monadContStateT: monadContStateT, 
    monadWriterT: monadWriterT
};

},{"Control.Monad.Cont.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Cont.Trans/index.js","Control.Monad.Error":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Error/index.js","Control.Monad.Error.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Error.Trans/index.js","Control.Monad.Maybe.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Maybe.Trans/index.js","Control.Monad.Reader.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Reader.Trans/index.js","Control.Monad.State.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State.Trans/index.js","Control.Monad.Writer.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Writer.Trans/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Cont.Trans/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var ContT = function (x) {
    return x;
};
var runContT = function (_154) {
    return function (k) {
        return _154(k);
    };
};
var withContT = function (f) {
    return function (m) {
        return function (k) {
            return runContT(m)(f(k));
        };
    };
};
var monadTransContT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_0) {
    return function (m) {
        return function (k) {
            return Prelude[">>="](__dict_Monad_0["__superclass_Prelude.Bind_1"]())(m)(k);
        };
    };
});
var mapContT = function (f) {
    return function (m) {
        return function (k) {
            return f(runContT(m)(k));
        };
    };
};
var functorContT = function (__dict_Monad_4) {
    return new Prelude.Functor(function (f) {
        return function (m) {
            return function (k) {
                return runContT(m)(function (a) {
                    return k(f(a));
                });
            };
        };
    });
};
var callCC = function (f) {
    return function (k) {
        return runContT(f(function (a) {
            return function (_153) {
                return k(a);
            };
        }))(k);
    };
};
var applyContT = function (__dict_Functor_6) {
    return function (__dict_Monad_7) {
        return new Prelude.Apply(function () {
            return functorContT(__dict_Monad_7);
        }, function (f) {
            return function (v) {
                return function (k) {
                    return runContT(f)(function (g) {
                        return runContT(v)(function (a) {
                            return k(g(a));
                        });
                    });
                };
            };
        });
    };
};
var bindContT = function (__dict_Monad_5) {
    return new Prelude.Bind(function () {
        return applyContT(((__dict_Monad_5["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_5);
    }, function (m) {
        return function (k) {
            return function (k$prime) {
                return runContT(m)(function (a) {
                    return runContT(k(a))(k$prime);
                });
            };
        };
    });
};
var applicativeContT = function (__dict_Functor_8) {
    return function (__dict_Monad_9) {
        return new Prelude.Applicative(function () {
            return applyContT(__dict_Functor_8)(__dict_Monad_9);
        }, function (a) {
            return function (k) {
                return k(a);
            };
        });
    };
};
var monadContT = function (__dict_Monad_3) {
    return new Prelude.Monad(function () {
        return applicativeContT(((__dict_Monad_3["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_3);
    }, function () {
        return bindContT(__dict_Monad_3);
    });
};
var monadEffContT = function (__dict_Monad_1) {
    return function (__dict_MonadEff_2) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadContT(__dict_Monad_1);
        }, Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Trans.lift(monadTransContT)(__dict_Monad_1))(Control_Monad_Eff_Class.liftEff(__dict_MonadEff_2)));
    };
};
module.exports = {
    ContT: ContT, 
    callCC: callCC, 
    withContT: withContT, 
    mapContT: mapContT, 
    runContT: runContT, 
    functorContT: functorContT, 
    applyContT: applyContT, 
    applicativeContT: applicativeContT, 
    bindContT: bindContT, 
    monadContT: monadContT, 
    monadTransContT: monadTransContT, 
    monadEffContT: monadEffContT
};

},{"Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var MonadEff = function (__superclass_Prelude$dotMonad_0, liftEff) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.liftEff = liftEff;
};
var monadEffEff = new MonadEff(function () {
    return Control_Monad_Eff.monadEff;
}, Prelude.id(Prelude.categoryFn));
var liftEff = function (dict) {
    return dict.liftEff;
};
module.exports = {
    MonadEff: MonadEff, 
    liftEff: liftEff, 
    monadEffEff: monadEffEff
};

},{"Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Console/foreign.js":[function(require,module,exports){
/* global exports, console */
"use strict";

// module Control.Monad.Eff.Console

exports.log = function (s) {
  return function () {
    console.log(s);
    return {};
  };
};

exports.error = function (s) {
  return function () {
    console.error(s);
    return {};
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Console/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var print = function (__dict_Show_0) {
    return Prelude["<<<"](Prelude.semigroupoidFn)($foreign.log)(Prelude.show(__dict_Show_0));
};
module.exports = {
    print: print, 
    error: $foreign.error, 
    log: $foreign.log
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Console/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Exception/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff.Exception

exports.showErrorImpl = function (err) {
  return err.stack || err.toString();
};

exports.error = function (msg) {
  return new Error(msg);
};

exports.message = function (e) {
  return e.message;
};

exports.throwException = function (e) {
  return function () {
    throw e;
  };
};

exports.catchException = function (c) {
  return function (t) {
    return function () {
      try {
        return t();
      } catch (e) {
        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
          return c(e)();
        } else {
          return c(new Error(e.toString()))();
        }
      }
    };
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Exception/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var showError = new Prelude.Show($foreign.showErrorImpl);
module.exports = {
    showError: showError, 
    catchException: $foreign.catchException, 
    throwException: $foreign.throwException, 
    message: $foreign.message, 
    error: $foreign.error
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Exception/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.JQuery/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff.JQuery

exports.ready = function(func) {
    return function() {
        jQuery(document).ready(func);
    };
};

exports.select = function(selector) {
    return function() {
        return jQuery(selector);
    };
};

exports.find = function(selector) {
    return function(ob) {
        return function() {
            return ob.find(selector);
        };
    };
};

exports.parent = function(ob) {
    return function() {
        return ob.parent();
    };
};

exports.closest = function(selector) {
    return function(ob) {
        return function() {
            return ob.closest(selector);
        };
    };
};

exports.create = function(html) {
    return function() {
        return jQuery(html);
    };
};

exports.setAttr = function(attr) {
    return function(val) {
        return function(ob) {
            return function() {
                return ob.attr(attr, val);
            };
        };
    };
};

exports.attr = function(attrs) {
    return function(ob) {
        return function() {
            return ob.attr(attrs);
        };
    };
};

exports.css = function(props) {
    return function(ob) {
        return function() {
            return ob.css(props);
        };
    };
};

exports.hasClass = function(cls) {
    return function(ob) {
        return function() {
            return ob.hasClass(cls);
        };
    };
};

exports.toggleClass = function(cls) {
    return function(ob) {
        return function() {
            return ob.toggleClass(cls);
        };
    };
};

exports.setClass = function(cls) {
    return function(flag) {
        return function(ob) {
            return function() {
                return ob.toggleClass(cls, flag);
            };
        };
    };
};

exports.setProp = function(p) {
    return function(val) {
        return function(ob) {
            return function() {
                return ob.prop(p, val);
            };
        };
    };
};

exports.getProp = function(p) {
    return function(ob) {
        return function() {
            return ob.prop(p);
        };
    };
};

exports.append = function(ob1) {
    return function(ob) {
        return function() {
            return ob.append(ob1);
        };
    };
};

exports.appendText = function(s) {
    return function(ob) {
        return function() {
            return ob.append(s);
        };
    };
};

exports.body = function() {
    return jQuery(document.body);
};

exports.remove = function(ob) {
    return function() {
        return ob.remove();
    };
};

exports.clear = function(ob) {
    return function() {
        return ob.empty();
    };
};

exports.before = function(ob) {
    return function(ob1) {
        return function() {
            return ob1.before(ob);
        };
    };
};

exports.getText = function(ob) {
    return function() {
        return ob.text();
    };
};

exports.setText = function(text) {
    return function(ob) {
        return function() {
            return ob.text(text);
        };
    };
};

exports.getValue = function(ob) {
    return function() {
        return ob.val();
    };
};

exports.setValue = function(val) {
    return function(ob) {
        return function() {
            return ob.val(val);
        };
    };
};

exports.toggle = function(ob) {
    return function() {
        return ob.toggle();
    };
};

exports.setVisible = function(flag) {
    return function(ob) {
        return function() {
            return ob.toggle(flag);
        };
    };
};

exports.on = function(evt) {
    return function(act) {
        return function(ob) {
            return function() {
                return ob.on(evt, function(e) {
                    act(e)(jQuery(this))();
                });
            };
        };
    };
};

exports.on$prime = function(evt) {
    return function(sel) {
        return function(act) {
            return function(ob) {
                return function() {
                    return ob.on(evt, sel, function(e) {
                        act(e)(jQuery(this))();
                    });
                };
            };
        };
    };
};

exports.preventDefault = function(e) {
    return function() {
        e.preventDefault();
    };
};

exports.stopPropagation = function(e) {
    return function() {
        e.stopPropagation();
    };
};

exports.stopImmediatePropagation = function(e) {
    return function() {
        e.stopImmediatePropagation();
    };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.JQuery/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var DOM = require("DOM");
var Data_Foreign = require("Data.Foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var removeClass = function (cls) {
    return $foreign.setClass(cls)(false);
};
var hide = $foreign.setVisible(false);
var display = $foreign.setVisible(true);
var addClass = function (cls) {
    return $foreign.setClass(cls)(true);
};
module.exports = {
    display: display, 
    hide: hide, 
    removeClass: removeClass, 
    addClass: addClass, 
    stopImmediatePropagation: $foreign.stopImmediatePropagation, 
    stopPropagation: $foreign.stopPropagation, 
    preventDefault: $foreign.preventDefault, 
    "on'": $foreign["on'"], 
    on: $foreign.on, 
    setVisible: $foreign.setVisible, 
    toggle: $foreign.toggle, 
    setValue: $foreign.setValue, 
    getValue: $foreign.getValue, 
    setText: $foreign.setText, 
    getText: $foreign.getText, 
    body: $foreign.body, 
    appendText: $foreign.appendText, 
    before: $foreign.before, 
    clear: $foreign.clear, 
    remove: $foreign.remove, 
    append: $foreign.append, 
    getProp: $foreign.getProp, 
    setProp: $foreign.setProp, 
    setClass: $foreign.setClass, 
    toggleClass: $foreign.toggleClass, 
    hasClass: $foreign.hasClass, 
    css: $foreign.css, 
    attr: $foreign.attr, 
    setAttr: $foreign.setAttr, 
    create: $foreign.create, 
    closest: $foreign.closest, 
    parent: $foreign.parent, 
    find: $foreign.find, 
    select: $foreign.select, 
    ready: $foreign.ready
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.JQuery/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","Data.Foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Ref/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff.Ref

exports.newRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports["modifyRef'"] = function (ref) {
  return function (f) {
    return function () {
      var t = f(ref.value);
      ref.value = t.state;
      return t.value;
    };
  };
};

exports.writeRef = function (ref) {
  return function (val) {
    return function () {
      ref.value = val;
      return {};
    };
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Ref/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var modifyRef = function (ref) {
    return function (f) {
        return $foreign["modifyRef'"](ref)(function (s) {
            return {
                state: f(s), 
                value: Prelude.unit
            };
        });
    };
};
module.exports = {
    modifyRef: modifyRef, 
    writeRef: $foreign.writeRef, 
    "modifyRef'": $foreign["modifyRef'"], 
    readRef: $foreign.readRef, 
    newRef: $foreign.newRef
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Ref/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Unsafe/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff.Unsafe

exports.unsafeInterleaveEff = function (f) {
  return f;
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
module.exports = {
    unsafeInterleaveEff: $foreign.unsafeInterleaveEff
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Unsafe/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff

exports.returnE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.runPure = function (f) {
  return f();
};

exports.untilE = function (f) {
  return function () {
    while (!f());
    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var monadEff = new Prelude.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Prelude.Bind(function () {
    return applyEff;
}, $foreign.bindE);
var applyEff = new Prelude.Apply(function () {
    return functorEff;
}, Prelude.ap(monadEff));
var applicativeEff = new Prelude.Applicative(function () {
    return applyEff;
}, $foreign.returnE);
var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
module.exports = {
    functorEff: functorEff, 
    applyEff: applyEff, 
    applicativeEff: applicativeEff, 
    bindEff: bindEff, 
    monadEff: monadEff, 
    foreachE: $foreign.foreachE, 
    forE: $foreign.forE, 
    whileE: $foreign.whileE, 
    untilE: $foreign.untilE, 
    runPure: $foreign.runPure
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/foreign.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Error.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Error_Trans = require("Control.Monad.Error.Trans");
var Control_Monad_Except_Trans = require("Control.Monad.Except.Trans");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Maybe_Trans = require("Control.Monad.Maybe.Trans");
var Control_Monad_Reader_Trans = require("Control.Monad.Reader.Trans");
var Control_Monad_Writer_Trans = require("Control.Monad.Writer.Trans");
var Control_Monad_State_Trans = require("Control.Monad.State.Trans");
var Control_Monad_Error = require("Control.Monad.Error");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var MonadError = function (catchError, throwError) {
    this.catchError = catchError;
    this.throwError = throwError;
};
var throwError = function (dict) {
    return dict.throwError;
};
var monadErrorMaybe = new MonadError(function (_254) {
    return function (f) {
        if (_254 instanceof Data_Maybe.Nothing) {
            return f(Prelude.unit);
        };
        if (_254 instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(_254.value0);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs line 60, column 1 - line 65, column 1: " + [ _254.constructor.name, f.constructor.name ]);
    };
}, Prelude["const"](Data_Maybe.Nothing.value));
var monadErrorExceptT = function (__dict_Monad_0) {
    return new MonadError(Control_Monad_Except_Trans.catchE(__dict_Monad_0), Control_Monad_Except_Trans.throwE(__dict_Monad_0["__superclass_Prelude.Applicative_0"]()));
};
var monadErrorErrorT = function (__dict_Monad_1) {
    return new MonadError(function (m) {
        return function (h) {
            return Control_Monad_Error_Trans.ErrorT(Prelude.bind(__dict_Monad_1["__superclass_Prelude.Bind_1"]())(Control_Monad_Error_Trans.runErrorT(m))(function (_52) {
                if (_52 instanceof Data_Either.Left) {
                    return Control_Monad_Error_Trans.runErrorT(h(_52.value0));
                };
                if (_52 instanceof Data_Either.Right) {
                    return Prelude["return"](__dict_Monad_1["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(_52.value0));
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs line 65, column 1 - line 73, column 1: " + [ _52.constructor.name ]);
            }));
        };
    }, function (e) {
        return Control_Monad_Error_Trans.ErrorT(Prelude["return"](__dict_Monad_1["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(e)));
    });
};
var monadErrorEither = new MonadError(function (_253) {
    return function (h) {
        if (_253 instanceof Data_Either.Left) {
            return h(_253.value0);
        };
        if (_253 instanceof Data_Either.Right) {
            return new Data_Either.Right(_253.value0);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs line 55, column 1 - line 60, column 1: " + [ _253.constructor.name, h.constructor.name ]);
    };
}, Data_Either.Left.create);
var catchError = function (dict) {
    return dict.catchError;
};
var catchJust = function (__dict_MonadError_2) {
    return function (p) {
        return function (act) {
            return function (handler) {
                var handle = function (e) {
                    var _721 = p(e);
                    if (_721 instanceof Data_Maybe.Nothing) {
                        return throwError(__dict_MonadError_2)(e);
                    };
                    if (_721 instanceof Data_Maybe.Just) {
                        return handler(_721.value0);
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs line 50, column 3 - line 55, column 1: " + [ _721.constructor.name ]);
                };
                return catchError(__dict_MonadError_2)(act)(handle);
            };
        };
    };
};
var monadErrorMaybeT = function (__dict_Monad_3) {
    return function (__dict_MonadError_4) {
        return new MonadError(Control_Monad_Maybe_Trans.liftCatchMaybe(catchError(__dict_MonadError_4)), function (e) {
            return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_3)(throwError(__dict_MonadError_4)(e));
        });
    };
};
var monadErrorReaderT = function (__dict_Monad_5) {
    return function (__dict_MonadError_6) {
        return new MonadError(Control_Monad_Reader_Trans.liftCatchReader(catchError(__dict_MonadError_6)), function (e) {
            return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_5)(throwError(__dict_MonadError_6)(e));
        });
    };
};
var monadErrorStateT = function (__dict_Monad_7) {
    return function (__dict_MonadError_8) {
        return new MonadError(Control_Monad_State_Trans.liftCatchState(catchError(__dict_MonadError_8)), function (e) {
            return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_7)(throwError(__dict_MonadError_8)(e));
        });
    };
};
var monadErrorWriterT = function (__dict_Monad_9) {
    return function (__dict_Monoid_10) {
        return function (__dict_MonadError_11) {
            return new MonadError(Control_Monad_Writer_Trans.liftCatchWriter(catchError(__dict_MonadError_11)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_10))(__dict_Monad_9)(throwError(__dict_MonadError_11)(e));
            });
        };
    };
};
module.exports = {
    MonadError: MonadError, 
    catchJust: catchJust, 
    catchError: catchError, 
    throwError: throwError, 
    monadErrorEither: monadErrorEither, 
    monadErrorMaybe: monadErrorMaybe, 
    monadErrorErrorT: monadErrorErrorT, 
    monadErrorExceptT: monadErrorExceptT, 
    monadErrorMaybeT: monadErrorMaybeT, 
    monadErrorReaderT: monadErrorReaderT, 
    monadErrorWriterT: monadErrorWriterT, 
    monadErrorStateT: monadErrorStateT
};

},{"Control.Monad.Error":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Error/index.js","Control.Monad.Error.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Error.Trans/index.js","Control.Monad.Except.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Except.Trans/index.js","Control.Monad.Maybe.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Maybe.Trans/index.js","Control.Monad.Reader.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Reader.Trans/index.js","Control.Monad.State.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State.Trans/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","Control.Monad.Writer.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Writer.Trans/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Error.Trans/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Apply = require("Control.Apply");
var Control_Monad_Error = require("Control.Monad.Error");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Either = require("Data.Either");
var Data_Monoid = require("Data.Monoid");
var Data_Tuple = require("Data.Tuple");
var ErrorT = function (x) {
    return x;
};
var runErrorT = function (_189) {
    return _189;
};
var monadTransErrorT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_2) {
    return function (m) {
        return ErrorT(Prelude.bind(__dict_Monad_2["__superclass_Prelude.Bind_1"]())(m)(function (_28) {
            return Prelude["return"](__dict_Monad_2["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(_28));
        }));
    };
});
var mapErrorT = function (f) {
    return function (m) {
        return ErrorT(f(runErrorT(m)));
    };
};
var liftPassError = function (__dict_Monad_10) {
    return function (pass) {
        return mapErrorT(function (m) {
            return pass(Prelude.bind(__dict_Monad_10["__superclass_Prelude.Bind_1"]())(m)(function (_30) {
                return Prelude["return"](__dict_Monad_10["__superclass_Prelude.Applicative_0"]())((function () {
                    if (_30 instanceof Data_Either.Left) {
                        return new Data_Tuple.Tuple(new Data_Either.Left(_30.value0), Prelude.id(Prelude.categoryFn));
                    };
                    if (_30 instanceof Data_Either.Right) {
                        return new Data_Tuple.Tuple(new Data_Either.Right(_30.value0.value0), _30.value0.value1);
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-transformers/src/Control/Monad/Error/Trans.purs line 87, column 1 - line 88, column 1: " + [ _30.constructor.name ]);
                })());
            }));
        });
    };
};
var liftListenError = function (__dict_Monad_11) {
    return function (listen) {
        return mapErrorT(function (m) {
            return Prelude.bind(__dict_Monad_11["__superclass_Prelude.Bind_1"]())(listen(m))(function (_29) {
                return Prelude["return"](__dict_Monad_11["__superclass_Prelude.Applicative_0"]())(Prelude["<$>"](Data_Either.functorEither)(function (r) {
                    return new Data_Tuple.Tuple(r, _29.value1);
                })(_29.value0));
            });
        });
    };
};
var liftCallCCError = function (callCC) {
    return function (f) {
        return ErrorT(callCC(function (c) {
            return runErrorT(f(function (a) {
                return ErrorT(c(new Data_Either.Right(a)));
            }));
        }));
    };
};
var functorErrorT = function (__dict_Functor_12) {
    return new Prelude.Functor(function (f) {
        return Prelude["<<<"](Prelude.semigroupoidFn)(ErrorT)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["<$>"](__dict_Functor_12)(Prelude["<$>"](Data_Either.functorEither)(f)))(runErrorT));
    });
};
var applyErrorT = function (__dict_Apply_14) {
    return new Prelude.Apply(function () {
        return functorErrorT(__dict_Apply_14["__superclass_Prelude.Functor_0"]());
    }, function (_190) {
        return function (_191) {
            return ErrorT(Prelude["<*>"](__dict_Apply_14)(Prelude["<$>"](__dict_Apply_14["__superclass_Prelude.Functor_0"]())(Control_Apply.lift2(Data_Either.applyEither)(Prelude["$"]))(_190))(_191));
        };
    });
};
var bindErrorT = function (__dict_Monad_13) {
    return new Prelude.Bind(function () {
        return applyErrorT((__dict_Monad_13["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
    }, function (m) {
        return function (f) {
            return ErrorT(Prelude.bind(__dict_Monad_13["__superclass_Prelude.Bind_1"]())(runErrorT(m))(function (_26) {
                if (_26 instanceof Data_Either.Left) {
                    return Prelude["return"](__dict_Monad_13["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(_26.value0));
                };
                if (_26 instanceof Data_Either.Right) {
                    return runErrorT(f(_26.value0));
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-transformers/src/Control/Monad/Error/Trans.purs line 55, column 1 - line 62, column 1: " + [ _26.constructor.name ]);
            }));
        };
    });
};
var applicativeErrorT = function (__dict_Applicative_15) {
    return new Prelude.Applicative(function () {
        return applyErrorT(__dict_Applicative_15["__superclass_Prelude.Apply_0"]());
    }, function (a) {
        return ErrorT(Prelude.pure(__dict_Applicative_15)(new Data_Either.Right(a)));
    });
};
var monadErrorT = function (__dict_Monad_7) {
    return new Prelude.Monad(function () {
        return applicativeErrorT(__dict_Monad_7["__superclass_Prelude.Applicative_0"]());
    }, function () {
        return bindErrorT(__dict_Monad_7);
    });
};
var monadEffError = function (__dict_Monad_8) {
    return function (__dict_MonadEff_9) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadErrorT(__dict_Monad_8);
        }, Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Trans.lift(monadTransErrorT)(__dict_Monad_8))(Control_Monad_Eff_Class.liftEff(__dict_MonadEff_9)));
    };
};
var monadRecErrorT = function (__dict_Error_3) {
    return function (__dict_MonadRec_4) {
        return new Control_Monad_Rec_Class.MonadRec(function () {
            return monadErrorT(__dict_MonadRec_4["__superclass_Prelude.Monad_0"]());
        }, function (f) {
            return Prelude["<<<"](Prelude.semigroupoidFn)(ErrorT)(Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_4)(function (a) {
                return Prelude.bind((__dict_MonadRec_4["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(runErrorT(f(a)))(function (_27) {
                    return Prelude["return"]((__dict_MonadRec_4["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())((function () {
                        if (_27 instanceof Data_Either.Left) {
                            return new Data_Either.Right(new Data_Either.Left(_27.value0));
                        };
                        if (_27 instanceof Data_Either.Right && _27.value0 instanceof Data_Either.Left) {
                            return new Data_Either.Left(_27.value0.value0);
                        };
                        if (_27 instanceof Data_Either.Right && _27.value0 instanceof Data_Either.Right) {
                            return new Data_Either.Right(new Data_Either.Right(_27.value0.value0));
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-transformers/src/Control/Monad/Error/Trans.purs line 64, column 1 - line 72, column 1: " + [ _27.constructor.name ]);
                    })());
                });
            }));
        });
    };
};
var altErrorT = function (__dict_Monad_18) {
    return new Control_Alt.Alt(function () {
        return functorErrorT(((__dict_Monad_18["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
    }, function (x) {
        return function (y) {
            return ErrorT(Prelude[">>="](__dict_Monad_18["__superclass_Prelude.Bind_1"]())(runErrorT(x))(function (e) {
                if (e instanceof Data_Either.Left) {
                    return runErrorT(y);
                };
                return Prelude["return"](__dict_Monad_18["__superclass_Prelude.Applicative_0"]())(e);
            }));
        };
    });
};
var plusErrorT = function (__dict_Monad_0) {
    return function (__dict_Error_1) {
        return new Control_Plus.Plus(function () {
            return altErrorT(__dict_Monad_0);
        }, Prelude["return"](__dict_Monad_0["__superclass_Prelude.Applicative_0"]())(Data_Either.Left.create(Control_Monad_Error.strMsg(__dict_Error_1)("No alternative"))));
    };
};
var alternativeErrorT = function (__dict_Monad_16) {
    return function (__dict_Error_17) {
        return new Control_Alternative.Alternative(function () {
            return plusErrorT(__dict_Monad_16)(__dict_Error_17);
        }, function () {
            return applicativeErrorT(__dict_Monad_16["__superclass_Prelude.Applicative_0"]());
        });
    };
};
var monadPlusErrorT = function (__dict_Monad_5) {
    return function (__dict_Error_6) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeErrorT(__dict_Monad_5)(__dict_Error_6);
        }, function () {
            return monadErrorT(__dict_Monad_5);
        });
    };
};
module.exports = {
    ErrorT: ErrorT, 
    liftCallCCError: liftCallCCError, 
    liftPassError: liftPassError, 
    liftListenError: liftListenError, 
    mapErrorT: mapErrorT, 
    runErrorT: runErrorT, 
    functorErrorT: functorErrorT, 
    applyErrorT: applyErrorT, 
    applicativeErrorT: applicativeErrorT, 
    altErrorT: altErrorT, 
    plusErrorT: plusErrorT, 
    alternativeErrorT: alternativeErrorT, 
    bindErrorT: bindErrorT, 
    monadErrorT: monadErrorT, 
    monadRecErrorT: monadRecErrorT, 
    monadPlusErrorT: monadPlusErrorT, 
    monadTransErrorT: monadTransErrorT, 
    monadEffError: monadEffError
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Alternative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alternative/index.js","Control.Apply":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Apply/index.js","Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","Control.Monad.Error":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Error/index.js","Control.Monad.Rec.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Rec.Class/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","Control.MonadPlus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.MonadPlus/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Error/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var $$Error = function (noMsg, strMsg) {
    this.noMsg = noMsg;
    this.strMsg = strMsg;
};
var strMsg = function (dict) {
    return dict.strMsg;
};
var noMsg = function (dict) {
    return dict.noMsg;
};
var errorString = new $$Error("", Prelude.id(Prelude.categoryFn));
module.exports = {
    "Error": $$Error, 
    strMsg: strMsg, 
    noMsg: noMsg, 
    errorString: errorString
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Except.Trans/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Data_Monoid = require("Data.Monoid");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var ExceptT = function (x) {
    return x;
};
var throwE = function (__dict_Applicative_0) {
    return Prelude["<<<"](Prelude.semigroupoidFn)(ExceptT)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.pure(__dict_Applicative_0))(Data_Either.Left.create));
};
var runExceptT = function (_184) {
    return _184;
};
var withExceptT = function (__dict_Functor_1) {
    return function (f) {
        var mapLeft = function (f_1) {
            return function (_185) {
                if (_185 instanceof Data_Either.Right) {
                    return new Data_Either.Right(_185.value0);
                };
                if (_185 instanceof Data_Either.Left) {
                    return new Data_Either.Left(f_1(_185.value0));
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs line 30, column 3 - line 31, column 3: " + [ f_1.constructor.name, _185.constructor.name ]);
            };
        };
        return Prelude["<<<"](Prelude.semigroupoidFn)(ExceptT)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["<$>"](__dict_Functor_1)(mapLeft(f)))(runExceptT));
    };
};
var monadTransExceptT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_4) {
    return function (m) {
        return ExceptT(Prelude.bind(__dict_Monad_4["__superclass_Prelude.Bind_1"]())(m)(function (_24) {
            return Prelude["return"](__dict_Monad_4["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(_24));
        }));
    };
});
var mapExceptT = function (f) {
    return function (m) {
        return f(runExceptT(m));
    };
};
var functorExceptT = function (__dict_Functor_12) {
    return new Prelude.Functor(function (f) {
        return mapExceptT(Prelude["<$>"](__dict_Functor_12)(Prelude["<$>"](Data_Either.functorEither)(f)));
    });
};
var catchE = function (__dict_Monad_13) {
    return function (m) {
        return function (handler) {
            return Prelude[">>="](__dict_Monad_13["__superclass_Prelude.Bind_1"]())(runExceptT(m))(Data_Either.either(Prelude["<<<"](Prelude.semigroupoidFn)(runExceptT)(handler))(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.pure(__dict_Monad_13["__superclass_Prelude.Applicative_0"]()))(Data_Either.Right.create)));
        };
    };
};
var applyExceptT = function (__dict_Apply_15) {
    return new Prelude.Apply(function () {
        return functorExceptT(__dict_Apply_15["__superclass_Prelude.Functor_0"]());
    }, function (_186) {
        return function (_187) {
            var f$prime = Prelude["<$>"](__dict_Apply_15["__superclass_Prelude.Functor_0"]())(Prelude["<*>"](Data_Either.applyEither))(_186);
            var x$prime = Prelude["<*>"](__dict_Apply_15)(f$prime)(_187);
            return x$prime;
        };
    });
};
var bindExceptT = function (__dict_Monad_14) {
    return new Prelude.Bind(function () {
        return applyExceptT((__dict_Monad_14["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
    }, function (m) {
        return function (k) {
            return Prelude[">>="](__dict_Monad_14["__superclass_Prelude.Bind_1"]())(runExceptT(m))(Data_Either.either(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["return"](__dict_Monad_14["__superclass_Prelude.Applicative_0"]()))(Data_Either.Left.create))(Prelude["<<<"](Prelude.semigroupoidFn)(runExceptT)(k)));
        };
    });
};
var applicativeExceptT = function (__dict_Applicative_16) {
    return new Prelude.Applicative(function () {
        return applyExceptT(__dict_Applicative_16["__superclass_Prelude.Apply_0"]());
    }, Prelude["<<<"](Prelude.semigroupoidFn)(ExceptT)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.pure(__dict_Applicative_16))(Data_Either.Right.create)));
};
var monadExceptT = function (__dict_Monad_9) {
    return new Prelude.Monad(function () {
        return applicativeExceptT(__dict_Monad_9["__superclass_Prelude.Applicative_0"]());
    }, function () {
        return bindExceptT(__dict_Monad_9);
    });
};
var monadEffExceptT = function (__dict_Monad_10) {
    return function (__dict_MonadEff_11) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadExceptT(__dict_Monad_10);
        }, Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Trans.lift(monadTransExceptT)(__dict_Monad_10))(Control_Monad_Eff_Class.liftEff(__dict_MonadEff_11)));
    };
};
var monadRecErrorT = function (__dict_Semigroup_5) {
    return function (__dict_MonadRec_6) {
        return new Control_Monad_Rec_Class.MonadRec(function () {
            return monadExceptT(__dict_MonadRec_6["__superclass_Prelude.Monad_0"]());
        }, function (f) {
            return Prelude["<<<"](Prelude.semigroupoidFn)(ExceptT)(Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_6)(function (a) {
                return Prelude.bind((__dict_MonadRec_6["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(runExceptT(f(a)))(function (_21) {
                    return Prelude["return"]((__dict_MonadRec_6["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())((function () {
                        if (_21 instanceof Data_Either.Left) {
                            return new Data_Either.Right(new Data_Either.Left(_21.value0));
                        };
                        if (_21 instanceof Data_Either.Right && _21.value0 instanceof Data_Either.Left) {
                            return new Data_Either.Left(_21.value0.value0);
                        };
                        if (_21 instanceof Data_Either.Right && _21.value0 instanceof Data_Either.Right) {
                            return new Data_Either.Right(new Data_Either.Right(_21.value0.value0));
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs line 55, column 1 - line 63, column 1: " + [ _21.constructor.name ]);
                    })());
                });
            }));
        });
    };
};
var altExceptT = function (__dict_Semigroup_19) {
    return function (__dict_Monad_20) {
        return new Control_Alt.Alt(function () {
            return functorExceptT(((__dict_Monad_20["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        }, function (m) {
            return function (n) {
                return ExceptT(Prelude.bind(__dict_Monad_20["__superclass_Prelude.Bind_1"]())(runExceptT(m))(function (_23) {
                    if (_23 instanceof Data_Either.Right) {
                        return Prelude.pure(__dict_Monad_20["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(_23.value0));
                    };
                    if (_23 instanceof Data_Either.Left) {
                        return Prelude.bind(__dict_Monad_20["__superclass_Prelude.Bind_1"]())(runExceptT(n))(function (_22) {
                            if (_22 instanceof Data_Either.Right) {
                                return Prelude.pure(__dict_Monad_20["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(_22.value0));
                            };
                            if (_22 instanceof Data_Either.Left) {
                                return Prelude.pure(__dict_Monad_20["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(Prelude["<>"](__dict_Semigroup_19)(_23.value0)(_22.value0)));
                            };
                            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs line 63, column 1 - line 74, column 1: " + [ _22.constructor.name ]);
                        });
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs line 63, column 1 - line 74, column 1: " + [ _23.constructor.name ]);
                }));
            };
        });
    };
};
var plusExceptT = function (__dict_Monoid_2) {
    return function (__dict_Monad_3) {
        return new Control_Plus.Plus(function () {
            return altExceptT(__dict_Monoid_2["__superclass_Prelude.Semigroup_0"]())(__dict_Monad_3);
        }, throwE(__dict_Monad_3["__superclass_Prelude.Applicative_0"]())(Data_Monoid.mempty(__dict_Monoid_2)));
    };
};
var alternativeExceptT = function (__dict_Monoid_17) {
    return function (__dict_Monad_18) {
        return new Control_Alternative.Alternative(function () {
            return plusExceptT(__dict_Monoid_17)(__dict_Monad_18);
        }, function () {
            return applicativeExceptT(__dict_Monad_18["__superclass_Prelude.Applicative_0"]());
        });
    };
};
var monadPlusExceptT = function (__dict_Monoid_7) {
    return function (__dict_Monad_8) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeExceptT(__dict_Monoid_7)(__dict_Monad_8);
        }, function () {
            return monadExceptT(__dict_Monad_8);
        });
    };
};
module.exports = {
    ExceptT: ExceptT, 
    catchE: catchE, 
    throwE: throwE, 
    mapExceptT: mapExceptT, 
    withExceptT: withExceptT, 
    runExceptT: runExceptT, 
    functorExceptT: functorExceptT, 
    applyExceptT: applyExceptT, 
    applicativeExceptT: applicativeExceptT, 
    bindExceptT: bindExceptT, 
    monadExceptT: monadExceptT, 
    monadRecErrorT: monadRecErrorT, 
    altExceptT: altExceptT, 
    plusExceptT: plusExceptT, 
    alternativeExceptT: alternativeExceptT, 
    monadPlusExceptT: monadPlusExceptT, 
    monadTransExceptT: monadTransExceptT, 
    monadEffExceptT: monadEffExceptT
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Alternative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alternative/index.js","Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","Control.Monad.Rec.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Rec.Class/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","Control.MonadPlus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.MonadPlus/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Free.Trans/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_Exists = require("Data.Exists");
var Prelude = require("Prelude");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Data_Bifunctor = require("Data.Bifunctor");
var Control_Bind = require("Control.Bind");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_Either = require("Data.Either");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Bound = (function () {
    function Bound(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Bound.create = function (value0) {
        return function (value1) {
            return new Bound(value0, value1);
        };
    };
    return Bound;
})();
var FreeT = (function () {
    function FreeT(value0) {
        this.value0 = value0;
    };
    FreeT.create = function (value0) {
        return new FreeT(value0);
    };
    return FreeT;
})();
var Bind = (function () {
    function Bind(value0) {
        this.value0 = value0;
    };
    Bind.create = function (value0) {
        return new Bind(value0);
    };
    return Bind;
})();
var monadTransFreeT = function (__dict_Functor_4) {
    return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_5) {
        return function (ma) {
            return new FreeT(function (_200) {
                return Prelude.map(((__dict_Monad_5["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Left.create)(ma);
            });
        };
    });
};
var freeT = FreeT.create;
var bound = function (m) {
    return function (f) {
        return new Bind(Data_Exists.mkExists(new Bound(m, f)));
    };
};
var functorFreeT = function (__dict_Functor_12) {
    return function (__dict_Functor_13) {
        return new Prelude.Functor(function (f) {
            return function (_206) {
                if (_206 instanceof FreeT) {
                    return new FreeT(function (_194) {
                        return Prelude.map(__dict_Functor_13)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Prelude.map(__dict_Functor_12)(Prelude.map(functorFreeT(__dict_Functor_12)(__dict_Functor_13))(f))))(_206.value0(Prelude.unit));
                    });
                };
                if (_206 instanceof Bind) {
                    return Data_Exists.runExists(function (_195) {
                        return bound(_195.value0)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.map(functorFreeT(__dict_Functor_12)(__dict_Functor_13))(f))(_195.value1));
                    })(_206.value0);
                };
                throw new Error("Failed pattern match: " + [ f.constructor.name, _206.constructor.name ]);
            };
        });
    };
};
var bimapFreeT = function (__dict_Functor_16) {
    return function (__dict_Functor_17) {
        return function (nf) {
            return function (nm) {
                return function (_204) {
                    if (_204 instanceof Bind) {
                        return Data_Exists.runExists(function (_202) {
                            return bound(Prelude["<<<"](Prelude.semigroupoidFn)(bimapFreeT(__dict_Functor_16)(__dict_Functor_17)(nf)(nm))(_202.value0))(Prelude["<<<"](Prelude.semigroupoidFn)(bimapFreeT(__dict_Functor_16)(__dict_Functor_17)(nf)(nm))(_202.value1));
                        })(_204.value0);
                    };
                    if (_204 instanceof FreeT) {
                        return new FreeT(function (_203) {
                            return Prelude["<$>"](__dict_Functor_17)(Prelude.map(Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidFn)(nf)(Prelude.map(__dict_Functor_16)(bimapFreeT(__dict_Functor_16)(__dict_Functor_17)(nf)(nm)))))(nm(_204.value0(Prelude.unit)));
                        });
                    };
                    throw new Error("Failed pattern match: " + [ nf.constructor.name, nm.constructor.name, _204.constructor.name ]);
                };
            };
        };
    };
};
var hoistFreeT = function (__dict_Functor_18) {
    return function (__dict_Functor_19) {
        return bimapFreeT(__dict_Functor_18)(__dict_Functor_19)(Prelude.id(Prelude.categoryFn));
    };
};
var interpret = function (__dict_Functor_20) {
    return function (__dict_Functor_21) {
        return function (nf) {
            return bimapFreeT(__dict_Functor_20)(__dict_Functor_21)(nf)(Prelude.id(Prelude.categoryFn));
        };
    };
};
var monadFreeT = function (__dict_Functor_8) {
    return function (__dict_Monad_9) {
        return new Prelude.Monad(function () {
            return applicativeFreeT(__dict_Functor_8)(__dict_Monad_9);
        }, function () {
            return bindFreeT(__dict_Functor_8)(__dict_Monad_9);
        });
    };
};
var bindFreeT = function (__dict_Functor_14) {
    return function (__dict_Monad_15) {
        return new Prelude.Bind(function () {
            return applyFreeT(__dict_Functor_14)(__dict_Monad_15);
        }, function (_207) {
            return function (f) {
                if (_207 instanceof Bind) {
                    return Data_Exists.runExists(function (_198) {
                        return bound(_198.value0)(function (x) {
                            return bound(function (_197) {
                                return _198.value1(x);
                            })(f);
                        });
                    })(_207.value0);
                };
                return bound(function (_199) {
                    return _207;
                })(f);
            };
        });
    };
};
var applyFreeT = function (__dict_Functor_22) {
    return function (__dict_Monad_23) {
        return new Prelude.Apply(function () {
            return functorFreeT(__dict_Functor_22)(((__dict_Monad_23["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        }, Prelude.ap(monadFreeT(__dict_Functor_22)(__dict_Monad_23)));
    };
};
var applicativeFreeT = function (__dict_Functor_24) {
    return function (__dict_Monad_25) {
        return new Prelude.Applicative(function () {
            return applyFreeT(__dict_Functor_24)(__dict_Monad_25);
        }, function (a) {
            return new FreeT(function (_196) {
                return Prelude.pure(__dict_Monad_25["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(a));
            });
        });
    };
};
var liftFreeT = function (__dict_Functor_10) {
    return function (__dict_Monad_11) {
        return function (fa) {
            return new FreeT(function (_201) {
                return Prelude["return"](__dict_Monad_11["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(Prelude.map(__dict_Functor_10)(Prelude.pure(applicativeFreeT(__dict_Functor_10)(__dict_Monad_11)))(fa)));
            });
        };
    };
};
var resume = function (__dict_Functor_0) {
    return function (__dict_MonadRec_1) {
        var go = function (_205) {
            if (_205 instanceof FreeT) {
                return Prelude.map((((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_205.value0(Prelude.unit));
            };
            if (_205 instanceof Bind) {
                return Data_Exists.runExists(function (_193) {
                    var _732 = _193.value0(Prelude.unit);
                    if (_732 instanceof FreeT) {
                        return Prelude.bind((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(_732.value0(Prelude.unit))(function (_31) {
                            if (_31 instanceof Data_Either.Left) {
                                return Prelude["return"]((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(_193.value1(_31.value0)));
                            };
                            if (_31 instanceof Data_Either.Right) {
                                return Prelude["return"]((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(new Data_Either.Right(Prelude.map(__dict_Functor_0)(function (h) {
                                    return Prelude[">>="](bindFreeT(__dict_Functor_0)(__dict_MonadRec_1["__superclass_Prelude.Monad_0"]()))(h)(_193.value1);
                                })(_31.value0))));
                            };
                            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-freet/src/Control/Monad/Free/Trans.purs line 45, column 3 - line 46, column 3: " + [ _31.constructor.name ]);
                        });
                    };
                    if (_732 instanceof Bind) {
                        return Data_Exists.runExists(function (_192) {
                            return Prelude["return"]((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(Prelude.bind(bindFreeT(__dict_Functor_0)(__dict_MonadRec_1["__superclass_Prelude.Monad_0"]()))(_192.value0(Prelude.unit))(function (z) {
                                return Prelude[">>="](bindFreeT(__dict_Functor_0)(__dict_MonadRec_1["__superclass_Prelude.Monad_0"]()))(_192.value1(z))(_193.value1);
                            })));
                        })(_732.value0);
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-freet/src/Control/Monad/Free/Trans.purs line 45, column 3 - line 46, column 3: " + [ _732.constructor.name ]);
                })(_205.value0);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-freet/src/Control/Monad/Free/Trans.purs line 45, column 3 - line 46, column 3: " + [ _205.constructor.name ]);
        };
        return Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_1)(go);
    };
};
var runFreeT = function (__dict_Functor_2) {
    return function (__dict_MonadRec_3) {
        return function (interp) {
            var go = function (_208) {
                if (_208 instanceof Data_Either.Left) {
                    return Prelude["return"]((__dict_MonadRec_3["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(_208.value0));
                };
                if (_208 instanceof Data_Either.Right) {
                    return Prelude.bind((__dict_MonadRec_3["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(interp(_208.value0))(function (_33) {
                        return Prelude["return"]((__dict_MonadRec_3["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(_33));
                    });
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-freet/src/Control/Monad/Free/Trans.purs line 105, column 3 - line 106, column 3: " + [ _208.constructor.name ]);
            };
            return Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_3)(Control_Bind["<=<"]((__dict_MonadRec_3["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(go)(resume(__dict_Functor_2)(__dict_MonadRec_3)));
        };
    };
};
var monadRecFreeT = function (__dict_Functor_6) {
    return function (__dict_Monad_7) {
        return new Control_Monad_Rec_Class.MonadRec(function () {
            return monadFreeT(__dict_Functor_6)(__dict_Monad_7);
        }, function (f) {
            var go = function (s) {
                return Prelude.bind(bindFreeT(__dict_Functor_6)(__dict_Monad_7))(f(s))(function (_32) {
                    if (_32 instanceof Data_Either.Left) {
                        return go(_32.value0);
                    };
                    if (_32 instanceof Data_Either.Right) {
                        return Prelude["return"](applicativeFreeT(__dict_Functor_6)(__dict_Monad_7))(_32.value0);
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-freet/src/Control/Monad/Free/Trans.purs line 75, column 1 - line 85, column 1: " + [ _32.constructor.name ]);
                });
            };
            return go;
        });
    };
};
module.exports = {
    runFreeT: runFreeT, 
    resume: resume, 
    bimapFreeT: bimapFreeT, 
    interpret: interpret, 
    hoistFreeT: hoistFreeT, 
    liftFreeT: liftFreeT, 
    freeT: freeT, 
    functorFreeT: functorFreeT, 
    applyFreeT: applyFreeT, 
    applicativeFreeT: applicativeFreeT, 
    bindFreeT: bindFreeT, 
    monadFreeT: monadFreeT, 
    monadTransFreeT: monadTransFreeT, 
    monadRecFreeT: monadRecFreeT
};

},{"Control.Bind":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Bind/index.js","Control.Monad.Rec.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Rec.Class/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","Data.Bifunctor":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bifunctor/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Exists":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Exists/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Free/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Unsafe_Coerce = require("Unsafe.Coerce");
var Data_CatList = require("Data.CatList");
var Data_Either = require("Data.Either");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Data_Inject = require("Data.Inject");
var Data_Identity = require("Data.Identity");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Data_Maybe = require("Data.Maybe");
var Data_NaturalTransformation = require("Data.NaturalTransformation");
var Data_Tuple = require("Data.Tuple");
var ExpF = function (x) {
    return x;
};
var Free = (function () {
    function Free(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Free.create = function (value0) {
        return function (value1) {
            return new Free(value0, value1);
        };
    };
    return Free;
})();
var Return = (function () {
    function Return(value0) {
        this.value0 = value0;
    };
    Return.create = function (value0) {
        return new Return(value0);
    };
    return Return;
})();
var Bind = (function () {
    function Bind(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Bind.create = function (value0) {
        return function (value1) {
            return new Bind(value0, value1);
        };
    };
    return Bind;
})();
var toView = function (__copy__423) {
    var _423 = __copy__423;
    tco: while (true) {
        var runExpF = function (_426) {
            return _426;
        };
        var concatF = function (_425) {
            return function (r) {
                return new Free(_425.value0, Prelude["<>"](Data_CatList.semigroupCatList)(_425.value1)(r));
            };
        };
        if (_423.value0 instanceof Return) {
            var _765 = Data_CatList.uncons(_423.value1);
            if (_765 instanceof Data_Maybe.Nothing) {
                return new Return(Unsafe_Coerce.unsafeCoerce(_423.value0.value0));
            };
            if (_765 instanceof Data_Maybe.Just) {
                var __tco__423 = Unsafe_Coerce.unsafeCoerce(concatF(runExpF(_765.value0.value0)(_423.value0.value0))(_765.value0.value1));
                _423 = __tco__423;
                continue tco;
            };
            throw new Error("Failed pattern match: " + [ _765.constructor.name ]);
        };
        if (_423.value0 instanceof Bind) {
            return new Bind(_423.value0.value0, function (a) {
                return Unsafe_Coerce.unsafeCoerce(concatF(_423.value0.value1(a))(_423.value1));
            });
        };
        throw new Error("Failed pattern match: " + [ _423.value0.constructor.name ]);
    };
};
var runFreeM = function (__dict_Functor_0) {
    return function (__dict_MonadRec_1) {
        return function (k) {
            var go = function (f) {
                var _774 = toView(f);
                if (_774 instanceof Return) {
                    return Prelude["<$>"]((((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(Prelude.pure((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(_774.value0));
                };
                if (_774 instanceof Bind) {
                    return Prelude["<$>"]((((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Left.create)(k(Prelude["<$>"](__dict_Functor_0)(_774.value1)(_774.value0)));
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-free/src/Control/Monad/Free.purs line 123, column 3 - line 124, column 3: " + [ _774.constructor.name ]);
            };
            return Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_1)(go);
        };
    };
};
var runFree = function (__dict_Functor_2) {
    return function (k) {
        return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.runIdentity)(runFreeM(__dict_Functor_2)(Control_Monad_Rec_Class.monadRecIdentity)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.Identity)(k)));
    };
};
var fromView = function (f) {
    return new Free(Unsafe_Coerce.unsafeCoerce(f), Data_CatList.empty);
};
var suspendF = function (__dict_Applicative_4) {
    return function (f) {
        return fromView(new Bind(Unsafe_Coerce.unsafeCoerce(Prelude.pure(__dict_Applicative_4)(f)), Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.id(Prelude.categoryFn))(Unsafe_Coerce.unsafeCoerce)));
    };
};
var freeMonad = new Prelude.Monad(function () {
    return freeApplicative;
}, function () {
    return freeBind;
});
var freeFunctor = new Prelude.Functor(function (k) {
    return function (f) {
        return Prelude[">>="](freeBind)(f)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["return"](freeApplicative))(k));
    };
});
var freeBind = new Prelude.Bind(function () {
    return freeApply;
}, function (_424) {
    return function (k) {
        return new Free(_424.value0, Data_CatList.snoc(_424.value1)(Unsafe_Coerce.unsafeCoerce(k)));
    };
});
var freeApply = new Prelude.Apply(function () {
    return freeFunctor;
}, Prelude.ap(freeMonad));
var freeApplicative = new Prelude.Applicative(function () {
    return freeApply;
}, Prelude["<<<"](Prelude.semigroupoidFn)(fromView)(Return.create));
var freeMonadRec = new Control_Monad_Rec_Class.MonadRec(function () {
    return freeMonad;
}, function (k) {
    return function (a) {
        return Prelude[">>="](freeBind)(k(a))(Data_Either.either(Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k))(Prelude.pure(freeApplicative)));
    };
});
var liftF = function (f) {
    return fromView(new Bind(Unsafe_Coerce.unsafeCoerce(f), Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.pure(freeApplicative))(Unsafe_Coerce.unsafeCoerce)));
};
var freeMonadTrans = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_5) {
    return liftF;
});
var liftFI = function (__dict_Inject_3) {
    return function (fa) {
        return liftF(Data_Inject.inj(__dict_Inject_3)(fa));
    };
};
var foldFree = function (__dict_MonadRec_6) {
    return function (k) {
        var go = function (f) {
            var _782 = toView(f);
            if (_782 instanceof Return) {
                return Prelude["<$>"]((((__dict_MonadRec_6["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(Prelude.pure((__dict_MonadRec_6["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(_782.value0));
            };
            if (_782 instanceof Bind) {
                return Prelude["<$>"]((((__dict_MonadRec_6["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Left.create)(_782.value1))(k(_782.value0));
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-free/src/Control/Monad/Free.purs line 108, column 3 - line 109, column 3: " + [ _782.constructor.name ]);
        };
        return Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_6)(go);
    };
};
var mapF = function (k) {
    return foldFree(freeMonadRec)(Prelude["<<<"](Prelude.semigroupoidFn)(liftF)(k));
};
var injF = function (__dict_Inject_7) {
    return mapF(Data_Inject.inj(__dict_Inject_7));
};
module.exports = {
    runFreeM: runFreeM, 
    runFree: runFree, 
    foldFree: foldFree, 
    injF: injF, 
    mapF: mapF, 
    liftFI: liftFI, 
    liftF: liftF, 
    suspendF: suspendF, 
    freeFunctor: freeFunctor, 
    freeBind: freeBind, 
    freeApplicative: freeApplicative, 
    freeApply: freeApply, 
    freeMonad: freeMonad, 
    freeMonadTrans: freeMonadTrans, 
    freeMonadRec: freeMonadRec
};

},{"Control.Monad.Rec.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Rec.Class/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","Data.CatList":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.CatList/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Identity":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Identity/index.js","Data.Inject":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Inject/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.NaturalTransformation":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.NaturalTransformation/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js","Unsafe.Coerce":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Unsafe.Coerce/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Maybe.Trans/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Monad = require("Control.Monad");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var MaybeT = function (x) {
    return x;
};
var runMaybeT = function (_229) {
    return _229;
};
var monadTransMaybeT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_1) {
    return Prelude["<<<"](Prelude.semigroupoidFn)(MaybeT)(Prelude.liftM1(__dict_Monad_1)(Data_Maybe.Just.create));
});
var mapMaybeT = function (f) {
    return Prelude["<<<"](Prelude.semigroupoidFn)(MaybeT)(Prelude["<<<"](Prelude.semigroupoidFn)(f)(runMaybeT));
};
var liftPassMaybe = function (__dict_Monad_7) {
    return function (pass) {
        return mapMaybeT(function (m) {
            return pass(Prelude.bind(__dict_Monad_7["__superclass_Prelude.Bind_1"]())(m)(function (_42) {
                return Prelude["return"](__dict_Monad_7["__superclass_Prelude.Applicative_0"]())((function () {
                    if (_42 instanceof Data_Maybe.Nothing) {
                        return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Prelude.id(Prelude.categoryFn));
                    };
                    if (_42 instanceof Data_Maybe.Just) {
                        return new Data_Tuple.Tuple(new Data_Maybe.Just(_42.value0.value0), _42.value0.value1);
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs line 87, column 1 - line 88, column 1: " + [ _42.constructor.name ]);
                })());
            }));
        });
    };
};
var liftListenMaybe = function (__dict_Monad_8) {
    return function (listen) {
        return mapMaybeT(function (m) {
            return Prelude.bind(__dict_Monad_8["__superclass_Prelude.Bind_1"]())(listen(m))(function (_41) {
                return Prelude["return"](__dict_Monad_8["__superclass_Prelude.Applicative_0"]())(Prelude["<$>"](Data_Maybe.functorMaybe)(function (r) {
                    return new Data_Tuple.Tuple(r, _41.value1);
                })(_41.value0));
            });
        });
    };
};
var liftCatchMaybe = function ($$catch) {
    return function (m) {
        return function (h) {
            return MaybeT($$catch(runMaybeT(m))(Prelude["<<<"](Prelude.semigroupoidFn)(runMaybeT)(h)));
        };
    };
};
var liftCallCCMaybe = function (callCC) {
    return function (f) {
        return MaybeT(callCC(function (c) {
            return runMaybeT(f(function (a) {
                return MaybeT(c(new Data_Maybe.Just(a)));
            }));
        }));
    };
};
var monadMaybeT = function (__dict_Monad_4) {
    return new Prelude.Monad(function () {
        return applicativeMaybeT(__dict_Monad_4);
    }, function () {
        return bindMaybeT(__dict_Monad_4);
    });
};
var functorMaybeT = function (__dict_Monad_9) {
    return new Prelude.Functor(Prelude.liftA1(applicativeMaybeT(__dict_Monad_9)));
};
var bindMaybeT = function (__dict_Monad_10) {
    return new Prelude.Bind(function () {
        return applyMaybeT(__dict_Monad_10);
    }, function (x) {
        return function (f) {
            return MaybeT(Prelude.bind(__dict_Monad_10["__superclass_Prelude.Bind_1"]())(runMaybeT(x))(function (_38) {
                if (_38 instanceof Data_Maybe.Nothing) {
                    return Prelude["return"](__dict_Monad_10["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Nothing.value);
                };
                if (_38 instanceof Data_Maybe.Just) {
                    return runMaybeT(f(_38.value0));
                };
                throw new Error("Failed pattern match: " + [ _38.constructor.name ]);
            }));
        };
    });
};
var applyMaybeT = function (__dict_Monad_11) {
    return new Prelude.Apply(function () {
        return functorMaybeT(__dict_Monad_11);
    }, Prelude.ap(monadMaybeT(__dict_Monad_11)));
};
var applicativeMaybeT = function (__dict_Monad_12) {
    return new Prelude.Applicative(function () {
        return applyMaybeT(__dict_Monad_12);
    }, Prelude["<<<"](Prelude.semigroupoidFn)(MaybeT)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.pure(__dict_Monad_12["__superclass_Prelude.Applicative_0"]()))(Data_Maybe.Just.create)));
};
var monadEffMaybe = function (__dict_Monad_5) {
    return function (__dict_MonadEff_6) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadMaybeT(__dict_Monad_5);
        }, Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Trans.lift(monadTransMaybeT)(__dict_Monad_5))(Control_Monad_Eff_Class.liftEff(__dict_MonadEff_6)));
    };
};
var monadRecMaybeT = function (__dict_MonadRec_2) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadMaybeT(__dict_MonadRec_2["__superclass_Prelude.Monad_0"]());
    }, function (f) {
        return Prelude["<<<"](Prelude.semigroupoidFn)(MaybeT)(Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_2)(function (a) {
            return Prelude.bind((__dict_MonadRec_2["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(runMaybeT(f(a)))(function (_40) {
                return Prelude["return"]((__dict_MonadRec_2["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())((function () {
                    if (_40 instanceof Data_Maybe.Nothing) {
                        return new Data_Either.Right(Data_Maybe.Nothing.value);
                    };
                    if (_40 instanceof Data_Maybe.Just && _40.value0 instanceof Data_Either.Left) {
                        return new Data_Either.Left(_40.value0.value0);
                    };
                    if (_40 instanceof Data_Maybe.Just && _40.value0 instanceof Data_Either.Right) {
                        return new Data_Either.Right(new Data_Maybe.Just(_40.value0.value0));
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs line 68, column 1 - line 76, column 1: " + [ _40.constructor.name ]);
                })());
            });
        }));
    });
};
var altMaybeT = function (__dict_Monad_14) {
    return new Control_Alt.Alt(function () {
        return functorMaybeT(__dict_Monad_14);
    }, function (m1) {
        return function (m2) {
            return Prelude.bind(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(runMaybeT(m1))(function (_39) {
                if (_39 instanceof Data_Maybe.Nothing) {
                    return runMaybeT(m2);
                };
                return Prelude["return"](__dict_Monad_14["__superclass_Prelude.Applicative_0"]())(_39);
            });
        };
    });
};
var plusMaybeT = function (__dict_Monad_0) {
    return new Control_Plus.Plus(function () {
        return altMaybeT(__dict_Monad_0);
    }, Prelude.pure(__dict_Monad_0["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Nothing.value));
};
var alternativeMaybeT = function (__dict_Monad_13) {
    return new Control_Alternative.Alternative(function () {
        return plusMaybeT(__dict_Monad_13);
    }, function () {
        return applicativeMaybeT(__dict_Monad_13);
    });
};
var monadPlusMaybeT = function (__dict_Monad_3) {
    return new Control_MonadPlus.MonadPlus(function () {
        return alternativeMaybeT(__dict_Monad_3);
    }, function () {
        return monadMaybeT(__dict_Monad_3);
    });
};
module.exports = {
    MaybeT: MaybeT, 
    liftCallCCMaybe: liftCallCCMaybe, 
    liftPassMaybe: liftPassMaybe, 
    liftListenMaybe: liftListenMaybe, 
    liftCatchMaybe: liftCatchMaybe, 
    mapMaybeT: mapMaybeT, 
    runMaybeT: runMaybeT, 
    functorMaybeT: functorMaybeT, 
    applyMaybeT: applyMaybeT, 
    applicativeMaybeT: applicativeMaybeT, 
    bindMaybeT: bindMaybeT, 
    monadMaybeT: monadMaybeT, 
    monadTransMaybeT: monadTransMaybeT, 
    altMaybeT: altMaybeT, 
    plusMaybeT: plusMaybeT, 
    alternativeMaybeT: alternativeMaybeT, 
    monadPlusMaybeT: monadPlusMaybeT, 
    monadRecMaybeT: monadRecMaybeT, 
    monadEffMaybe: monadEffMaybe
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Alternative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alternative/index.js","Control.Monad":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad/index.js","Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","Control.Monad.Rec.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Rec.Class/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","Control.MonadPlus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.MonadPlus/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.RWS.Trans/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Tuple = require("Data.Tuple");
var Data_Monoid = require("Data.Monoid");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var RWST = function (x) {
    return x;
};
var runRWST = function (_235) {
    return _235;
};
var withRWST = function (f) {
    return function (m) {
        return function (r) {
            return function (s) {
                return Data_Tuple.uncurry(runRWST(m))(f(r)(s));
            };
        };
    };
};
var mkSee = function (__dict_Monoid_5) {
    return function (s) {
        return function (a) {
            return function (w) {
                return {
                    state: s, 
                    result: a, 
                    log: w
                };
            };
        };
    };
};
var monadTransRWST = function (__dict_Monoid_6) {
    return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_7) {
        return function (m) {
            return function (_234) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_7["__superclass_Prelude.Bind_1"]())(m)(function (a) {
                        return Prelude["return"](__dict_Monad_7["__superclass_Prelude.Applicative_0"]())(mkSee(__dict_Monoid_6)(s)(a)(Data_Monoid.mempty(__dict_Monoid_6)));
                    });
                };
            };
        };
    });
};
var mapRWST = function (f) {
    return function (m) {
        return function (r) {
            return function (s) {
                return f(runRWST(m)(r)(s));
            };
        };
    };
};
var functorRWST = function (__dict_Functor_8) {
    return new Prelude.Functor(function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude["<$>"](__dict_Functor_8)(function (see) {
                        var _706 = {};
                        for (var _707 in see) {
                            if (see.hasOwnProperty(_707)) {
                                _706[_707] = see[_707];
                            };
                        };
                        _706.result = f(see.result);
                        return _706;
                    })(runRWST(m)(r)(s));
                };
            };
        };
    });
};
var execRWST = function (__dict_Monad_9) {
    return function (m) {
        return function (r) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_9["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                    return Prelude["return"](__dict_Monad_9["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(see.state, see.log));
                });
            };
        };
    };
};
var evalRWST = function (__dict_Monad_10) {
    return function (m) {
        return function (r) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_10["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                    return Prelude["return"](__dict_Monad_10["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(see.result, see.log));
                });
            };
        };
    };
};
var applyRWST = function (__dict_Bind_13) {
    return function (__dict_Monoid_14) {
        return new Prelude.Apply(function () {
            return functorRWST((__dict_Bind_13["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        }, function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Bind_13)(runRWST(f)(r)(s))(function (_231) {
                            return Prelude["<#>"]((__dict_Bind_13["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(runRWST(m)(r)(_231.state))(function (_230) {
                                return mkSee(__dict_Monoid_14)(_230.state)(_231.result(_230.result))(Prelude["++"](__dict_Monoid_14["__superclass_Prelude.Semigroup_0"]())(_231.log)(_230.log));
                            });
                        });
                    };
                };
            };
        });
    };
};
var bindRWST = function (__dict_Bind_11) {
    return function (__dict_Monoid_12) {
        return new Prelude.Bind(function () {
            return applyRWST(__dict_Bind_11)(__dict_Monoid_12);
        }, function (m) {
            return function (f) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Bind_11)(runRWST(m)(r)(s))(function (_232) {
                            return Prelude["<#>"]((__dict_Bind_11["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(runRWST(f(_232.result))(r)(_232.state))(function (see$prime) {
                                var _717 = {};
                                for (var _718 in see$prime) {
                                    if (see$prime.hasOwnProperty(_718)) {
                                        _717[_718] = see$prime[_718];
                                    };
                                };
                                _717.log = Prelude["++"](__dict_Monoid_12["__superclass_Prelude.Semigroup_0"]())(_232.log)(see$prime.log);
                                return _717;
                            });
                        });
                    };
                };
            };
        });
    };
};
var applicativeRWST = function (__dict_Monad_15) {
    return function (__dict_Monoid_16) {
        return new Prelude.Applicative(function () {
            return applyRWST(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(__dict_Monoid_16);
        }, function (a) {
            return function (_233) {
                return function (s) {
                    return Prelude.pure(__dict_Monad_15["__superclass_Prelude.Applicative_0"]())(mkSee(__dict_Monoid_16)(s)(a)(Data_Monoid.mempty(__dict_Monoid_16)));
                };
            };
        });
    };
};
var monadRWST = function (__dict_Monad_0) {
    return function (__dict_Monoid_1) {
        return new Prelude.Monad(function () {
            return applicativeRWST(__dict_Monad_0)(__dict_Monoid_1);
        }, function () {
            return bindRWST(__dict_Monad_0["__superclass_Prelude.Bind_1"]())(__dict_Monoid_1);
        });
    };
};
var monadEffRWS = function (__dict_Monad_2) {
    return function (__dict_Monoid_3) {
        return function (__dict_MonadEff_4) {
            return new Control_Monad_Eff_Class.MonadEff(function () {
                return monadRWST(__dict_Monad_2)(__dict_Monoid_3);
            }, Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Trans.lift(monadTransRWST(__dict_Monoid_3))(__dict_Monad_2))(Control_Monad_Eff_Class.liftEff(__dict_MonadEff_4)));
        };
    };
};
module.exports = {
    RWST: RWST, 
    withRWST: withRWST, 
    mapRWST: mapRWST, 
    execRWST: execRWST, 
    evalRWST: evalRWST, 
    runRWST: runRWST, 
    mkSee: mkSee, 
    functorRWST: functorRWST, 
    applyRWST: applyRWST, 
    bindRWST: bindRWST, 
    applicativeRWST: applicativeRWST, 
    monadRWST: monadRWST, 
    monadTransRWST: monadTransRWST, 
    monadEffRWS: monadEffRWS
};

},{"Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.RWS/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Identity = require("Data.Identity");
var Control_Monad_RWS_Trans = require("Control.Monad.RWS.Trans");
var Data_Monoid = require("Data.Monoid");
var Data_Tuple = require("Data.Tuple");
var writer = function (__dict_Applicative_0) {
    return function (_242) {
        return function (_236) {
            return function (s) {
                return Prelude.pure(__dict_Applicative_0)({
                    state: s, 
                    result: _242.value0, 
                    log: _242.value1
                });
            };
        };
    };
};
var withRWS = Control_Monad_RWS_Trans.withRWST;
var tell = function (__dict_Applicative_1) {
    return function (w) {
        return writer(__dict_Applicative_1)(new Data_Tuple.Tuple(Prelude.unit, w));
    };
};
var state = function (__dict_Applicative_2) {
    return function (__dict_Monoid_3) {
        return function (f) {
            return function (_240) {
                return function (s) {
                    var _710 = f(s);
                    return Prelude.pure(__dict_Applicative_2)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_3)(_710.value1)(_710.value0)(Data_Monoid.mempty(__dict_Monoid_3)));
                };
            };
        };
    };
};
var rws = function (f) {
    return function (r) {
        return function (s) {
            return Prelude["return"](Data_Identity.applicativeIdentity)(f(r)(s));
        };
    };
};
var runRWS = function (m) {
    return function (r) {
        return function (s) {
            return Data_Identity.runIdentity(Control_Monad_RWS_Trans.runRWST(m)(r)(s));
        };
    };
};
var reader = function (__dict_Applicative_4) {
    return function (__dict_Monoid_5) {
        return function (f) {
            return function (r) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_4)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_5)(s)(f(r))(Data_Monoid.mempty(__dict_Monoid_5)));
                };
            };
        };
    };
};
var put = function (__dict_Applicative_6) {
    return function (__dict_Monoid_7) {
        return function (s) {
            return state(__dict_Applicative_6)(__dict_Monoid_7)(function (_241) {
                return new Data_Tuple.Tuple(Prelude.unit, s);
            });
        };
    };
};
var pass = function (__dict_Monad_8) {
    return function (m) {
        return function (r) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_8["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_238) {
                    return Prelude.pure(__dict_Monad_8["__superclass_Prelude.Applicative_0"]())({
                        state: _238.state, 
                        result: _238.result.value0, 
                        log: _238.result.value1(_238.log)
                    });
                });
            };
        };
    };
};
var modify = function (__dict_Applicative_9) {
    return function (__dict_Monoid_10) {
        return function (f) {
            return state(__dict_Applicative_9)(__dict_Monoid_10)(function (s) {
                return new Data_Tuple.Tuple(Prelude.unit, f(s));
            });
        };
    };
};
var mapRWS = function (f) {
    return Control_Monad_RWS_Trans.mapRWST(Prelude[">>>"](Prelude.semigroupoidFn)(Data_Identity.runIdentity)(Prelude[">>>"](Prelude.semigroupoidFn)(f)(Data_Identity.Identity)));
};
var local = function (f) {
    return function (m) {
        return function (r) {
            return function (s) {
                return Control_Monad_RWS_Trans.runRWST(m)(f(r))(s);
            };
        };
    };
};
var listens = function (__dict_Monad_11) {
    return function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_11["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_239) {
                        return Prelude.pure(__dict_Monad_11["__superclass_Prelude.Applicative_0"]())({
                            state: _239.state, 
                            result: new Data_Tuple.Tuple(_239.result, f(_239.log)), 
                            log: _239.log
                        });
                    });
                };
            };
        };
    };
};
var listen = function (__dict_Monad_12) {
    return function (m) {
        return function (r) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_12["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_237) {
                    return Prelude.pure(__dict_Monad_12["__superclass_Prelude.Applicative_0"]())({
                        state: _237.state, 
                        result: new Data_Tuple.Tuple(_237.result, _237.log), 
                        log: _237.log
                    });
                });
            };
        };
    };
};
var gets = function (__dict_Applicative_13) {
    return function (__dict_Monoid_14) {
        return function (f) {
            return state(__dict_Applicative_13)(__dict_Monoid_14)(function (s) {
                return new Data_Tuple.Tuple(f(s), s);
            });
        };
    };
};
var get = function (__dict_Applicative_15) {
    return function (__dict_Monoid_16) {
        return state(__dict_Applicative_15)(__dict_Monoid_16)(function (s) {
            return new Data_Tuple.Tuple(s, s);
        });
    };
};
var execRWS = function (m) {
    return function (r) {
        return function (s) {
            return Data_Identity.runIdentity(Control_Monad_RWS_Trans.execRWST(Data_Identity.monadIdentity)(m)(r)(s));
        };
    };
};
var evalRWS = function (m) {
    return function (r) {
        return function (s) {
            return Data_Identity.runIdentity(Control_Monad_RWS_Trans.evalRWST(Data_Identity.monadIdentity)(m)(r)(s));
        };
    };
};
var censor = function (__dict_Monad_17) {
    return function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_17["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (see) {
                        return Prelude.pure(__dict_Monad_17["__superclass_Prelude.Applicative_0"]())((function () {
                            var _728 = {};
                            for (var _729 in see) {
                                if (see.hasOwnProperty(_729)) {
                                    _728[_729] = see[_729];
                                };
                            };
                            _728.log = f(see.log);
                            return _728;
                        })());
                    });
                };
            };
        };
    };
};
var ask = function (__dict_Applicative_18) {
    return function (__dict_Monoid_19) {
        return function (r) {
            return function (s) {
                return Prelude.pure(__dict_Applicative_18)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_19)(s)(r)(Data_Monoid.mempty(__dict_Monoid_19)));
            };
        };
    };
};
module.exports = {
    modify: modify, 
    put: put, 
    gets: gets, 
    get: get, 
    state: state, 
    censor: censor, 
    listens: listens, 
    tell: tell, 
    pass: pass, 
    listen: listen, 
    writer: writer, 
    reader: reader, 
    local: local, 
    ask: ask, 
    withRWS: withRWS, 
    mapRWS: mapRWS, 
    execRWS: execRWS, 
    evalRWS: evalRWS, 
    runRWS: runRWS, 
    rws: rws
};

},{"Control.Monad.RWS.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.RWS.Trans/index.js","Data.Identity":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Identity/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Reader.Trans/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Plus = require("Control.Plus");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Data_Distributive = require("Data.Distributive");
var Control_Alternative = require("Control.Alternative");
var Control_MonadPlus = require("Control.MonadPlus");
var ReaderT = function (x) {
    return x;
};
var runReaderT = function (_188) {
    return _188;
};
var withReaderT = function (f) {
    return function (m) {
        return ReaderT(Prelude["<<<"](Prelude.semigroupoidFn)(runReaderT(m))(f));
    };
};
var mapReaderT = function (f) {
    return function (m) {
        return ReaderT(Prelude["<<<"](Prelude.semigroupoidFn)(f)(runReaderT(m)));
    };
};
var liftReaderT = function (m) {
    return Prelude["const"](m);
};
var monadTransReaderT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_4) {
    return liftReaderT;
});
var liftCatchReader = function ($$catch) {
    return function (m) {
        return function (h) {
            return ReaderT(function (r) {
                return $$catch(runReaderT(m)(r))(function (e) {
                    return runReaderT(h(e))(r);
                });
            });
        };
    };
};
var liftCallCCReader = function (callCC) {
    return function (f) {
        return ReaderT(function (r) {
            return callCC(function (c) {
                return runReaderT(f(function (a) {
                    return ReaderT(Prelude["const"](c(a)));
                }))(r);
            });
        });
    };
};
var functorReaderT = function (__dict_Functor_6) {
    return new Prelude.Functor(function (f) {
        return mapReaderT(Prelude["<$>"](__dict_Functor_6)(f));
    });
};
var distributiveReaderT = function (__dict_Distributive_7) {
    return new Data_Distributive.Distributive(function () {
        return functorReaderT(__dict_Distributive_7["__superclass_Prelude.Functor_0"]());
    }, function (__dict_Functor_9) {
        return function (f) {
            return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Distributive.distribute(distributiveReaderT(__dict_Distributive_7))(__dict_Functor_9))(Prelude.map(__dict_Functor_9)(f));
        };
    }, function (__dict_Functor_8) {
        return function (a) {
            return function (e) {
                return Data_Distributive.collect(__dict_Distributive_7)(__dict_Functor_8)(Prelude.flip(runReaderT)(e))(a);
            };
        };
    });
};
var applyReaderT = function (__dict_Applicative_11) {
    return new Prelude.Apply(function () {
        return functorReaderT((__dict_Applicative_11["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
    }, function (f) {
        return function (v) {
            return function (r) {
                return Prelude["<*>"](__dict_Applicative_11["__superclass_Prelude.Apply_0"]())(runReaderT(f)(r))(runReaderT(v)(r));
            };
        };
    });
};
var bindReaderT = function (__dict_Monad_10) {
    return new Prelude.Bind(function () {
        return applyReaderT(__dict_Monad_10["__superclass_Prelude.Applicative_0"]());
    }, function (m) {
        return function (k) {
            return function (r) {
                return Prelude.bind(__dict_Monad_10["__superclass_Prelude.Bind_1"]())(runReaderT(m)(r))(function (_25) {
                    return runReaderT(k(_25))(r);
                });
            };
        };
    });
};
var applicativeReaderT = function (__dict_Applicative_12) {
    return new Prelude.Applicative(function () {
        return applyReaderT(__dict_Applicative_12);
    }, Prelude["<<<"](Prelude.semigroupoidFn)(liftReaderT)(Prelude.pure(__dict_Applicative_12)));
};
var monadReaderT = function (__dict_Monad_0) {
    return new Prelude.Monad(function () {
        return applicativeReaderT(__dict_Monad_0["__superclass_Prelude.Applicative_0"]());
    }, function () {
        return bindReaderT(__dict_Monad_0);
    });
};
var monadEffReader = function (__dict_Monad_2) {
    return function (__dict_MonadEff_3) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadReaderT(__dict_Monad_2);
        }, Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Trans.lift(monadTransReaderT)(__dict_Monad_2))(Control_Monad_Eff_Class.liftEff(__dict_MonadEff_3)));
    };
};
var altReaderT = function (__dict_Alt_14) {
    return new Control_Alt.Alt(function () {
        return functorReaderT(__dict_Alt_14["__superclass_Prelude.Functor_0"]());
    }, function (m) {
        return function (n) {
            return function (r) {
                return Control_Alt["<|>"](__dict_Alt_14)(runReaderT(m)(r))(runReaderT(n)(r));
            };
        };
    });
};
var plusReaderT = function (__dict_Plus_5) {
    return new Control_Plus.Plus(function () {
        return altReaderT(__dict_Plus_5["__superclass_Control.Alt.Alt_0"]());
    }, liftReaderT(Control_Plus.empty(__dict_Plus_5)));
};
var alternativeReaderT = function (__dict_Alternative_13) {
    return new Control_Alternative.Alternative(function () {
        return plusReaderT(__dict_Alternative_13["__superclass_Control.Plus.Plus_1"]());
    }, function () {
        return applicativeReaderT(__dict_Alternative_13["__superclass_Prelude.Applicative_0"]());
    });
};
var monadPlusReaderT = function (__dict_MonadPlus_1) {
    return new Control_MonadPlus.MonadPlus(function () {
        return alternativeReaderT(__dict_MonadPlus_1["__superclass_Control.Alternative.Alternative_1"]());
    }, function () {
        return monadReaderT(__dict_MonadPlus_1["__superclass_Prelude.Monad_0"]());
    });
};
module.exports = {
    ReaderT: ReaderT, 
    liftCallCCReader: liftCallCCReader, 
    liftCatchReader: liftCatchReader, 
    liftReaderT: liftReaderT, 
    mapReaderT: mapReaderT, 
    withReaderT: withReaderT, 
    runReaderT: runReaderT, 
    functorReaderT: functorReaderT, 
    applyReaderT: applyReaderT, 
    applicativeReaderT: applicativeReaderT, 
    altReaderT: altReaderT, 
    plusReaderT: plusReaderT, 
    alternativeReaderT: alternativeReaderT, 
    bindReaderT: bindReaderT, 
    monadReaderT: monadReaderT, 
    monadPlusReaderT: monadPlusReaderT, 
    monadTransReaderT: monadTransReaderT, 
    monadEffReader: monadEffReader, 
    distributiveReaderT: distributiveReaderT
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Alternative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alternative/index.js","Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","Control.MonadPlus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.MonadPlus/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Data.Distributive":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Distributive/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Rec.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Identity = require("Data.Identity");
var Control_Monad_Eff_Unsafe = require("Control.Monad.Eff.Unsafe");
var Control_Monad_ST = require("Control.Monad.ST");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Either_Unsafe = require("Data.Either.Unsafe");
var Data_Functor = require("Data.Functor");
var Data_Either = require("Data.Either");
var MonadRec = function (__superclass_Prelude$dotMonad_0, tailRecM) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.tailRecM = tailRecM;
};
var tailRecM = function (dict) {
    return dict.tailRecM;
};
var tailRecM2 = function (__dict_MonadRec_0) {
    return function (f) {
        return function (a) {
            return function (b) {
                return tailRecM(__dict_MonadRec_0)(function (o) {
                    return f(o.a)(o.b);
                })({
                    a: a, 
                    b: b
                });
            };
        };
    };
};
var tailRecM3 = function (__dict_MonadRec_1) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return tailRecM(__dict_MonadRec_1)(function (o) {
                        return f(o.a)(o.b)(o.c);
                    })({
                        a: a, 
                        b: b, 
                        c: c
                    });
                };
            };
        };
    };
};
var tailRecEff = function (f) {
    return function (a) {
        var f$prime = Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Eff_Unsafe.unsafeInterleaveEff)(f);
        return function __do() {
            var _20 = f$prime(a)();
            var _19 = {
                value: _20
            };
            (function () {
                while (!(function __do() {
                    var _18 = _19.value;
                    return (function () {
                        if (_18 instanceof Data_Either.Left) {
                            return function __do() {
                                var _17 = f$prime(_18.value0)();
                                _19.value = _17;
                                return Prelude["return"](Control_Monad_Eff.applicativeEff)(false)();
                            };
                        };
                        if (_18 instanceof Data_Either.Right) {
                            return Prelude["return"](Control_Monad_Eff.applicativeEff)(true);
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs line 75, column 1 - line 76, column 1: " + [ _18.constructor.name ]);
                    })()();
                })()) {

                };
                return {};
            })();
            return Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Either_Unsafe.fromRight)(Control_Monad_ST.readSTRef(_19))();
        };
    };
};
var tailRec = function (f) {
    return function (a) {
        var go = function (__copy__183) {
            var _183 = __copy__183;
            tco: while (true) {
                if (_183 instanceof Data_Either.Left) {
                    var __tco__183 = f(_183.value0);
                    _183 = __tco__183;
                    continue tco;
                };
                if (_183 instanceof Data_Either.Right) {
                    return _183.value0;
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs line 63, column 1 - line 64, column 1: " + [ _183.constructor.name ]);
            };
        };
        return go(f(a));
    };
};
var monadRecIdentity = new MonadRec(function () {
    return Data_Identity.monadIdentity;
}, function (f) {
    return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.Identity)(tailRec(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.runIdentity)(f)));
});
var monadRecEff = new MonadRec(function () {
    return Control_Monad_Eff.monadEff;
}, tailRecEff);
var forever = function (__dict_MonadRec_2) {
    return function (ma) {
        return tailRecM(__dict_MonadRec_2)(function (u) {
            return Data_Functor["<$"]((((__dict_MonadRec_2["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(new Data_Either.Left(u))(ma);
        })(Prelude.unit);
    };
};
module.exports = {
    MonadRec: MonadRec, 
    forever: forever, 
    tailRecM3: tailRecM3, 
    tailRecM2: tailRecM2, 
    tailRecM: tailRecM, 
    tailRec: tailRec, 
    monadRecIdentity: monadRecIdentity, 
    monadRecEff: monadRecEff
};

},{"Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Unsafe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Unsafe/index.js","Control.Monad.ST":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.ST/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Either.Unsafe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either.Unsafe/index.js","Data.Functor":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor/index.js","Data.Identity":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Identity/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.ST/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.ST

exports.newSTRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readSTRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports.modifySTRef = function (ref) {
  return function (f) {
    return function () {
      /* jshint boss: true */
      return ref.value = f(ref.value);
    };
  };
};

exports.writeSTRef = function (ref) {
  return function (a) {
    return function () {
      /* jshint boss: true */
      return ref.value = a;
    };
  };
};

exports.runST = function (f) {
  return f;
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.ST/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Prelude = require("Prelude");
var pureST = function (st) {
    return Control_Monad_Eff.runPure($foreign.runST(st));
};
module.exports = {
    pureST: pureST, 
    runST: $foreign.runST, 
    writeSTRef: $foreign.writeSTRef, 
    modifySTRef: $foreign.modifySTRef, 
    readSTRef: $foreign.readSTRef, 
    newSTRef: $foreign.newSTRef
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.ST/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_RWS = require("Control.Monad.RWS");
var Control_Monad_State_Trans = require("Control.Monad.State.Trans");
var Control_Monad_Error = require("Control.Monad.Error");
var Control_Monad_Error_Trans = require("Control.Monad.Error.Trans");
var Control_Monad_Maybe_Trans = require("Control.Monad.Maybe.Trans");
var Control_Monad_Reader_Trans = require("Control.Monad.Reader.Trans");
var Control_Monad_RWS_Trans = require("Control.Monad.RWS.Trans");
var Control_Monad_Writer_Trans = require("Control.Monad.Writer.Trans");
var Data_Monoid = require("Data.Monoid");
var Data_Tuple = require("Data.Tuple");
var MonadState = function (state) {
    this.state = state;
};
var state = function (dict) {
    return dict.state;
};
var put = function (__dict_Monad_0) {
    return function (__dict_MonadState_1) {
        return function (s) {
            return state(__dict_MonadState_1)(function (_266) {
                return new Data_Tuple.Tuple(Prelude.unit, s);
            });
        };
    };
};
var monadStateWriterT = function (__dict_Monad_2) {
    return function (__dict_Monoid_3) {
        return function (__dict_MonadState_4) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_3))(__dict_Monad_2)(state(__dict_MonadState_4)(f));
            });
        };
    };
};
var monadStateStateT1 = function (__dict_Monad_5) {
    return function (__dict_MonadState_6) {
        return new MonadState(function (f) {
            return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_5)(state(__dict_MonadState_6)(f));
        });
    };
};
var monadStateStateT = function (__dict_Monad_7) {
    return new MonadState(function (f) {
        return Control_Monad_State_Trans.StateT(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["return"](__dict_Monad_7["__superclass_Prelude.Applicative_0"]()))(f));
    });
};
var monadStateReaderT = function (__dict_Monad_8) {
    return function (__dict_MonadState_9) {
        return new MonadState(function (f) {
            return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_8)(state(__dict_MonadState_9)(f));
        });
    };
};
var monadStateRWST = function (__dict_Monad_10) {
    return function (__dict_Monoid_11) {
        return new MonadState(Control_Monad_RWS.state(__dict_Monad_10["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_11));
    };
};
var monadStateMaybeT = function (__dict_Monad_12) {
    return function (__dict_MonadState_13) {
        return new MonadState(function (f) {
            return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_12)(state(__dict_MonadState_13)(f));
        });
    };
};
var monadStateErrorT = function (__dict_Monad_14) {
    return function (__dict_MonadState_15) {
        return new MonadState(function (f) {
            return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT)(__dict_Monad_14)(state(__dict_MonadState_15)(f));
        });
    };
};
var modify = function (__dict_Monad_16) {
    return function (__dict_MonadState_17) {
        return function (f) {
            return state(__dict_MonadState_17)(function (s) {
                return new Data_Tuple.Tuple(Prelude.unit, f(s));
            });
        };
    };
};
var gets = function (__dict_Monad_18) {
    return function (__dict_MonadState_19) {
        return function (f) {
            return state(__dict_MonadState_19)(function (s) {
                return new Data_Tuple.Tuple(f(s), s);
            });
        };
    };
};
var get = function (__dict_Monad_20) {
    return function (__dict_MonadState_21) {
        return state(__dict_MonadState_21)(function (s) {
            return new Data_Tuple.Tuple(s, s);
        });
    };
};
module.exports = {
    MonadState: MonadState, 
    modify: modify, 
    put: put, 
    gets: gets, 
    get: get, 
    state: state, 
    monadStateStateT: monadStateStateT, 
    monadStateStateT1: monadStateStateT1, 
    monadStateErrorT: monadStateErrorT, 
    monadStateMaybeT: monadStateMaybeT, 
    monadStateReaderT: monadStateReaderT, 
    monadStateWriterT: monadStateWriterT, 
    monadStateRWST: monadStateRWST
};

},{"Control.Monad.Error":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Error/index.js","Control.Monad.Error.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Error.Trans/index.js","Control.Monad.Maybe.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Maybe.Trans/index.js","Control.Monad.RWS":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.RWS/index.js","Control.Monad.RWS.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.RWS.Trans/index.js","Control.Monad.Reader.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Reader.Trans/index.js","Control.Monad.State.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State.Trans/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","Control.Monad.Writer.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Writer.Trans/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State.Trans/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Tuple = require("Data.Tuple");
var Control_Alt = require("Control.Alt");
var Control_Plus = require("Control.Plus");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Alternative = require("Control.Alternative");
var Control_Lazy = require("Control.Lazy");
var Control_MonadPlus = require("Control.MonadPlus");
var Data_Either = require("Data.Either");
var StateT = function (x) {
    return x;
};
var runStateT = function (_245) {
    return _245;
};
var withStateT = function (f) {
    return function (s) {
        return StateT(Prelude["<<<"](Prelude.semigroupoidFn)(runStateT(s))(f));
    };
};
var monadTransStateT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_2) {
    return function (m) {
        return function (s) {
            return Prelude.bind(__dict_Monad_2["__superclass_Prelude.Bind_1"]())(m)(function (_45) {
                return Prelude["return"](__dict_Monad_2["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(_45, s));
            });
        };
    };
});
var mapStateT = function (f) {
    return function (m) {
        return StateT(Prelude["<<<"](Prelude.semigroupoidFn)(f)(runStateT(m)));
    };
};
var liftPassState = function (__dict_Monad_8) {
    return function (pass) {
        return function (m) {
            return StateT(function (s) {
                return pass(Prelude.bind(__dict_Monad_8["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_47) {
                    return Prelude["return"](__dict_Monad_8["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_47.value0.value0, _47.value1), _47.value0.value1));
                }));
            });
        };
    };
};
var liftListenState = function (__dict_Monad_9) {
    return function (listen) {
        return function (m) {
            return StateT(function (s) {
                return Prelude.bind(__dict_Monad_9["__superclass_Prelude.Bind_1"]())(listen(runStateT(m)(s)))(function (_46) {
                    return Prelude["return"](__dict_Monad_9["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_46.value0.value0, _46.value1), _46.value0.value1));
                });
            });
        };
    };
};
var liftCatchState = function ($$catch) {
    return function (m) {
        return function (h) {
            return StateT(function (s) {
                return $$catch(runStateT(m)(s))(function (e) {
                    return runStateT(h(e))(s);
                });
            });
        };
    };
};
var liftCallCCState$prime = function (callCC) {
    return function (f) {
        return StateT(function (s) {
            return callCC(function (c) {
                return runStateT(f(function (a) {
                    return StateT(function (s$prime) {
                        return c(new Data_Tuple.Tuple(a, s$prime));
                    });
                }))(s);
            });
        });
    };
};
var liftCallCCState = function (callCC) {
    return function (f) {
        return StateT(function (s) {
            return callCC(function (c) {
                return runStateT(f(function (a) {
                    return StateT(function (_244) {
                        return c(new Data_Tuple.Tuple(a, s));
                    });
                }))(s);
            });
        });
    };
};
var lazyStateT = new Control_Lazy.Lazy(function (f) {
    return StateT(function (s) {
        return runStateT(f(Prelude.unit))(s);
    });
});
var execStateT = function (__dict_Apply_11) {
    return function (m) {
        return function (s) {
            return Prelude["<$>"](__dict_Apply_11["__superclass_Prelude.Functor_0"]())(Data_Tuple.snd)(runStateT(m)(s));
        };
    };
};
var evalStateT = function (__dict_Apply_12) {
    return function (m) {
        return function (s) {
            return Prelude["<$>"](__dict_Apply_12["__superclass_Prelude.Functor_0"]())(Data_Tuple.fst)(runStateT(m)(s));
        };
    };
};
var monadStateT = function (__dict_Monad_3) {
    return new Prelude.Monad(function () {
        return applicativeStateT(__dict_Monad_3);
    }, function () {
        return bindStateT(__dict_Monad_3);
    });
};
var functorStateT = function (__dict_Monad_10) {
    return new Prelude.Functor(Prelude.liftM1(monadStateT(__dict_Monad_10)));
};
var bindStateT = function (__dict_Monad_13) {
    return new Prelude.Bind(function () {
        return applyStateT(__dict_Monad_13);
    }, function (_246) {
        return function (f) {
            return function (s) {
                return Prelude.bind(__dict_Monad_13["__superclass_Prelude.Bind_1"]())(_246(s))(function (_43) {
                    return runStateT(f(_43.value0))(_43.value1);
                });
            };
        };
    });
};
var applyStateT = function (__dict_Monad_14) {
    return new Prelude.Apply(function () {
        return functorStateT(__dict_Monad_14);
    }, Prelude.ap(monadStateT(__dict_Monad_14)));
};
var applicativeStateT = function (__dict_Monad_15) {
    return new Prelude.Applicative(function () {
        return applyStateT(__dict_Monad_15);
    }, function (a) {
        return StateT(function (s) {
            return Prelude["return"](__dict_Monad_15["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(a, s));
        });
    });
};
var monadEffState = function (__dict_Monad_6) {
    return function (__dict_MonadEff_7) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadStateT(__dict_Monad_6);
        }, Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Trans.lift(monadTransStateT)(__dict_Monad_6))(Control_Monad_Eff_Class.liftEff(__dict_MonadEff_7)));
    };
};
var monadRecStateT = function (__dict_MonadRec_4) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadStateT(__dict_MonadRec_4["__superclass_Prelude.Monad_0"]());
    }, function (f) {
        return function (a) {
            var f$prime = function (_247) {
                return Prelude.bind((__dict_MonadRec_4["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(runStateT(f(_247.value0))(_247.value1))(function (_44) {
                    return Prelude["return"]((__dict_MonadRec_4["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())((function () {
                        if (_44.value0 instanceof Data_Either.Left) {
                            return new Data_Either.Left(new Data_Tuple.Tuple(_44.value0.value0, _44.value1));
                        };
                        if (_44.value0 instanceof Data_Either.Right) {
                            return new Data_Either.Right(new Data_Tuple.Tuple(_44.value0.value0, _44.value1));
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs line 73, column 5 - line 79, column 1: " + [ _44.value0.constructor.name ]);
                    })());
                });
            };
            return function (s) {
                return Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_4)(f$prime)(new Data_Tuple.Tuple(a, s));
            };
        };
    });
};
var altStateT = function (__dict_Monad_18) {
    return function (__dict_Alt_19) {
        return new Control_Alt.Alt(function () {
            return functorStateT(__dict_Monad_18);
        }, function (x) {
            return function (y) {
                return StateT(function (s) {
                    return Control_Alt["<|>"](__dict_Alt_19)(runStateT(x)(s))(runStateT(y)(s));
                });
            };
        });
    };
};
var plusStateT = function (__dict_Monad_0) {
    return function (__dict_Plus_1) {
        return new Control_Plus.Plus(function () {
            return altStateT(__dict_Monad_0)(__dict_Plus_1["__superclass_Control.Alt.Alt_0"]());
        }, StateT(function (_243) {
            return Control_Plus.empty(__dict_Plus_1);
        }));
    };
};
var alternativeStateT = function (__dict_Monad_16) {
    return function (__dict_Alternative_17) {
        return new Control_Alternative.Alternative(function () {
            return plusStateT(__dict_Monad_16)(__dict_Alternative_17["__superclass_Control.Plus.Plus_1"]());
        }, function () {
            return applicativeStateT(__dict_Monad_16);
        });
    };
};
var monadPlusStateT = function (__dict_MonadPlus_5) {
    return new Control_MonadPlus.MonadPlus(function () {
        return alternativeStateT(__dict_MonadPlus_5["__superclass_Prelude.Monad_0"]())(__dict_MonadPlus_5["__superclass_Control.Alternative.Alternative_1"]());
    }, function () {
        return monadStateT(__dict_MonadPlus_5["__superclass_Prelude.Monad_0"]());
    });
};
module.exports = {
    StateT: StateT, 
    "liftCallCCState'": liftCallCCState$prime, 
    liftCallCCState: liftCallCCState, 
    liftPassState: liftPassState, 
    liftListenState: liftListenState, 
    liftCatchState: liftCatchState, 
    withStateT: withStateT, 
    mapStateT: mapStateT, 
    execStateT: execStateT, 
    evalStateT: evalStateT, 
    runStateT: runStateT, 
    functorStateT: functorStateT, 
    applyStateT: applyStateT, 
    applicativeStateT: applicativeStateT, 
    altStateT: altStateT, 
    plusStateT: plusStateT, 
    alternativeStateT: alternativeStateT, 
    bindStateT: bindStateT, 
    monadStateT: monadStateT, 
    monadRecStateT: monadRecStateT, 
    monadPlusStateT: monadPlusStateT, 
    monadTransStateT: monadTransStateT, 
    lazyStateT: lazyStateT, 
    monadEffState: monadEffState
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Alternative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alternative/index.js","Control.Lazy":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Lazy/index.js","Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","Control.Monad.Rec.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Rec.Class/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","Control.MonadPlus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.MonadPlus/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Identity = require("Data.Identity");
var Control_Monad_State_Trans = require("Control.Monad.State.Trans");
var Data_Tuple = require("Data.Tuple");
var withState = Control_Monad_State_Trans.withStateT;
var runState = function (s) {
    return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.runIdentity)(Control_Monad_State_Trans.runStateT(s));
};
var mapState = function (f) {
    return Control_Monad_State_Trans.mapStateT(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.Identity)(Prelude["<<<"](Prelude.semigroupoidFn)(f)(Data_Identity.runIdentity)));
};
var execState = function (m) {
    return function (s) {
        return Data_Tuple.snd(runState(m)(s));
    };
};
var evalState = function (m) {
    return function (s) {
        return Data_Tuple.fst(runState(m)(s));
    };
};
module.exports = {
    withState: withState, 
    mapState: mapState, 
    execState: execState, 
    evalState: evalState, 
    runState: runState
};

},{"Control.Monad.State.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State.Trans/index.js","Data.Identity":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Identity/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var MonadTrans = function (lift) {
    this.lift = lift;
};
var lift = function (dict) {
    return dict.lift;
};
module.exports = {
    MonadTrans: MonadTrans, 
    lift: lift
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Writer.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Writer_Trans = require("Control.Monad.Writer.Trans");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Error_Trans = require("Control.Monad.Error.Trans");
var Control_Monad_Maybe_Trans = require("Control.Monad.Maybe.Trans");
var Control_Monad_State_Trans = require("Control.Monad.State.Trans");
var Control_Monad_Reader_Trans = require("Control.Monad.Reader.Trans");
var Control_Monad_RWS = require("Control.Monad.RWS");
var Control_Monad_Error = require("Control.Monad.Error");
var Control_Monad_RWS_Trans = require("Control.Monad.RWS.Trans");
var Data_Monoid = require("Data.Monoid");
var Data_Tuple = require("Data.Tuple");
var MonadWriter = function (listen, pass, writer) {
    this.listen = listen;
    this.pass = pass;
    this.writer = writer;
};
var writer = function (dict) {
    return dict.writer;
};
var tell = function (__dict_Monoid_0) {
    return function (__dict_Monad_1) {
        return function (__dict_MonadWriter_2) {
            return function (w) {
                return writer(__dict_MonadWriter_2)(new Data_Tuple.Tuple(Prelude.unit, w));
            };
        };
    };
};
var pass = function (dict) {
    return dict.pass;
};
var monadWriterWriterT = function (__dict_Monoid_3) {
    return function (__dict_Monad_4) {
        return new MonadWriter(function (m) {
            return Control_Monad_Writer_Trans.WriterT(Prelude.bind(__dict_Monad_4["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_68) {
                return Prelude["return"](__dict_Monad_4["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_68.value0, _68.value1), _68.value1));
            }));
        }, function (m) {
            return Control_Monad_Writer_Trans.WriterT(Prelude.bind(__dict_Monad_4["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_69) {
                return Prelude["return"](__dict_Monad_4["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(_69.value0.value0, _69.value0.value1(_69.value1)));
            }));
        }, Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Writer_Trans.WriterT)(Prelude["return"](__dict_Monad_4["__superclass_Prelude.Applicative_0"]())));
    };
};
var monadWriterRWST = function (__dict_Monad_5) {
    return function (__dict_Monoid_6) {
        return new MonadWriter(Control_Monad_RWS.listen(__dict_Monad_5), Control_Monad_RWS.pass(__dict_Monad_5), Control_Monad_RWS.writer(__dict_Monad_5["__superclass_Prelude.Applicative_0"]()));
    };
};
var listen = function (dict) {
    return dict.listen;
};
var listens = function (__dict_Monoid_7) {
    return function (__dict_Monad_8) {
        return function (__dict_MonadWriter_9) {
            return function (f) {
                return function (m) {
                    return Prelude.bind(__dict_Monad_8["__superclass_Prelude.Bind_1"]())(listen(__dict_MonadWriter_9)(m))(function (_66) {
                        return Prelude["return"](__dict_Monad_8["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(_66.value0, f(_66.value1)));
                    });
                };
            };
        };
    };
};
var monadWriterErrorT = function (__dict_Monad_10) {
    return function (__dict_MonadWriter_11) {
        return new MonadWriter(Control_Monad_Error_Trans.liftListenError(__dict_Monad_10)(listen(__dict_MonadWriter_11)), Control_Monad_Error_Trans.liftPassError(__dict_Monad_10)(pass(__dict_MonadWriter_11)), function (wd) {
            return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT)(__dict_Monad_10)(writer(__dict_MonadWriter_11)(wd));
        });
    };
};
var monadWriterMaybeT = function (__dict_Monad_12) {
    return function (__dict_MonadWriter_13) {
        return new MonadWriter(Control_Monad_Maybe_Trans.liftListenMaybe(__dict_Monad_12)(listen(__dict_MonadWriter_13)), Control_Monad_Maybe_Trans.liftPassMaybe(__dict_Monad_12)(pass(__dict_MonadWriter_13)), function (wd) {
            return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_12)(writer(__dict_MonadWriter_13)(wd));
        });
    };
};
var monadWriterReaderT = function (__dict_Monad_14) {
    return function (__dict_MonadWriter_15) {
        return new MonadWriter(Control_Monad_Reader_Trans.mapReaderT(listen(__dict_MonadWriter_15)), Control_Monad_Reader_Trans.mapReaderT(pass(__dict_MonadWriter_15)), function (wd) {
            return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_14)(writer(__dict_MonadWriter_15)(wd));
        });
    };
};
var monadWriterStateT = function (__dict_Monad_16) {
    return function (__dict_MonadWriter_17) {
        return new MonadWriter(Control_Monad_State_Trans.liftListenState(__dict_Monad_16)(listen(__dict_MonadWriter_17)), Control_Monad_State_Trans.liftPassState(__dict_Monad_16)(pass(__dict_MonadWriter_17)), function (wd) {
            return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_16)(writer(__dict_MonadWriter_17)(wd));
        });
    };
};
var censor = function (__dict_Monoid_18) {
    return function (__dict_Monad_19) {
        return function (__dict_MonadWriter_20) {
            return function (f) {
                return function (m) {
                    return pass(__dict_MonadWriter_20)(Prelude.bind(__dict_Monad_19["__superclass_Prelude.Bind_1"]())(m)(function (_67) {
                        return Prelude["return"](__dict_Monad_19["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(_67, f));
                    }));
                };
            };
        };
    };
};
module.exports = {
    MonadWriter: MonadWriter, 
    censor: censor, 
    listens: listens, 
    tell: tell, 
    pass: pass, 
    listen: listen, 
    writer: writer, 
    monadWriterWriterT: monadWriterWriterT, 
    monadWriterErrorT: monadWriterErrorT, 
    monadWriterMaybeT: monadWriterMaybeT, 
    monadWriterStateT: monadWriterStateT, 
    monadWriterReaderT: monadWriterReaderT, 
    monadWriterRWST: monadWriterRWST
};

},{"Control.Monad.Error":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Error/index.js","Control.Monad.Error.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Error.Trans/index.js","Control.Monad.Maybe.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Maybe.Trans/index.js","Control.Monad.RWS":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.RWS/index.js","Control.Monad.RWS.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.RWS.Trans/index.js","Control.Monad.Reader.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Reader.Trans/index.js","Control.Monad.State.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State.Trans/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","Control.Monad.Writer.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Writer.Trans/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Writer.Trans/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Tuple = require("Data.Tuple");
var Data_Monoid = require("Data.Monoid");
var Control_Alt = require("Control.Alt");
var Control_Plus = require("Control.Plus");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Alternative = require("Control.Alternative");
var Control_MonadPlus = require("Control.MonadPlus");
var Data_Either = require("Data.Either");
var WriterT = function (x) {
    return x;
};
var runWriterT = function (_249) {
    return _249;
};
var monadTransWriterT = function (__dict_Monoid_4) {
    return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_5) {
        return function (m) {
            return WriterT(Prelude.bind(__dict_Monad_5["__superclass_Prelude.Bind_1"]())(m)(function (_51) {
                return Prelude["return"](__dict_Monad_5["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(_51, Data_Monoid.mempty(__dict_Monoid_4)));
            }));
        };
    });
};
var mapWriterT = function (f) {
    return function (m) {
        return WriterT(f(runWriterT(m)));
    };
};
var liftCatchWriter = function ($$catch) {
    return function (m) {
        return function (h) {
            return WriterT($$catch(runWriterT(m))(function (e) {
                return runWriterT(h(e));
            }));
        };
    };
};
var liftCallCCWriter = function (__dict_Monoid_13) {
    return function (callCC) {
        return function (f) {
            return WriterT(callCC(function (c) {
                return runWriterT(f(function (a) {
                    return WriterT(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_13))));
                }));
            }));
        };
    };
};
var functorWriterT = function (__dict_Functor_14) {
    return new Prelude.Functor(function (f) {
        return mapWriterT(Prelude["<$>"](__dict_Functor_14)(function (_248) {
            return new Data_Tuple.Tuple(f(_248.value0), _248.value1);
        }));
    });
};
var execWriterT = function (__dict_Apply_15) {
    return function (m) {
        return Prelude["<$>"](__dict_Apply_15["__superclass_Prelude.Functor_0"]())(Data_Tuple.snd)(runWriterT(m));
    };
};
var applyWriterT = function (__dict_Monoid_18) {
    return function (__dict_Apply_19) {
        return new Prelude.Apply(function () {
            return functorWriterT(__dict_Apply_19["__superclass_Prelude.Functor_0"]());
        }, function (f) {
            return function (v) {
                return WriterT((function () {
                    var k = function (_250) {
                        return function (_251) {
                            return new Data_Tuple.Tuple(_250.value0(_251.value0), Prelude["<>"](__dict_Monoid_18["__superclass_Prelude.Semigroup_0"]())(_250.value1)(_251.value1));
                        };
                    };
                    return Prelude["<*>"](__dict_Apply_19)(Prelude["<$>"](__dict_Apply_19["__superclass_Prelude.Functor_0"]())(k)(runWriterT(f)))(runWriterT(v));
                })());
            };
        });
    };
};
var bindWriterT = function (__dict_Monoid_16) {
    return function (__dict_Monad_17) {
        return new Prelude.Bind(function () {
            return applyWriterT(__dict_Monoid_16)((__dict_Monad_17["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
        }, function (m) {
            return function (k) {
                return WriterT(Prelude.bind(__dict_Monad_17["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (_49) {
                    return Prelude.bind(__dict_Monad_17["__superclass_Prelude.Bind_1"]())(runWriterT(k(_49.value0)))(function (_48) {
                        return Prelude["return"](__dict_Monad_17["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(_48.value0, Prelude["<>"](__dict_Monoid_16["__superclass_Prelude.Semigroup_0"]())(_49.value1)(_48.value1)));
                    });
                }));
            };
        });
    };
};
var applicativeWriterT = function (__dict_Monoid_20) {
    return function (__dict_Applicative_21) {
        return new Prelude.Applicative(function () {
            return applyWriterT(__dict_Monoid_20)(__dict_Applicative_21["__superclass_Prelude.Apply_0"]());
        }, function (a) {
            return WriterT(Prelude.pure(__dict_Applicative_21)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_20))));
        });
    };
};
var monadWriterT = function (__dict_Monoid_2) {
    return function (__dict_Monad_3) {
        return new Prelude.Monad(function () {
            return applicativeWriterT(__dict_Monoid_2)(__dict_Monad_3["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindWriterT(__dict_Monoid_2)(__dict_Monad_3);
        });
    };
};
var monadEffWriter = function (__dict_Monad_10) {
    return function (__dict_Monoid_11) {
        return function (__dict_MonadEff_12) {
            return new Control_Monad_Eff_Class.MonadEff(function () {
                return monadWriterT(__dict_Monoid_11)(__dict_Monad_10);
            }, Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Trans.lift(monadTransWriterT(__dict_Monoid_11))(__dict_Monad_10))(Control_Monad_Eff_Class.liftEff(__dict_MonadEff_12)));
        };
    };
};
var monadRecWriterT = function (__dict_Monoid_6) {
    return function (__dict_MonadRec_7) {
        return new Control_Monad_Rec_Class.MonadRec(function () {
            return monadWriterT(__dict_Monoid_6)(__dict_MonadRec_7["__superclass_Prelude.Monad_0"]());
        }, function (f) {
            return function (a) {
                var f$prime = function (_252) {
                    return Prelude.bind((__dict_MonadRec_7["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(runWriterT(f(_252.value0)))(function (_50) {
                        return Prelude["return"]((__dict_MonadRec_7["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())((function () {
                            if (_50.value0 instanceof Data_Either.Left) {
                                return new Data_Either.Left(new Data_Tuple.Tuple(_50.value0.value0, Prelude["<>"](__dict_Monoid_6["__superclass_Prelude.Semigroup_0"]())(_252.value1)(_50.value1)));
                            };
                            if (_50.value0 instanceof Data_Either.Right) {
                                return new Data_Either.Right(new Data_Tuple.Tuple(_50.value0.value0, Prelude["<>"](__dict_Monoid_6["__superclass_Prelude.Semigroup_0"]())(_252.value1)(_50.value1)));
                            };
                            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs line 68, column 5 - line 74, column 1: " + [ _50.value0.constructor.name ]);
                        })());
                    });
                };
                return WriterT(Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_7)(f$prime)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_6))));
            };
        });
    };
};
var altWriterT = function (__dict_Monoid_24) {
    return function (__dict_Alt_25) {
        return new Control_Alt.Alt(function () {
            return functorWriterT(__dict_Alt_25["__superclass_Prelude.Functor_0"]());
        }, function (m) {
            return function (n) {
                return WriterT(Control_Alt["<|>"](__dict_Alt_25)(runWriterT(m))(runWriterT(n)));
            };
        });
    };
};
var plusWriterT = function (__dict_Monoid_0) {
    return function (__dict_Plus_1) {
        return new Control_Plus.Plus(function () {
            return altWriterT(__dict_Monoid_0)(__dict_Plus_1["__superclass_Control.Alt.Alt_0"]());
        }, Control_Plus.empty(__dict_Plus_1));
    };
};
var alternativeWriterT = function (__dict_Monoid_22) {
    return function (__dict_Alternative_23) {
        return new Control_Alternative.Alternative(function () {
            return plusWriterT(__dict_Monoid_22)(__dict_Alternative_23["__superclass_Control.Plus.Plus_1"]());
        }, function () {
            return applicativeWriterT(__dict_Monoid_22)(__dict_Alternative_23["__superclass_Prelude.Applicative_0"]());
        });
    };
};
var monadPlusWriterT = function (__dict_Monoid_8) {
    return function (__dict_MonadPlus_9) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeWriterT(__dict_Monoid_8)(__dict_MonadPlus_9["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadWriterT(__dict_Monoid_8)(__dict_MonadPlus_9["__superclass_Prelude.Monad_0"]());
        });
    };
};
module.exports = {
    WriterT: WriterT, 
    liftCallCCWriter: liftCallCCWriter, 
    liftCatchWriter: liftCatchWriter, 
    mapWriterT: mapWriterT, 
    execWriterT: execWriterT, 
    runWriterT: runWriterT, 
    functorWriterT: functorWriterT, 
    applyWriterT: applyWriterT, 
    applicativeWriterT: applicativeWriterT, 
    altWriterT: altWriterT, 
    plusWriterT: plusWriterT, 
    alternativeWriterT: alternativeWriterT, 
    bindWriterT: bindWriterT, 
    monadWriterT: monadWriterT, 
    monadRecWriterT: monadRecWriterT, 
    monadPlusWriterT: monadPlusWriterT, 
    monadTransWriterT: monadTransWriterT, 
    monadEffWriter: monadEffWriter
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Alternative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alternative/index.js","Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","Control.Monad.Rec.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Rec.Class/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","Control.MonadPlus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.MonadPlus/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Writer/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Identity = require("Data.Identity");
var Control_Monad_Writer_Trans = require("Control.Monad.Writer.Trans");
var Data_Tuple = require("Data.Tuple");
var Data_Monoid = require("Data.Monoid");
var runWriter = Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.runIdentity)(Control_Monad_Writer_Trans.runWriterT);
var mapWriter = function (f) {
    return Control_Monad_Writer_Trans.mapWriterT(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.Identity)(Prelude["<<<"](Prelude.semigroupoidFn)(f)(Data_Identity.runIdentity)));
};
var execWriter = function (m) {
    return Data_Tuple.snd(runWriter(m));
};
module.exports = {
    mapWriter: mapWriter, 
    execWriter: execWriter, 
    runWriter: runWriter
};

},{"Control.Monad.Writer.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Writer.Trans/index.js","Data.Identity":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Identity/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var when = function (__dict_Monad_0) {
    return function (_232) {
        return function (m) {
            if (_232) {
                return m;
            };
            if (!_232) {
                return Prelude["return"](__dict_Monad_0["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-control/src/Control/Monad.purs line 8, column 1 - line 9, column 1: " + [ _232.constructor.name, m.constructor.name ]);
        };
    };
};
var unless = function (__dict_Monad_1) {
    return function (_233) {
        return function (m) {
            if (!_233) {
                return m;
            };
            if (_233) {
                return Prelude["return"](__dict_Monad_1["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-control/src/Control/Monad.purs line 13, column 1 - line 14, column 1: " + [ _233.constructor.name, m.constructor.name ]);
        };
    };
};
module.exports = {
    unless: unless, 
    when: when
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.MonadPlus/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Plus = require("Control.Plus");
var Control_Alternative = require("Control.Alternative");
var MonadPlus = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
    this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
};
var monadPlusArray = new MonadPlus(function () {
    return Control_Alternative.alternativeArray;
}, function () {
    return Prelude.monadArray;
});
var guard = function (__dict_MonadPlus_0) {
    return function (_359) {
        if (_359) {
            return Prelude["return"]((__dict_MonadPlus_0["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
        };
        if (!_359) {
            return Control_Plus.empty((__dict_MonadPlus_0["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-control/src/Control/MonadPlus.purs line 35, column 1 - line 36, column 1: " + [ _359.constructor.name ]);
    };
};
module.exports = {
    MonadPlus: MonadPlus, 
    guard: guard, 
    monadPlusArray: monadPlusArray
};

},{"Control.Alternative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alternative/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
    this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
    this.empty = empty;
};
var plusArray = new Plus(function () {
    return Control_Alt.altArray;
}, [  ]);
var empty = function (dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus, 
    empty: empty, 
    plusArray: plusArray
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.EventPhase/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Enum = require("Data.Enum");
var Data_Maybe = require("Data.Maybe");
var None = (function () {
    function None() {

    };
    None.value = new None();
    return None;
})();
var Capturing = (function () {
    function Capturing() {

    };
    Capturing.value = new Capturing();
    return Capturing;
})();
var AtTarget = (function () {
    function AtTarget() {

    };
    AtTarget.value = new AtTarget();
    return AtTarget;
})();
var Bubbling = (function () {
    function Bubbling() {

    };
    Bubbling.value = new Bubbling();
    return Bubbling;
})();
var toEnumEventPhase = function (_325) {
    if (_325 === 0) {
        return new Data_Maybe.Just(None.value);
    };
    if (_325 === 1) {
        return new Data_Maybe.Just(Capturing.value);
    };
    if (_325 === 2) {
        return new Data_Maybe.Just(AtTarget.value);
    };
    if (_325 === 3) {
        return new Data_Maybe.Just(Bubbling.value);
    };
    return Data_Maybe.Nothing.value;
};
var fromEnumEventPhase = function (_326) {
    if (_326 instanceof None) {
        return 0;
    };
    if (_326 instanceof Capturing) {
        return 1;
    };
    if (_326 instanceof AtTarget) {
        return 2;
    };
    if (_326 instanceof Bubbling) {
        return 3;
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-dom/src/DOM/Event/EventPhase.purs line 44, column 1 - line 45, column 1: " + [ _326.constructor.name ]);
};
var eqEventPhase = new Prelude.Eq(function (_327) {
    return function (_328) {
        if (_327 instanceof None && _328 instanceof None) {
            return true;
        };
        if (_327 instanceof Capturing && _328 instanceof Capturing) {
            return true;
        };
        if (_327 instanceof AtTarget && _328 instanceof AtTarget) {
            return true;
        };
        if (_327 instanceof Bubbling && _328 instanceof Bubbling) {
            return true;
        };
        return false;
    };
});
var ordEventPhase = new Prelude.Ord(function () {
    return eqEventPhase;
}, function (x) {
    return function (y) {
        return Prelude.compare(Prelude.ordInt)(fromEnumEventPhase(x))(fromEnumEventPhase(y));
    };
});
var boundedEventPhase = new Prelude.Bounded(None.value, Bubbling.value);
var boundedOrdEventPhase = new Prelude.BoundedOrd(function () {
    return boundedEventPhase;
}, function () {
    return ordEventPhase;
});
var enumEventPhase = new Data_Enum.Enum(function () {
    return boundedEventPhase;
}, 4, fromEnumEventPhase, Data_Enum.defaultPred(toEnumEventPhase)(fromEnumEventPhase), Data_Enum.defaultSucc(toEnumEventPhase)(fromEnumEventPhase), toEnumEventPhase);
module.exports = {
    None: None, 
    Capturing: Capturing, 
    AtTarget: AtTarget, 
    Bubbling: Bubbling, 
    eqEventPhase: eqEventPhase, 
    ordEventPhase: ordEventPhase, 
    boundedEventPhase: boundedEventPhase, 
    boundedOrdEventPhase: boundedOrdEventPhase, 
    enumEventPhase: enumEventPhase
};

},{"Data.Enum":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Enum/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.EventTarget/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.Event.EventTarget

exports.eventListener = function (fn) {
  return function (event) {
    return fn(event)();
  };
};

exports.addEventListener = function (type) {
  return function (listener) {
    return function (useCapture) {
      return function (target) {
        return function () {
          target.addEventListener(type, listener, useCapture);
          return {};
        };
      };
    };
  };
};

exports.removeEventListener = function (type) {
  return function (listener) {
    return function (useCapture) {
      return function (target) {
        return function () {
          target.removeEventListener(type, listener, useCapture);
          return {};
        };
      };
    };
  };
};

exports.dispatchEvent = function (event) {
  return function (target) {
    return function () {
      return target.dispatchEvent(event);
    };
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.EventTarget/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Exception = require("Control.Monad.Eff.Exception");
var DOM = require("DOM");
var DOM_Event_Types = require("DOM.Event.Types");
module.exports = {
    dispatchEvent: $foreign.dispatchEvent, 
    removeEventListener: $foreign.removeEventListener, 
    addEventListener: $foreign.addEventListener, 
    eventListener: $foreign.eventListener
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.EventTarget/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Exception":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Exception/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","DOM.Event.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.Types/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.EventTypes/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var DOM_Event_Types = require("DOM.Event.Types");
var wheel = "wheel";
var waiting = "waiting";
var volumechange = "volumechange";
var visibilitychange = "visibilitychange";
var unload = "unload";
var transitionend = "transitionend";
var touchstart = "touchstart";
var touchmove = "touchmove";
var touchleave = "touchleave";
var touchenter = "touchenter";
var touchend = "touchend";
var touchcancel = "touchcancel";
var timeupdate = "timeupdate";
var timeout = "timeout";
var suspend = "suspend";
var submit = "submit";
var stalled = "stalled";
var show = "show";
var select = "select";
var seeking = "seeking";
var seeked = "seeked";
var scroll = "scroll";
var resize = "resize";
var reset = "reset";
var readystatechange = "readystatechange";
var ratechange = "ratechange";
var progress = "progress";
var popstate = "popstate";
var playing = "playing";
var play = "play";
var pause = "pause";
var paste = "paste";
var pageshow = "pageshow";
var pagehide = "pagehide";
var open = "open";
var mouseup = "mouseup";
var mouseover = "mouseover";
var mouseout = "mouseout";
var mousemove = "mousemove";
var mouseleave = "mouseleave";
var mouseenter = "mouseenter";
var mousedown = "mousedown";
var message = "message";
var loadstart = "loadstart";
var loadend = "loadend";
var loadedmetadata = "loadedmetadata";
var loadeddata = "loadeddata";
var load = "load";
var keyup = "keyup";
var keypress = "keypress";
var keydown = "keydown";
var invalid = "invalid";
var input = "input";
var hashchange = "hashchange";
var fullscreenerror = "fullscreenerror";
var fullscreenchange = "fullscreenchange";
var focus = "focus";
var error = "error";
var ended = "ended";
var emptied = "emptied";
var durationchange = "durationchange";
var drop = "drop";
var dragstart = "dragstart";
var dragover = "dragover";
var dragleave = "dragleave";
var dragenter = "dragenter";
var dragend = "dragend";
var drag = "drag";
var dblclick = "dblclick";
var cut = "cut";
var copy = "copy";
var contextmenu = "contextmenu";
var compositionupdate = "compositionupdate";
var compositionstart = "compositionstart";
var compositionend = "compositionend";
var complete = "complete";
var click = "click";
var change = "change";
var canplaythrough = "canplaythrough";
var canplay = "canplay";
var blur = "blur";
var beforeunload = "beforeunload";
var beforeprint = "beforeprint";
var audioprocess = "audioprocess";
var animationstart = "animationstart";
var animationiteration = "animationiteration";
var animationend = "animationend";
var abort = "abort";
module.exports = {
    wheel: wheel, 
    waiting: waiting, 
    volumechange: volumechange, 
    visibilitychange: visibilitychange, 
    unload: unload, 
    transitionend: transitionend, 
    touchstart: touchstart, 
    touchmove: touchmove, 
    touchleave: touchleave, 
    touchenter: touchenter, 
    touchend: touchend, 
    touchcancel: touchcancel, 
    timeupdate: timeupdate, 
    timeout: timeout, 
    suspend: suspend, 
    submit: submit, 
    stalled: stalled, 
    show: show, 
    select: select, 
    seeking: seeking, 
    seeked: seeked, 
    scroll: scroll, 
    resize: resize, 
    reset: reset, 
    readystatechange: readystatechange, 
    ratechange: ratechange, 
    progress: progress, 
    popstate: popstate, 
    playing: playing, 
    play: play, 
    pause: pause, 
    paste: paste, 
    pageshow: pageshow, 
    pagehide: pagehide, 
    open: open, 
    mouseup: mouseup, 
    mouseover: mouseover, 
    mouseout: mouseout, 
    mousemove: mousemove, 
    mouseleave: mouseleave, 
    mouseenter: mouseenter, 
    mousedown: mousedown, 
    message: message, 
    loadstart: loadstart, 
    loadend: loadend, 
    loadedmetadata: loadedmetadata, 
    loadeddata: loadeddata, 
    load: load, 
    keyup: keyup, 
    keypress: keypress, 
    keydown: keydown, 
    invalid: invalid, 
    input: input, 
    hashchange: hashchange, 
    fullscreenerror: fullscreenerror, 
    fullscreenchange: fullscreenchange, 
    focus: focus, 
    error: error, 
    ended: ended, 
    emptied: emptied, 
    durationchange: durationchange, 
    drop: drop, 
    dragstart: dragstart, 
    dragover: dragover, 
    dragleave: dragleave, 
    dragenter: dragenter, 
    dragend: dragend, 
    drag: drag, 
    dblclick: dblclick, 
    cut: cut, 
    copy: copy, 
    contextmenu: contextmenu, 
    compositionupdate: compositionupdate, 
    compositionstart: compositionstart, 
    compositionend: compositionend, 
    complete: complete, 
    click: click, 
    change: change, 
    canplaythrough: canplaythrough, 
    canplay: canplay, 
    blur: blur, 
    beforeunload: beforeunload, 
    beforeprint: beforeprint, 
    audioprocess: audioprocess, 
    animationstart: animationstart, 
    animationiteration: animationiteration, 
    animationend: animationend, 
    abort: abort
};

},{"DOM.Event.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.Types/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.Types/foreign.js":[function(require,module,exports){
/* global exports, EventTarget */
"use strict";

// module DOM.Event.Types

exports._readEventTarget = function (left) {
  return function (right) {
    return function (foreign) {
      return foreign instanceof EventTarget ? left("Value is not an EventTarget") : right(foreign);
    };
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Unsafe_Coerce = require("Unsafe.Coerce");
var Data_Foreign = require("Data.Foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Either = require("Data.Either");
var Data_Foreign_Class = require("Data.Foreign.Class");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var DOM = require("DOM");
var DOM_Event_EventPhase = require("DOM.Event.EventPhase");
var EventType = function (x) {
    return x;
};
var unsafeToEvent = Unsafe_Coerce.unsafeCoerce;
var userProximityEventToEvent = unsafeToEvent;
var wheelEventToEvent = unsafeToEvent;
var uiEventToEvent = unsafeToEvent;
var transitionEventToEvent = unsafeToEvent;
var touchEventToEvent = unsafeToEvent;
var timeEventToEvent = unsafeToEvent;
var svgZoomEventToEvent = unsafeToEvent;
var svgEventToEvent = unsafeToEvent;
var storageEventToEvent = unsafeToEvent;
var sensorEventToEvent = unsafeToEvent;
var rtcPeerConnectionIceEventToEvent = unsafeToEvent;
var rtcIdentityEventToEvent = unsafeToEvent;
var rtcIdentityErrorEventToEvent = unsafeToEvent;
var rtcDataChannelEventToEvent = unsafeToEvent;
var relatedEventToEvent = unsafeToEvent;
var readWheelEvent = Data_Foreign.unsafeReadTagged("WheelEvent");
var readUserProximityEvent = Data_Foreign.unsafeReadTagged("UserProximityEvent");
var readUIEvent = Data_Foreign.unsafeReadTagged("UIEvent");
var readTransitionEvent = Data_Foreign.unsafeReadTagged("TransitionEvent");
var readTouchEvent = Data_Foreign.unsafeReadTagged("TouchEvent");
var readTimeEvent = Data_Foreign.unsafeReadTagged("TimeEvent");
var readStorageEvent = Data_Foreign.unsafeReadTagged("StorageEvent");
var readSensorEvent = Data_Foreign.unsafeReadTagged("SensorEvent");
var readSVGZoomEvent = Data_Foreign.unsafeReadTagged("SVGZoomEvent");
var readSVGEvent = Data_Foreign.unsafeReadTagged("SVGEvent");
var readRelatedEvent = Data_Foreign.unsafeReadTagged("RelatedEvent");
var readRTCPeerConnectionIceEvent = Data_Foreign.unsafeReadTagged("RTCPeerConnectionIceEvent");
var readRTCIdentityEvent = Data_Foreign.unsafeReadTagged("RTCIdentityEvent");
var readRTCIdentityErrorEvent = Data_Foreign.unsafeReadTagged("RTCIdentityErrorEvent");
var readRTCDataChannelEvent = Data_Foreign.unsafeReadTagged("RTCDataChannelEvent");
var readProgressEvent = Data_Foreign.unsafeReadTagged("ProgressEvent");
var readPopStateEvent = Data_Foreign.unsafeReadTagged("PopStateEvent");
var readPointerEvent = Data_Foreign.unsafeReadTagged("PointerEvent");
var readPageTransitionEvent = Data_Foreign.unsafeReadTagged("PageTransitionEvent");
var readOfflineAudioCompletionEvent = Data_Foreign.unsafeReadTagged("OfflineAudioCompletionEvent");
var readMutationEvent = Data_Foreign.unsafeReadTagged("MutationEvent");
var readMouseEvent = Data_Foreign.unsafeReadTagged("MouseEvent");
var readMessageEvent = Data_Foreign.unsafeReadTagged("MessageEvent");
var readMediaStreamEvent = Data_Foreign.unsafeReadTagged("MediaStreamEvent");
var readKeyboardEvent = Data_Foreign.unsafeReadTagged("KeyboardEvent");
var readInputEvent = Data_Foreign.unsafeReadTagged("InputEvent");
var readIDBVersionChangeEvent = Data_Foreign.unsafeReadTagged("IDBVersionChangeEvent");
var readHashChangeEvent = Data_Foreign.unsafeReadTagged("HashChangeEvent");
var readGamepadEvent = Data_Foreign.unsafeReadTagged("GamepadEvent");
var readFocusEvent = Data_Foreign.unsafeReadTagged("FocusEvent");
var readFetchEvent = Data_Foreign.unsafeReadTagged("FetchEvent");
var readEventTarget = $foreign._readEventTarget(Data_Either.Left.create)(Data_Either.Right.create);
var readErrorEvent = Data_Foreign.unsafeReadTagged("ErrorEvent");
var readEditingBeforeInputEvent = Data_Foreign.unsafeReadTagged("EditingBeforeInputEvent");
var readDragEvent = Data_Foreign.unsafeReadTagged("DragEvent");
var readDeviceProximityEvent = Data_Foreign.unsafeReadTagged("DeviceProximityEvent");
var readDeviceOrientationEvent = Data_Foreign.unsafeReadTagged("DeviceOrientationEvent");
var readDeviceMotionEvent = Data_Foreign.unsafeReadTagged("DeviceMotionEvent");
var readDeviceLightEvent = Data_Foreign.unsafeReadTagged("DeviceLightEvent");
var readDOMTransactionEvent = Data_Foreign.unsafeReadTagged("DOMTransactionEvent");
var readCustomEvent = Data_Foreign.unsafeReadTagged("CustomEvent");
var readCompositionEvent = Data_Foreign.unsafeReadTagged("CompositionEvent");
var readCloseEvent = Data_Foreign.unsafeReadTagged("CloseEvent");
var readClipboardEvent = Data_Foreign.unsafeReadTagged("ClipboardEvent");
var readCSSFontFaceLoadEvent = Data_Foreign.unsafeReadTagged("CSSFontFaceLoadEvent");
var readBlobEvent = Data_Foreign.unsafeReadTagged("BlobEvent");
var readBeforeUnloadEvent = Data_Foreign.unsafeReadTagged("BeforeUnloadEvent");
var readBeforeInputEvent = Data_Foreign.unsafeReadTagged("BeforeInputEvent");
var readAudioProcessingEvent = Data_Foreign.unsafeReadTagged("AudioProcessingEvent");
var readAnimationEvent = Data_Foreign.unsafeReadTagged("AnimationEvent");
var progressEventToEvent = unsafeToEvent;
var popStateEventToEvent = unsafeToEvent;
var pointerEventToEvent = unsafeToEvent;
var pageTransitionEventToEvent = unsafeToEvent;
var offlineAudioCompletionEventToEvent = unsafeToEvent;
var mutationEventToEvent = unsafeToEvent;
var mouseEventToEvent = unsafeToEvent;
var messageEventToEvent = unsafeToEvent;
var mediaStreamEventToEvent = unsafeToEvent;
var keyboardEventToEvent = unsafeToEvent;
var isForeignWheelEvent = new Data_Foreign_Class.IsForeign(readWheelEvent);
var isForeignUserProximityEvent = new Data_Foreign_Class.IsForeign(readUserProximityEvent);
var isForeignUIEvent = new Data_Foreign_Class.IsForeign(readUIEvent);
var isForeignTransitionEvent = new Data_Foreign_Class.IsForeign(readTransitionEvent);
var isForeignTouchEvent = new Data_Foreign_Class.IsForeign(readTouchEvent);
var isForeignTimeEvent = new Data_Foreign_Class.IsForeign(readTimeEvent);
var isForeignStorageEvent = new Data_Foreign_Class.IsForeign(readStorageEvent);
var isForeignSensorEvent = new Data_Foreign_Class.IsForeign(readSensorEvent);
var isForeignSVGZoomEvent = new Data_Foreign_Class.IsForeign(readSVGZoomEvent);
var isForeignSVGEvent = new Data_Foreign_Class.IsForeign(readSVGEvent);
var isForeignRelatedEvent = new Data_Foreign_Class.IsForeign(readRelatedEvent);
var isForeignRTCPeerConnectionIceEvent = new Data_Foreign_Class.IsForeign(readRTCPeerConnectionIceEvent);
var isForeignRTCIdentityEvent = new Data_Foreign_Class.IsForeign(readRTCIdentityEvent);
var isForeignRTCIdentityErrorEvent = new Data_Foreign_Class.IsForeign(readRTCIdentityErrorEvent);
var isForeignRTCDataChannelEvent = new Data_Foreign_Class.IsForeign(readRTCDataChannelEvent);
var isForeignProgressEvent = new Data_Foreign_Class.IsForeign(readProgressEvent);
var isForeignPopStateEvent = new Data_Foreign_Class.IsForeign(readPopStateEvent);
var isForeignPointerEvent = new Data_Foreign_Class.IsForeign(readPointerEvent);
var isForeignPageTransitionEvent = new Data_Foreign_Class.IsForeign(readPageTransitionEvent);
var isForeignOfflineAudioCompletionEvent = new Data_Foreign_Class.IsForeign(readOfflineAudioCompletionEvent);
var isForeignMutationEvent = new Data_Foreign_Class.IsForeign(readMutationEvent);
var isForeignMouseEvent = new Data_Foreign_Class.IsForeign(readMouseEvent);
var isForeignMessageEvent = new Data_Foreign_Class.IsForeign(readMessageEvent);
var isForeignMediaStreamEvent = new Data_Foreign_Class.IsForeign(readMediaStreamEvent);
var isForeignKeyboardEvent = new Data_Foreign_Class.IsForeign(readKeyboardEvent);
var isForeignInputEvent = new Data_Foreign_Class.IsForeign(readInputEvent);
var isForeignIDBVersionChangeEvent = new Data_Foreign_Class.IsForeign(readIDBVersionChangeEvent);
var isForeignHashChangeEvent = new Data_Foreign_Class.IsForeign(readHashChangeEvent);
var isForeignGamepadEvent = new Data_Foreign_Class.IsForeign(readGamepadEvent);
var isForeignFocusEvent = new Data_Foreign_Class.IsForeign(readFocusEvent);
var isForeignFetchEvent = new Data_Foreign_Class.IsForeign(readFetchEvent);
var isForeignEventTarget = new Data_Foreign_Class.IsForeign(readEventTarget);
var isForeignErrorEvent = new Data_Foreign_Class.IsForeign(readErrorEvent);
var isForeignEditingBeforeInputEvent = new Data_Foreign_Class.IsForeign(readEditingBeforeInputEvent);
var isForeignDragEvent = new Data_Foreign_Class.IsForeign(readDragEvent);
var isForeignDeviceProximityEvent = new Data_Foreign_Class.IsForeign(readDeviceProximityEvent);
var isForeignDeviceOrientationEvent = new Data_Foreign_Class.IsForeign(readDeviceOrientationEvent);
var isForeignDeviceMotionEvent = new Data_Foreign_Class.IsForeign(readDeviceMotionEvent);
var isForeignDeviceLightEvent = new Data_Foreign_Class.IsForeign(readDeviceLightEvent);
var isForeignDOMTransactionEvent = new Data_Foreign_Class.IsForeign(readDOMTransactionEvent);
var isForeignCustomEvent = new Data_Foreign_Class.IsForeign(readCustomEvent);
var isForeignCompositionEvent = new Data_Foreign_Class.IsForeign(readCompositionEvent);
var isForeignCloseEvent = new Data_Foreign_Class.IsForeign(readCloseEvent);
var isForeignClipboardEvent = new Data_Foreign_Class.IsForeign(readClipboardEvent);
var isForeignCSSFontFaceLoadEvent = new Data_Foreign_Class.IsForeign(readCSSFontFaceLoadEvent);
var isForeignBlobEvent = new Data_Foreign_Class.IsForeign(readBlobEvent);
var isForeignBeforeUnloadEvent = new Data_Foreign_Class.IsForeign(readBeforeUnloadEvent);
var isForeignBeforeInputEvent = new Data_Foreign_Class.IsForeign(readBeforeInputEvent);
var isForeignAudioProcessingEvent = new Data_Foreign_Class.IsForeign(readAudioProcessingEvent);
var isForeignAnimationEvent = new Data_Foreign_Class.IsForeign(readAnimationEvent);
var inputEventToEvent = unsafeToEvent;
var idbVersionChangeEventToEvent = unsafeToEvent;
var hashChangeEventToEvent = unsafeToEvent;
var gamepadEventToEvent = unsafeToEvent;
var focusEventToEvent = unsafeToEvent;
var fetchEventToEvent = unsafeToEvent;
var errorEventToEvent = unsafeToEvent;
var eqEventType = new Prelude.Eq(function (_329) {
    return function (_330) {
        return Prelude["=="](Prelude.eqString)(_329)(_330);
    };
});
var ordEventType = new Prelude.Ord(function () {
    return eqEventType;
}, function (_331) {
    return function (_332) {
        return Prelude.compare(Prelude.ordString)(_331)(_332);
    };
});
var editingBeforeInputEventToEvent = unsafeToEvent;
var dragEventToEvent = unsafeToEvent;
var domTransactionEventToEvent = unsafeToEvent;
var deviceProximityEventToEvent = unsafeToEvent;
var deviceOrientationEventToEvent = unsafeToEvent;
var deviceMotionEventToEvent = unsafeToEvent;
var deviceLightEventToEvent = unsafeToEvent;
var customEventToEvent = unsafeToEvent;
var cssFontFaceLoadEventToEvent = unsafeToEvent;
var compositionEventToEvent = unsafeToEvent;
var closeEventToEvent = unsafeToEvent;
var clipboardEventToEvent = unsafeToEvent;
var blobEventToEvent = unsafeToEvent;
var beforeUnloadEventToEvent = unsafeToEvent;
var beforeInputEventToEvent = unsafeToEvent;
var audioProcessingEventToEvent = unsafeToEvent;
var animationEventToEvent = unsafeToEvent;
module.exports = {
    EventType: EventType, 
    readWheelEvent: readWheelEvent, 
    wheelEventToEvent: wheelEventToEvent, 
    readUserProximityEvent: readUserProximityEvent, 
    userProximityEventToEvent: userProximityEventToEvent, 
    readUIEvent: readUIEvent, 
    uiEventToEvent: uiEventToEvent, 
    readTransitionEvent: readTransitionEvent, 
    transitionEventToEvent: transitionEventToEvent, 
    readTouchEvent: readTouchEvent, 
    touchEventToEvent: touchEventToEvent, 
    readTimeEvent: readTimeEvent, 
    timeEventToEvent: timeEventToEvent, 
    readSVGZoomEvent: readSVGZoomEvent, 
    svgZoomEventToEvent: svgZoomEventToEvent, 
    readSVGEvent: readSVGEvent, 
    svgEventToEvent: svgEventToEvent, 
    readStorageEvent: readStorageEvent, 
    storageEventToEvent: storageEventToEvent, 
    readSensorEvent: readSensorEvent, 
    sensorEventToEvent: sensorEventToEvent, 
    readRTCPeerConnectionIceEvent: readRTCPeerConnectionIceEvent, 
    rtcPeerConnectionIceEventToEvent: rtcPeerConnectionIceEventToEvent, 
    readRTCIdentityEvent: readRTCIdentityEvent, 
    rtcIdentityEventToEvent: rtcIdentityEventToEvent, 
    readRTCIdentityErrorEvent: readRTCIdentityErrorEvent, 
    rtcIdentityErrorEventToEvent: rtcIdentityErrorEventToEvent, 
    readRTCDataChannelEvent: readRTCDataChannelEvent, 
    rtcDataChannelEventToEvent: rtcDataChannelEventToEvent, 
    readRelatedEvent: readRelatedEvent, 
    relatedEventToEvent: relatedEventToEvent, 
    readProgressEvent: readProgressEvent, 
    progressEventToEvent: progressEventToEvent, 
    readPopStateEvent: readPopStateEvent, 
    popStateEventToEvent: popStateEventToEvent, 
    readPointerEvent: readPointerEvent, 
    pointerEventToEvent: pointerEventToEvent, 
    readPageTransitionEvent: readPageTransitionEvent, 
    pageTransitionEventToEvent: pageTransitionEventToEvent, 
    readOfflineAudioCompletionEvent: readOfflineAudioCompletionEvent, 
    offlineAudioCompletionEventToEvent: offlineAudioCompletionEventToEvent, 
    readMutationEvent: readMutationEvent, 
    mutationEventToEvent: mutationEventToEvent, 
    readMouseEvent: readMouseEvent, 
    mouseEventToEvent: mouseEventToEvent, 
    readMessageEvent: readMessageEvent, 
    messageEventToEvent: messageEventToEvent, 
    readMediaStreamEvent: readMediaStreamEvent, 
    mediaStreamEventToEvent: mediaStreamEventToEvent, 
    readKeyboardEvent: readKeyboardEvent, 
    keyboardEventToEvent: keyboardEventToEvent, 
    readInputEvent: readInputEvent, 
    inputEventToEvent: inputEventToEvent, 
    readIDBVersionChangeEvent: readIDBVersionChangeEvent, 
    idbVersionChangeEventToEvent: idbVersionChangeEventToEvent, 
    readHashChangeEvent: readHashChangeEvent, 
    hashChangeEventToEvent: hashChangeEventToEvent, 
    readGamepadEvent: readGamepadEvent, 
    gamepadEventToEvent: gamepadEventToEvent, 
    readFocusEvent: readFocusEvent, 
    focusEventToEvent: focusEventToEvent, 
    readFetchEvent: readFetchEvent, 
    fetchEventToEvent: fetchEventToEvent, 
    readErrorEvent: readErrorEvent, 
    errorEventToEvent: errorEventToEvent, 
    readEditingBeforeInputEvent: readEditingBeforeInputEvent, 
    editingBeforeInputEventToEvent: editingBeforeInputEventToEvent, 
    readDragEvent: readDragEvent, 
    dragEventToEvent: dragEventToEvent, 
    readDOMTransactionEvent: readDOMTransactionEvent, 
    domTransactionEventToEvent: domTransactionEventToEvent, 
    readDeviceProximityEvent: readDeviceProximityEvent, 
    deviceProximityEventToEvent: deviceProximityEventToEvent, 
    readDeviceOrientationEvent: readDeviceOrientationEvent, 
    deviceOrientationEventToEvent: deviceOrientationEventToEvent, 
    readDeviceMotionEvent: readDeviceMotionEvent, 
    deviceMotionEventToEvent: deviceMotionEventToEvent, 
    readDeviceLightEvent: readDeviceLightEvent, 
    deviceLightEventToEvent: deviceLightEventToEvent, 
    readCustomEvent: readCustomEvent, 
    customEventToEvent: customEventToEvent, 
    readCSSFontFaceLoadEvent: readCSSFontFaceLoadEvent, 
    cssFontFaceLoadEventToEvent: cssFontFaceLoadEventToEvent, 
    readCompositionEvent: readCompositionEvent, 
    compositionEventToEvent: compositionEventToEvent, 
    readCloseEvent: readCloseEvent, 
    closeEventToEvent: closeEventToEvent, 
    readClipboardEvent: readClipboardEvent, 
    clipboardEventToEvent: clipboardEventToEvent, 
    readBlobEvent: readBlobEvent, 
    blobEventToEvent: blobEventToEvent, 
    readBeforeUnloadEvent: readBeforeUnloadEvent, 
    beforeUnloadEventToEvent: beforeUnloadEventToEvent, 
    readBeforeInputEvent: readBeforeInputEvent, 
    beforeInputEventToEvent: beforeInputEventToEvent, 
    readAudioProcessingEvent: readAudioProcessingEvent, 
    audioProcessingEventToEvent: audioProcessingEventToEvent, 
    readAnimationEvent: readAnimationEvent, 
    animationEventToEvent: animationEventToEvent, 
    readEventTarget: readEventTarget, 
    eqEventType: eqEventType, 
    ordEventType: ordEventType, 
    isForeignEventTarget: isForeignEventTarget, 
    isForeignAnimationEvent: isForeignAnimationEvent, 
    isForeignAudioProcessingEvent: isForeignAudioProcessingEvent, 
    isForeignBeforeInputEvent: isForeignBeforeInputEvent, 
    isForeignBeforeUnloadEvent: isForeignBeforeUnloadEvent, 
    isForeignBlobEvent: isForeignBlobEvent, 
    isForeignClipboardEvent: isForeignClipboardEvent, 
    isForeignCloseEvent: isForeignCloseEvent, 
    isForeignCompositionEvent: isForeignCompositionEvent, 
    isForeignCSSFontFaceLoadEvent: isForeignCSSFontFaceLoadEvent, 
    isForeignCustomEvent: isForeignCustomEvent, 
    isForeignDeviceLightEvent: isForeignDeviceLightEvent, 
    isForeignDeviceMotionEvent: isForeignDeviceMotionEvent, 
    isForeignDeviceOrientationEvent: isForeignDeviceOrientationEvent, 
    isForeignDeviceProximityEvent: isForeignDeviceProximityEvent, 
    isForeignDOMTransactionEvent: isForeignDOMTransactionEvent, 
    isForeignDragEvent: isForeignDragEvent, 
    isForeignEditingBeforeInputEvent: isForeignEditingBeforeInputEvent, 
    isForeignErrorEvent: isForeignErrorEvent, 
    isForeignFetchEvent: isForeignFetchEvent, 
    isForeignFocusEvent: isForeignFocusEvent, 
    isForeignGamepadEvent: isForeignGamepadEvent, 
    isForeignHashChangeEvent: isForeignHashChangeEvent, 
    isForeignIDBVersionChangeEvent: isForeignIDBVersionChangeEvent, 
    isForeignInputEvent: isForeignInputEvent, 
    isForeignKeyboardEvent: isForeignKeyboardEvent, 
    isForeignMediaStreamEvent: isForeignMediaStreamEvent, 
    isForeignMessageEvent: isForeignMessageEvent, 
    isForeignMouseEvent: isForeignMouseEvent, 
    isForeignMutationEvent: isForeignMutationEvent, 
    isForeignOfflineAudioCompletionEvent: isForeignOfflineAudioCompletionEvent, 
    isForeignPageTransitionEvent: isForeignPageTransitionEvent, 
    isForeignPointerEvent: isForeignPointerEvent, 
    isForeignPopStateEvent: isForeignPopStateEvent, 
    isForeignProgressEvent: isForeignProgressEvent, 
    isForeignRelatedEvent: isForeignRelatedEvent, 
    isForeignRTCDataChannelEvent: isForeignRTCDataChannelEvent, 
    isForeignRTCIdentityErrorEvent: isForeignRTCIdentityErrorEvent, 
    isForeignRTCIdentityEvent: isForeignRTCIdentityEvent, 
    isForeignRTCPeerConnectionIceEvent: isForeignRTCPeerConnectionIceEvent, 
    isForeignSensorEvent: isForeignSensorEvent, 
    isForeignStorageEvent: isForeignStorageEvent, 
    isForeignSVGEvent: isForeignSVGEvent, 
    isForeignSVGZoomEvent: isForeignSVGZoomEvent, 
    isForeignTimeEvent: isForeignTimeEvent, 
    isForeignTouchEvent: isForeignTouchEvent, 
    isForeignTransitionEvent: isForeignTransitionEvent, 
    isForeignUIEvent: isForeignUIEvent, 
    isForeignUserProximityEvent: isForeignUserProximityEvent, 
    isForeignWheelEvent: isForeignWheelEvent
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.Types/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","DOM.Event.EventPhase":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.EventPhase/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign/index.js","Data.Foreign.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign.Class/index.js","Data.Maybe.Unsafe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe.Unsafe/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js","Unsafe.Coerce":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Unsafe.Coerce/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.File.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
module.exports = {};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Document/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.HTML.Document

exports.body = function (doc) {
  return function () {
    return doc.body;
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Document/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Nullable = require("Data.Nullable");
var DOM = require("DOM");
var DOM_HTML_Types = require("DOM.HTML.Types");
module.exports = {
    body: $foreign.body
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Document/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","DOM.HTML.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Types/index.js","Data.Nullable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Nullable/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Types/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.HTML.Types

exports._readHTMLElement = function (failure) {
  return function (success) {
    return function (value) {
      var tag = Object.prototype.toString.call(value);
      if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
        return success(value);
      } else {
        return failure(tag);
      }
    };
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Unsafe_Coerce = require("Unsafe.Coerce");
var Data_Foreign = require("Data.Foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Foreign_Class = require("Data.Foreign.Class");
var DOM_Event_Types = require("DOM.Event.Types");
var DOM_Node_Types = require("DOM.Node.Types");
var windowToEventTarget = Unsafe_Coerce.unsafeCoerce;
var readHTMLElement = $foreign._readHTMLElement(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Left.create)(Data_Foreign.TypeMismatch.create("HTMLElement")))(Data_Either.Right.create);
var readHTMLDocument = Data_Foreign.unsafeReadTagged("HTMLDocument");
var isForeignHTMLElement = new Data_Foreign_Class.IsForeign(readHTMLElement);
var isForeignHTMLDocument = new Data_Foreign_Class.IsForeign(readHTMLDocument);
var htmlElementToParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToEventTarget = Unsafe_Coerce.unsafeCoerce;
var htmlElementToElement = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToEventTarget = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToDocument = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    readHTMLElement: readHTMLElement, 
    htmlElementToEventTarget: htmlElementToEventTarget, 
    htmlElementToNode: htmlElementToNode, 
    htmlElementToNonDocumentTypeChildNode: htmlElementToNonDocumentTypeChildNode, 
    htmlElementToParentNode: htmlElementToParentNode, 
    htmlElementToElement: htmlElementToElement, 
    readHTMLDocument: readHTMLDocument, 
    htmlDocumentToEventTarget: htmlDocumentToEventTarget, 
    htmlDocumentToNode: htmlDocumentToNode, 
    htmlDocumentToParentNode: htmlDocumentToParentNode, 
    htmlDocumentToNonElementParentNode: htmlDocumentToNonElementParentNode, 
    htmlDocumentToDocument: htmlDocumentToDocument, 
    windowToEventTarget: windowToEventTarget, 
    isForeignHTMLDocument: isForeignHTMLDocument, 
    isForeignHTMLElement: isForeignHTMLElement
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Types/foreign.js","DOM.Event.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.Types/index.js","DOM.Node.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.Types/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign/index.js","Data.Foreign.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign.Class/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js","Unsafe.Coerce":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Unsafe.Coerce/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Window/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.HTML.Window

exports.document = function (window) {
  return function () {
    return window.document;
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Window/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var DOM = require("DOM");
var DOM_HTML_Types = require("DOM.HTML.Types");
module.exports = {
    document: $foreign.document
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Window/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","DOM.HTML.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Types/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML/foreign.js":[function(require,module,exports){
/* global exports, window */
"use strict";

// module DOM.HTML

exports.window = function () {
  return window;
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var DOM = require("DOM");
var DOM_HTML_Types = require("DOM.HTML.Types");
module.exports = {
    window: $foreign.window
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","DOM.HTML.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Types/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.Document/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.Node.Document

var getEffProp = function (name) {
  return function (doc) {
    return function () {
      return doc[name];
    };
  };
};

exports.url = getEffProp("URL");
exports.documentURI = getEffProp("documentURI");
exports.origin = getEffProp("origin");
exports.compatMode = getEffProp("compatMode");
exports.characterSet = getEffProp("characterSet");
exports.contentType = getEffProp("contentType");

exports.doctype = getEffProp("doctype");
exports.documentElement = getEffProp("documentElement");

exports.getElementsByTagName = function (localName) {
  return function (doc) {
    return function () {
      return doc.getElementsByTagName(localName);
    };
  };
};

exports.getElementsByTagNameNS = function (ns) {
  return function (localName) {
    return function (doc) {
      return function () {
        return doc.getElementsByTagNameNS(ns, localName);
      };
    };
  };
};

exports.getElementsByClassName = function (classNames) {
  return function (doc) {
    return function () {
      return doc.getElementsByClassName(classNames);
    };
  };
};

exports.createElement = function (localName) {
  return function (doc) {
    return function () {
      return doc.createElement(localName);
    };
  };
};

exports.createElementNS = function (ns) {
  return function (qualifiedName) {
    return function (doc) {
      return function () {
        return doc.createElement(ns, qualifiedName);
      };
    };
  };
};

exports.createDocumentFragment = function (doc) {
  return function () {
    return doc.createDocumentFragment();
  };
};

exports.createTextNode = function (data) {
  return function (doc) {
    return function () {
      return doc.createTextNode(data);
    };
  };
};

exports.createComment = function (data) {
  return function (doc) {
    return function () {
      return doc.createComment(data);
    };
  };
};

exports.createProcessingInstruction = function (target) {
  return function (data) {
    return function (doc) {
      return function () {
        return doc.createProcessingInstruction(target, data);
      };
    };
  };
};

exports.importNode = function (node) {
  return function (deep) {
    return function (doc) {
      return function () {
        return doc.importNode(node, deep);
      };
    };
  };
};

exports.adoptNode = function (node) {
  return function (doc) {
    return function () {
      return doc.adoptNode(node);
    };
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.Document/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Nullable = require("Data.Nullable");
var DOM = require("DOM");
var DOM_Node_Types = require("DOM.Node.Types");
module.exports = {
    adoptNode: $foreign.adoptNode, 
    importNode: $foreign.importNode, 
    createProcessingInstruction: $foreign.createProcessingInstruction, 
    createComment: $foreign.createComment, 
    createTextNode: $foreign.createTextNode, 
    createDocumentFragment: $foreign.createDocumentFragment, 
    createElementNS: $foreign.createElementNS, 
    createElement: $foreign.createElement, 
    getElementsByClassName: $foreign.getElementsByClassName, 
    getElementsByTagNameNS: $foreign.getElementsByTagNameNS, 
    getElementsByTagName: $foreign.getElementsByTagName, 
    documentElement: $foreign.documentElement, 
    doctype: $foreign.doctype, 
    contentType: $foreign.contentType, 
    characterSet: $foreign.characterSet, 
    compatMode: $foreign.compatMode, 
    origin: $foreign.origin, 
    documentURI: $foreign.documentURI, 
    url: $foreign.url
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.Document/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","DOM.Node.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.Types/index.js","Data.Nullable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Nullable/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.HTMLCollection/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.Node.HTMLCollection

exports.length = function (list) {
  return function () {
    return list.length;
  };
};

exports.item = function (index) {
  return function (list) {
    return function () {
      return list.item(index);
    };
  };
};

exports.namedItem = function (name) {
  return function (list) {
    return function () {
      return list.namedItem(name);
    };
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.HTMLCollection/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Nullable = require("Data.Nullable");
var DOM = require("DOM");
var DOM_Node_Types = require("DOM.Node.Types");
module.exports = {
    namedItem: $foreign.namedItem, 
    item: $foreign.item, 
    length: $foreign.length
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.HTMLCollection/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","DOM.Node.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.Types/index.js","Data.Nullable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Nullable/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.Node/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.Node.Node

var getEffProp = function (name) {
  return function (node) {
    return function () {
      return node[name];
    };
  };
};

exports.nodeTypeIndex = function (node) {
  return node.nodeType;
};

exports.nodeName = function (node) {
  return node.nodeName;
};

exports.baseURI = getEffProp("baseURI");

exports.ownerDocument = getEffProp("ownerDocument");

exports.parentNode = getEffProp("parentNode");

exports.parentElement = getEffProp("parentElement");

exports.hasChildNodes = function (node) {
  return function () {
    return node.hasChildNodes();
  };
};

exports.childNodes = getEffProp("childNodes");

exports.firstChild = getEffProp("firstChild");

exports.lastChild = getEffProp("lastChild");

exports.previousSibling = getEffProp("previousSibling");

exports.nextSibling = getEffProp("nextSibling");

exports.nodeValue = getEffProp("nodeValue");

exports.setNodeValue = function (value) {
  return function (node) {
    return function () {
      node.nodeValue = value;
      return {};
    };
  };
};

exports.textContent = getEffProp("textContent");

exports.setTextContent = function (value) {
  return function (node) {
    return function () {
      node.nodeValue = value;
      return {};
    };
  };
};

exports.normalize = function (node) {
  return function () {
    node.normalize();
    return {};
  };
};

exports.clone = function (node) {
  return function () {
    return node.clone(false);
  };
};

exports.deepClone = function (node) {
  return function () {
    return node.clone(false);
  };
};

exports.isEqualNode = function (node1) {
  return function (node2) {
    return function () {
      return node1.isEqualNode(node2);
    };
  };
};

exports.compareDocumentPositionBits = function (node1) {
  return function (node2) {
    return function () {
      return node1.compareDocumentPosition(node2);
    };
  };
};

exports.contains = function (node1) {
  return function (node2) {
    return function () {
      return node1.contains(node2);
    };
  };
};

exports.lookupPrefix = function (prefix) {
  return function (node) {
    return function () {
      return node.lookupPrefix(prefix);
    };
  };
};

exports.lookupNamespaceURI = function (ns) {
  return function (node) {
    return function () {
      return node.lookupNamespaceURI(ns);
    };
  };
};

exports.lookupNamespaceURI = function (ns) {
  return function (node) {
    return function () {
      return node.isDefaultNamespace(ns);
    };
  };
};

exports.insertBefore = function (node1) {
  return function (node2) {
    return function (parent) {
      return function () {
        return parent.insertBefore(node1, node2);
      };
    };
  };
};

exports.appendChild = function (node) {
  return function (parent) {
    return function () {
      return parent.appendChild(node);
    };
  };
};

exports.replaceChild = function (oldChild) {
  return function (newChild) {
    return function (parent) {
      return function () {
        return parent.replaceChild(oldChild, newChild);
      };
    };
  };
};

exports.removeChild = function (node) {
  return function (parent) {
    return function () {
      return parent.removeChild(node);
    };
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.Node/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Enum = require("Data.Enum");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Nullable = require("Data.Nullable");
var DOM = require("DOM");
var DOM_Node_NodeType = require("DOM.Node.NodeType");
var DOM_Node_Types = require("DOM.Node.Types");
var nodeType = Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Enum.toEnum(DOM_Node_NodeType.enumNodeType))($foreign.nodeTypeIndex));
module.exports = {
    nodeType: nodeType, 
    removeChild: $foreign.removeChild, 
    replaceChild: $foreign.replaceChild, 
    appendChild: $foreign.appendChild, 
    insertBefore: $foreign.insertBefore, 
    isDefaultNamespace: $foreign.isDefaultNamespace, 
    lookupNamespaceURI: $foreign.lookupNamespaceURI, 
    lookupPrefix: $foreign.lookupPrefix, 
    contains: $foreign.contains, 
    compareDocumentPositionBits: $foreign.compareDocumentPositionBits, 
    isEqualNode: $foreign.isEqualNode, 
    deepClone: $foreign.deepClone, 
    clone: $foreign.clone, 
    normalize: $foreign.normalize, 
    setTextContent: $foreign.setTextContent, 
    textContent: $foreign.textContent, 
    setNodeValue: $foreign.setNodeValue, 
    nodeValue: $foreign.nodeValue, 
    nextSibling: $foreign.nextSibling, 
    previousSibling: $foreign.previousSibling, 
    lastChild: $foreign.lastChild, 
    firstChild: $foreign.firstChild, 
    childNodes: $foreign.childNodes, 
    hasChildNodes: $foreign.hasChildNodes, 
    parentElement: $foreign.parentElement, 
    parentNode: $foreign.parentNode, 
    ownerDocument: $foreign.ownerDocument, 
    baseURI: $foreign.baseURI, 
    nodeName: $foreign.nodeName, 
    nodeTypeIndex: $foreign.nodeTypeIndex
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.Node/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","DOM.Node.NodeType":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.NodeType/index.js","DOM.Node.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.Types/index.js","Data.Enum":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Enum/index.js","Data.Maybe.Unsafe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe.Unsafe/index.js","Data.Nullable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Nullable/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.NodeType/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Enum = require("Data.Enum");
var Data_Maybe = require("Data.Maybe");
var ElementNode = (function () {
    function ElementNode() {

    };
    ElementNode.value = new ElementNode();
    return ElementNode;
})();
var AttributeNode = (function () {
    function AttributeNode() {

    };
    AttributeNode.value = new AttributeNode();
    return AttributeNode;
})();
var TextNode = (function () {
    function TextNode() {

    };
    TextNode.value = new TextNode();
    return TextNode;
})();
var CDATASectionNode = (function () {
    function CDATASectionNode() {

    };
    CDATASectionNode.value = new CDATASectionNode();
    return CDATASectionNode;
})();
var EntityReferenceNode = (function () {
    function EntityReferenceNode() {

    };
    EntityReferenceNode.value = new EntityReferenceNode();
    return EntityReferenceNode;
})();
var EntityNode = (function () {
    function EntityNode() {

    };
    EntityNode.value = new EntityNode();
    return EntityNode;
})();
var ProcessingInstructionNode = (function () {
    function ProcessingInstructionNode() {

    };
    ProcessingInstructionNode.value = new ProcessingInstructionNode();
    return ProcessingInstructionNode;
})();
var CommentNode = (function () {
    function CommentNode() {

    };
    CommentNode.value = new CommentNode();
    return CommentNode;
})();
var DocumentNode = (function () {
    function DocumentNode() {

    };
    DocumentNode.value = new DocumentNode();
    return DocumentNode;
})();
var DocumentTypeNode = (function () {
    function DocumentTypeNode() {

    };
    DocumentTypeNode.value = new DocumentTypeNode();
    return DocumentTypeNode;
})();
var DocumentFragmentNode = (function () {
    function DocumentFragmentNode() {

    };
    DocumentFragmentNode.value = new DocumentFragmentNode();
    return DocumentFragmentNode;
})();
var NotationNode = (function () {
    function NotationNode() {

    };
    NotationNode.value = new NotationNode();
    return NotationNode;
})();
var toEnumNodeType = function (_344) {
    if (_344 === 1) {
        return new Data_Maybe.Just(ElementNode.value);
    };
    if (_344 === 2) {
        return new Data_Maybe.Just(AttributeNode.value);
    };
    if (_344 === 3) {
        return new Data_Maybe.Just(TextNode.value);
    };
    if (_344 === 4) {
        return new Data_Maybe.Just(CDATASectionNode.value);
    };
    if (_344 === 5) {
        return new Data_Maybe.Just(EntityReferenceNode.value);
    };
    if (_344 === 6) {
        return new Data_Maybe.Just(EntityNode.value);
    };
    if (_344 === 7) {
        return new Data_Maybe.Just(ProcessingInstructionNode.value);
    };
    if (_344 === 8) {
        return new Data_Maybe.Just(CommentNode.value);
    };
    if (_344 === 9) {
        return new Data_Maybe.Just(DocumentNode.value);
    };
    if (_344 === 10) {
        return new Data_Maybe.Just(DocumentTypeNode.value);
    };
    if (_344 === 11) {
        return new Data_Maybe.Just(DocumentFragmentNode.value);
    };
    if (_344 === 12) {
        return new Data_Maybe.Just(NotationNode.value);
    };
    return Data_Maybe.Nothing.value;
};
var fromEnumNodeType = function (_345) {
    if (_345 instanceof ElementNode) {
        return 1;
    };
    if (_345 instanceof AttributeNode) {
        return 2;
    };
    if (_345 instanceof TextNode) {
        return 3;
    };
    if (_345 instanceof CDATASectionNode) {
        return 4;
    };
    if (_345 instanceof EntityReferenceNode) {
        return 5;
    };
    if (_345 instanceof EntityNode) {
        return 6;
    };
    if (_345 instanceof ProcessingInstructionNode) {
        return 7;
    };
    if (_345 instanceof CommentNode) {
        return 8;
    };
    if (_345 instanceof DocumentNode) {
        return 9;
    };
    if (_345 instanceof DocumentTypeNode) {
        return 10;
    };
    if (_345 instanceof DocumentFragmentNode) {
        return 11;
    };
    if (_345 instanceof NotationNode) {
        return 12;
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-dom/src/DOM/Node/NodeType.purs line 67, column 1 - line 68, column 1: " + [ _345.constructor.name ]);
};
var eqNodeType = new Prelude.Eq(function (_346) {
    return function (_347) {
        if (_346 instanceof ElementNode && _347 instanceof ElementNode) {
            return true;
        };
        if (_346 instanceof AttributeNode && _347 instanceof AttributeNode) {
            return true;
        };
        if (_346 instanceof TextNode && _347 instanceof TextNode) {
            return true;
        };
        if (_346 instanceof CDATASectionNode && _347 instanceof CDATASectionNode) {
            return true;
        };
        if (_346 instanceof EntityReferenceNode && _347 instanceof EntityReferenceNode) {
            return true;
        };
        if (_346 instanceof EntityNode && _347 instanceof EntityNode) {
            return true;
        };
        if (_346 instanceof ProcessingInstructionNode && _347 instanceof ProcessingInstructionNode) {
            return true;
        };
        if (_346 instanceof CommentNode && _347 instanceof CommentNode) {
            return true;
        };
        if (_346 instanceof DocumentNode && _347 instanceof DocumentNode) {
            return true;
        };
        if (_346 instanceof DocumentTypeNode && _347 instanceof DocumentTypeNode) {
            return true;
        };
        if (_346 instanceof DocumentFragmentNode && _347 instanceof DocumentFragmentNode) {
            return true;
        };
        if (_346 instanceof NotationNode && _347 instanceof NotationNode) {
            return true;
        };
        return false;
    };
});
var ordNodeType = new Prelude.Ord(function () {
    return eqNodeType;
}, function (x) {
    return function (y) {
        return Prelude.compare(Prelude.ordInt)(fromEnumNodeType(x))(fromEnumNodeType(y));
    };
});
var boundedNodeType = new Prelude.Bounded(ElementNode.value, NotationNode.value);
var boundedOrdNodeType = new Prelude.BoundedOrd(function () {
    return boundedNodeType;
}, function () {
    return ordNodeType;
});
var enumNodeType = new Data_Enum.Enum(function () {
    return boundedNodeType;
}, 4, fromEnumNodeType, Data_Enum.defaultPred(toEnumNodeType)(fromEnumNodeType), Data_Enum.defaultSucc(toEnumNodeType)(fromEnumNodeType), toEnumNodeType);
module.exports = {
    ElementNode: ElementNode, 
    AttributeNode: AttributeNode, 
    TextNode: TextNode, 
    CDATASectionNode: CDATASectionNode, 
    EntityReferenceNode: EntityReferenceNode, 
    EntityNode: EntityNode, 
    ProcessingInstructionNode: ProcessingInstructionNode, 
    CommentNode: CommentNode, 
    DocumentNode: DocumentNode, 
    DocumentTypeNode: DocumentTypeNode, 
    DocumentFragmentNode: DocumentFragmentNode, 
    NotationNode: NotationNode, 
    eqNodeType: eqNodeType, 
    ordNodeType: ordNodeType, 
    boundedNodeType: boundedNodeType, 
    boundedOrdNodeType: boundedOrdNodeType, 
    enumNodeType: enumNodeType
};

},{"Data.Enum":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Enum/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Unsafe_Coerce = require("Unsafe.Coerce");
var Prelude = require("Prelude");
var DOM_Event_Types = require("DOM.Event.Types");
var ElementId = function (x) {
    return x;
};
var textToNode = Unsafe_Coerce.unsafeCoerce;
var processingInstructionToNode = Unsafe_Coerce.unsafeCoerce;
var elementToParentNode = Unsafe_Coerce.unsafeCoerce;
var elementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var elementToNode = Unsafe_Coerce.unsafeCoerce;
var elementToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentTypeToNode = Unsafe_Coerce.unsafeCoerce;
var documentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNode = Unsafe_Coerce.unsafeCoerce;
var documentToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNode = Unsafe_Coerce.unsafeCoerce;
var commentToNode = Unsafe_Coerce.unsafeCoerce;
var characterDataToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    ElementId: ElementId, 
    documentTypeToNode: documentTypeToNode, 
    documentFragmentToNode: documentFragmentToNode, 
    documentFragmentToParentNode: documentFragmentToParentNode, 
    documentFragmentToNonElementParentNode: documentFragmentToNonElementParentNode, 
    processingInstructionToNode: processingInstructionToNode, 
    commentToNode: commentToNode, 
    textToNode: textToNode, 
    characterDataToNonDocumentTypeChildNode: characterDataToNonDocumentTypeChildNode, 
    elementToEventTarget: elementToEventTarget, 
    elementToNode: elementToNode, 
    elementToNonDocumentTypeChildNode: elementToNonDocumentTypeChildNode, 
    elementToParentNode: elementToParentNode, 
    documentToEventTarget: documentToEventTarget, 
    documentToNode: documentToNode, 
    documentToParentNode: documentToParentNode, 
    documentToNonElementParentNode: documentToNonElementParentNode
};

},{"DOM.Event.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.Types/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js","Unsafe.Coerce":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Unsafe.Coerce/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.XHR.Types/index.js":[function(require,module,exports){
arguments[4]["/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.File.Types/index.js"][0].apply(exports,arguments)
},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js":[function(require,module,exports){
arguments[4]["/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.XHR.Types/index.js"][0].apply(exports,arguments)
},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Either = require("Data.Either");
var Data_Tuple = require("Data.Tuple");
var $tilde$greater = function (__dict_EncodeJson_0) {
    return function (_525) {
        return function (a) {
            return Data_Argonaut_Core.foldJsonObject(Data_Argonaut_Core.jsonSingletonObject(_525.value0)(_525.value1))(Prelude[">>>"](Prelude.semigroupoidFn)(Data_StrMap.insert(_525.value0)(_525.value1))(Data_Argonaut_Core.fromObject))(Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_0)(a));
        };
    };
};
var $qmark$greater$greater$eq = function (_526) {
    return function (str) {
        if (_526 instanceof Data_Maybe.Just) {
            return new Data_Either.Right(_526.value0);
        };
        return Data_Either.Left.create("Couldn't decode " + str);
    };
};
var $colon$eq = function (__dict_EncodeJson_1) {
    return function (k) {
        return function (v) {
            return Data_Tuple.Tuple.create(k)(Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_1)(v));
        };
    };
};
var $dot$qmark = function (__dict_DecodeJson_2) {
    return function (o) {
        return function (s) {
            return Data_Maybe.maybe(Data_Either.Left.create("Expected field " + Prelude.show(Prelude.showString)(s)))(Data_Argonaut_Decode.decodeJson(__dict_DecodeJson_2))(Data_StrMap.lookup(s)(o));
        };
    };
};
module.exports = {
    ".?": $dot$qmark, 
    "?>>=": $qmark$greater$greater$eq, 
    "~>": $tilde$greater, 
    ":=": $colon$eq
};

},{"Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/foreign.js":[function(require,module,exports){
// module Data.Argonaut.Core

function id(x) {
    return x;
}
    

exports.fromNull = function() {
    return null;
};

exports.fromBoolean = id;
exports.fromNumber = id;
exports.fromString = id;
exports.fromArray = id;
exports.fromObject = id;

exports.jsonNull = null;

exports._stringify = function(j) {
    return JSON.stringify(j);
};

exports._foldJson = function(isNull, isBool, isNum, isStr, isArr, isObj, j) {
    if (j == null) return isNull(null);
    else if (typeof j === 'boolean') return isBool(j);
    else if (typeof j === 'number') return isNum(j);
    else if (typeof j === 'string') return isStr(j);
    else if (Object.prototype.toString.call(j) === '[object Array]')
        return isArr(j);
    else return isObj(j);
};

function _compare(EQ, GT, LT, a, b) {
    function isArray(a) {
        return Object.prototype.toString.call(a) === '[object Array]';
    }
    function keys(o) {
        var a = [];
        for (var k in o) {
            a.push(k);
        }
        return a;
    }

    if (a == null) {
        if (b == null) return EQ;
        else return LT;
    } else if (typeof a === 'boolean') {
        if (typeof b === 'boolean') {
            // boolean / boolean
            if (a === b) return EQ;
            else if (a == false) return LT;
            else return GT;
        } else if (b == null) return GT;
        else return LT;
    } else if (typeof a === 'number') {
        if (typeof b === 'number') {
            if (a === b) return EQ;
            else if (a < b) return LT;
            else return GT;
        } else if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else return LT;
    } else if (typeof a === 'string') {
        if (typeof b === 'string') {
            if (a === b) return EQ;
            else if (a < b) return LT;
            else return GT;
        } else if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else if (typeof b === 'number') return GT;
        else return LT;
    } else if (isArray(a)) {
        if (isArray(b)) {
            for (var i = 0; i < Math.min(a.length, b.length); i++) {
                var c = _compare(EQ, GT, LT, a[i], b[i]);
                
                if (c !== EQ) return c;
            }
            if (a.length === b.length) return EQ;
            else if (a.length < b.length) return LT;
            else return GT;
        } else if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else if (typeof b === 'number') return GT;
        else if (typeof b === 'string') return GT;
        else return LT;
    }
    else {
        if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else if (typeof b === 'number') return GT;
        else if (typeof b === 'string') return GT;
        else if (isArray(b)) return GT;
        else {
            var akeys = keys(a);
            var bkeys = keys(b);
            
            var keys = akeys.concat(bkeys).sort();
            
            for (var i = 0; i < keys.length; i++) {
                var k = keys[i];
                
                if (a[k] === undefined) return LT;
                else if (b[k] === undefined) return GT;
                
                var c = _compare(EQ, GT, LT, a[k], b[k]);
                
                if (c !== EQ) return c;
            }
            
            if (akeys.length === bkeys.length) return EQ;
            else if (akeys.length < bkeys.length) return LT;
            else return GT;
        }
    }
};

exports._compare = _compare;

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var Data_StrMap = require("Data.StrMap");
var Data_Tuple = require("Data.Tuple");
var Data_Maybe = require("Data.Maybe");
var verbJsonType = function (def) {
    return function (f) {
        return function (fold) {
            return fold(def)(f);
        };
    };
};
var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var showJson = new Prelude.Show($foreign._stringify);
var showJNull = new Prelude.Show(function (_519) {
    return "null";
});
var jsonZero = $foreign.fromNumber(0.0);
var jsonTrue = $foreign.fromBoolean(true);
var jsonSingletonObject = function (key) {
    return function (val) {
        return $foreign.fromObject(Data_StrMap.singleton(key)(val));
    };
};
var jsonSingletonArray = function (j) {
    return $foreign.fromArray([ j ]);
};
var jsonFalse = $foreign.fromBoolean(false);
var jsonEmptyString = $foreign.fromString("");
var jsonEmptyObject = $foreign.fromObject(Data_StrMap.empty);
var jsonEmptyArray = $foreign.fromArray([  ]);
var isJsonType = verbJsonType(false)(Prelude["const"](true));
var foldJsonString = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), j);
        };
    };
};
var isString = isJsonType(foldJsonString);
var toString = toJsonType(foldJsonString);
var foldJsonObject = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, j);
        };
    };
};
var isObject = isJsonType(foldJsonObject);
var toObject = toJsonType(foldJsonObject);
var foldJsonNumber = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
        };
    };
};
var isNumber = isJsonType(foldJsonNumber);
var toNumber = toJsonType(foldJsonNumber);
var foldJsonNull = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
        };
    };
};
var isNull = isJsonType(foldJsonNull);
var toNull = toJsonType(foldJsonNull);
var foldJsonBoolean = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
        };
    };
};
var isBoolean = isJsonType(foldJsonBoolean);
var toBoolean = toJsonType(foldJsonBoolean);
var foldJsonArray = function (d) {
    return function (f) {
        return function (j) {
            return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), j);
        };
    };
};
var isArray = isJsonType(foldJsonArray);
var toArray = toJsonType(foldJsonArray);
var foldJson = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (json) {
                            return $foreign._foldJson(a, b, c, d, e, f, json);
                        };
                    };
                };
            };
        };
    };
};
var ordJson = new Prelude.Ord(function () {
    return eqJson;
}, function (a) {
    return function (b) {
        return $foreign._compare(Prelude.EQ.value, Prelude.GT.value, Prelude.LT.value, a, b);
    };
});
var eqJson = new Prelude.Eq(function (j1) {
    return function (j2) {
        return Prelude["=="](Prelude.eqOrdering)(Prelude.compare(ordJson)(j1)(j2))(Prelude.EQ.value);
    };
});
var eqJNull = new Prelude.Eq(function (_515) {
    return function (_516) {
        return true;
    };
});
var ordJNull = new Prelude.Ord(function () {
    return eqJNull;
}, function (_517) {
    return function (_518) {
        return Prelude.EQ.value;
    };
});
module.exports = {
    jsonSingletonObject: jsonSingletonObject, 
    jsonEmptyObject: jsonEmptyObject, 
    jsonSingletonArray: jsonSingletonArray, 
    jsonEmptyArray: jsonEmptyArray, 
    jsonZero: jsonZero, 
    jsonTrue: jsonTrue, 
    jsonFalse: jsonFalse, 
    toObject: toObject, 
    toArray: toArray, 
    toString: toString, 
    toNumber: toNumber, 
    toBoolean: toBoolean, 
    toNull: toNull, 
    isObject: isObject, 
    isArray: isArray, 
    isString: isString, 
    isNumber: isNumber, 
    isBoolean: isBoolean, 
    isNull: isNull, 
    foldJsonObject: foldJsonObject, 
    foldJsonArray: foldJsonArray, 
    foldJsonString: foldJsonString, 
    foldJsonNumber: foldJsonNumber, 
    foldJsonBoolean: foldJsonBoolean, 
    foldJsonNull: foldJsonNull, 
    foldJson: foldJson, 
    eqJNull: eqJNull, 
    ordJNull: ordJNull, 
    showJNull: showJNull, 
    eqJson: eqJson, 
    ordJson: ordJson, 
    showJson: showJson, 
    jsonNull: $foreign.jsonNull, 
    fromObject: $foreign.fromObject, 
    fromArray: $foreign.fromArray, 
    fromString: $foreign.fromString, 
    fromNumber: $foreign.fromNumber, 
    fromBoolean: $foreign.fromBoolean, 
    fromNull: $foreign.fromNull
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/foreign.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Control_Alt = require("Control.Alt");
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Maybe = require("Data.Maybe");
var Data_Int = require("Data.Int");
var Data_String = require("Data.String");
var Data_Traversable = require("Data.Traversable");
var Data_List = require("Data.List");
var Data_Map = require("Data.Map");
var Data_Either = require("Data.Either");
var Data_Tuple = require("Data.Tuple");
var Data_StrMap = require("Data.StrMap");
var Data_Foldable = require("Data.Foldable");
var DecodeJson = function (decodeJson) {
    this.decodeJson = decodeJson;
};
var decodeJsonString = new DecodeJson(Data_Argonaut_Core.foldJsonString(new Data_Either.Left("Not a String."))(Data_Either.Right.create));
var decodeJsonNumber = new DecodeJson(Data_Argonaut_Core.foldJsonNumber(new Data_Either.Left("Not a Number."))(Data_Either.Right.create));
var decodeJsonNull = new DecodeJson(Data_Argonaut_Core.foldJsonNull(new Data_Either.Left("Not null."))(Prelude["const"](new Data_Either.Right(Prelude.unit))));
var decodeJsonJson = new DecodeJson(Data_Either.Right.create);
var decodeJsonInt = new DecodeJson(function (num) {
    var go = function (num_1) {
        return Data_Maybe.maybe(new Data_Either.Left("Not an Int"))(Data_Either.Right.create)(Data_Int.fromNumber(num_1));
    };
    return Data_Argonaut_Core.foldJsonNumber(new Data_Either.Left("Not a Number."))(go)(num);
});
var decodeJsonBoolean = new DecodeJson(Data_Argonaut_Core.foldJsonBoolean(new Data_Either.Left("Not a Boolean."))(Data_Either.Right.create));
var decodeJson = function (dict) {
    return dict.decodeJson;
};
var decodeJsonChar = new DecodeJson(function (j) {
    var go = function (_521) {
        if (_521 instanceof Data_Maybe.Nothing) {
            return Data_Either.Left.create("Expected character but found: " + Prelude.show(Data_Argonaut_Core.showJson)(j));
        };
        if (_521 instanceof Data_Maybe.Just) {
            return new Data_Either.Right(_521.value0);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-argonaut-codecs/src/Data/Argonaut/Decode.purs line 71, column 5 - line 72, column 5: " + [ _521.constructor.name ]);
    };
    return Prelude[">>="](Data_Either.bindEither)(Prelude["<$>"](Data_Either.functorEither)(Data_String.charAt(0))(decodeJson(decodeJsonString)(j)))(go);
});
var decodeJsonEither = function (__dict_DecodeJson_0) {
    return function (__dict_DecodeJson_1) {
        return new DecodeJson(function (j) {
            return Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(Data_Either.Left.create)(decodeJson(__dict_DecodeJson_0)(j)))(Prelude["<$>"](Data_Either.functorEither)(Data_Either.Right.create)(decodeJson(__dict_DecodeJson_1)(j)));
        });
    };
};
var decodeJsonMaybe = function (__dict_DecodeJson_2) {
    return new DecodeJson(function (j) {
        return Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(Data_Maybe.Just.create)(decodeJson(__dict_DecodeJson_2)(j)))(Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value));
    });
};
var decodeMaybe = function (__dict_DecodeJson_8) {
    return function (json) {
        return Data_Either.either(Prelude["const"](Data_Maybe.Nothing.value))(Prelude.pure(Data_Maybe.applicativeMaybe))(decodeJson(__dict_DecodeJson_8)(json));
    };
};
var decodeList = function (__dict_DecodeJson_9) {
    return new DecodeJson(function (json) {
        return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode."))(Data_Either.Right.create)(Prelude.bind(Data_Maybe.bindMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_List.toList(Data_Foldable.foldableArray))(Data_Argonaut_Core.toArray(json)))(function (_90) {
            return Data_Traversable.traverse(Data_List.traversableList)(Data_Maybe.applicativeMaybe)(decodeMaybe(__dict_DecodeJson_9))(_90);
        }));
    });
};
var decodeJsonTuple = function (__dict_DecodeJson_3) {
    return function (__dict_DecodeJson_4) {
        return new DecodeJson(function (j) {
            var f = function (_520) {
                if (_520 instanceof Data_List.Cons && (_520.value1 instanceof Data_List.Cons && _520.value1.value1 instanceof Data_List.Nil)) {
                    return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(Data_Tuple.Tuple.create)(decodeJson(__dict_DecodeJson_3)(_520.value0)))(decodeJson(__dict_DecodeJson_4)(_520.value1.value0));
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-argonaut-codecs/src/Data/Argonaut/Decode.purs line 45, column 5 - line 47, column 1: " + [ _520.constructor.name ]);
            };
            return Prelude[">>="](Data_Either.bindEither)(decodeJson(decodeList(decodeJsonJson))(j))(f);
        });
    };
};
var decodeMap = function (__dict_Ord_5) {
    return function (__dict_DecodeJson_6) {
        return function (__dict_DecodeJson_7) {
            return new DecodeJson(function (j) {
                return Prelude["<$>"](Data_Either.functorEither)(Data_Map.fromList(__dict_Ord_5))(decodeJson(decodeList(decodeJsonTuple(__dict_DecodeJson_6)(__dict_DecodeJson_7)))(j));
            });
        };
    };
};
var decodeStrMap = function (__dict_DecodeJson_10) {
    return new DecodeJson(function (json) {
        return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode."))(Data_Either.Right.create)(Prelude.bind(Data_Maybe.bindMaybe)(Data_Argonaut_Core.toObject(json))(function (_88) {
            return Data_Traversable.traverse(Data_StrMap.traversableStrMap)(Data_Maybe.applicativeMaybe)(decodeMaybe(__dict_DecodeJson_10))(_88);
        }));
    });
};
var decodeArray = function (__dict_DecodeJson_11) {
    return new DecodeJson(function (json) {
        return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode."))(Data_Either.Right.create)(Prelude.bind(Data_Maybe.bindMaybe)(Data_Argonaut_Core.toArray(json))(function (_89) {
            return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(decodeMaybe(__dict_DecodeJson_11))(_89);
        }));
    });
};
module.exports = {
    DecodeJson: DecodeJson, 
    decodeMaybe: decodeMaybe, 
    decodeJson: decodeJson, 
    decodeJsonMaybe: decodeJsonMaybe, 
    decodeJsonTuple: decodeJsonTuple, 
    decodeJsonEither: decodeJsonEither, 
    decodeJsonNull: decodeJsonNull, 
    decodeJsonBoolean: decodeJsonBoolean, 
    decodeJsonNumber: decodeJsonNumber, 
    decodeJsonInt: decodeJsonInt, 
    decodeJsonString: decodeJsonString, 
    decodeJsonJson: decodeJsonJson, 
    decodeJsonChar: decodeJsonChar, 
    decodeStrMap: decodeStrMap, 
    decodeArray: decodeArray, 
    decodeList: decodeList, 
    decodeMap: decodeMap
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Int":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Map":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Map/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.String":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Prelude = require("Prelude");
var Data_Int = require("Data.Int");
var Data_String = require("Data.String");
var Data_List = require("Data.List");
var Data_Map = require("Data.Map");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Data_Unfoldable = require("Data.Unfoldable");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var Data_StrMap = require("Data.StrMap");
var EncodeJson = function (encodeJson) {
    this.encodeJson = encodeJson;
};
var encodeJsonUnit = new EncodeJson(Prelude["const"](Data_Argonaut_Core.jsonNull));
var encodeJsonJson = new EncodeJson(Prelude.id(Prelude.categoryFn));
var encodeJsonJString = new EncodeJson(Data_Argonaut_Core.fromString);
var encodeJsonJNumber = new EncodeJson(Data_Argonaut_Core.fromNumber);
var encodeJsonJBoolean = new EncodeJson(Data_Argonaut_Core.fromBoolean);
var encodeJsonInt = new EncodeJson(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Argonaut_Core.fromNumber)(Data_Int.toNumber));
var encodeJson = function (dict) {
    return dict.encodeJson;
};
var encodeJsonArray = function (__dict_EncodeJson_0) {
    return new EncodeJson(function (json) {
        return Data_Argonaut_Core.fromArray(Prelude["<$>"](Prelude.functorArray)(encodeJson(__dict_EncodeJson_0))(json));
    });
};
var encodeJsonChar = new EncodeJson(Prelude["<<<"](Prelude.semigroupoidFn)(encodeJson(encodeJsonJString))(Data_String.fromChar));
var encodeJsonEither = function (__dict_EncodeJson_1) {
    return function (__dict_EncodeJson_2) {
        return new EncodeJson(function (_524) {
            if (_524 instanceof Data_Either.Left) {
                return encodeJson(__dict_EncodeJson_1)(_524.value0);
            };
            if (_524 instanceof Data_Either.Right) {
                return encodeJson(__dict_EncodeJson_2)(_524.value0);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-argonaut-codecs/src/Data/Argonaut/Encode.purs line 44, column 1 - line 48, column 1: " + [ _524.constructor.name ]);
        });
    };
};
var encodeJsonList = function (__dict_EncodeJson_3) {
    return new EncodeJson(function (json) {
        var arr = Data_List.fromList(Data_Unfoldable.unfoldableArray)(json);
        return Data_Argonaut_Core.fromArray(Prelude["<$>"](Prelude.functorArray)(encodeJson(__dict_EncodeJson_3))(arr));
    });
};
var encodeJsonMaybe = function (__dict_EncodeJson_4) {
    return new EncodeJson(function (_522) {
        if (_522 instanceof Data_Maybe.Nothing) {
            return Data_Argonaut_Core.jsonNull;
        };
        if (_522 instanceof Data_Maybe.Just) {
            return encodeJson(__dict_EncodeJson_4)(_522.value0);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-argonaut-codecs/src/Data/Argonaut/Encode.purs line 37, column 1 - line 41, column 1: " + [ _522.constructor.name ]);
    });
};
var encodeJsonTuple = function (__dict_EncodeJson_5) {
    return function (__dict_EncodeJson_6) {
        return new EncodeJson(function (_523) {
            return encodeJson(encodeJsonArray(encodeJsonJson))([ encodeJson(__dict_EncodeJson_5)(_523.value0), encodeJson(__dict_EncodeJson_6)(_523.value1) ]);
        });
    };
};
var encodeMap = function (__dict_Ord_7) {
    return function (__dict_EncodeJson_8) {
        return function (__dict_EncodeJson_9) {
            return new EncodeJson(Prelude["<<<"](Prelude.semigroupoidFn)(encodeJson(encodeJsonList(encodeJsonTuple(__dict_EncodeJson_8)(__dict_EncodeJson_9))))(Data_Map.toList));
        };
    };
};
var encodeStrMap = function (__dict_EncodeJson_10) {
    return new EncodeJson(function (m) {
        return Data_Argonaut_Core.fromObject(Prelude["<$>"](Data_StrMap.functorStrMap)(encodeJson(__dict_EncodeJson_10))(m));
    });
};
module.exports = {
    EncodeJson: EncodeJson, 
    encodeJson: encodeJson, 
    encodeJsonMaybe: encodeJsonMaybe, 
    encodeJsonTuple: encodeJsonTuple, 
    encodeJsonEither: encodeJsonEither, 
    encodeJsonUnit: encodeJsonUnit, 
    encodeJsonJBoolean: encodeJsonJBoolean, 
    encodeJsonJNumber: encodeJsonJNumber, 
    encodeJsonInt: encodeJsonInt, 
    encodeJsonJString: encodeJsonJString, 
    encodeJsonJson: encodeJsonJson, 
    encodeJsonChar: encodeJsonChar, 
    encodeJsonArray: encodeJsonArray, 
    encodeJsonList: encodeJsonList, 
    encodeStrMap: encodeStrMap, 
    encodeMap: encodeMap
};

},{"Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Int":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Map":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Map/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.String":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Data.Unfoldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Unfoldable/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array.ST/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Array.ST

exports.runSTArray = function (f) {
  return f;
};

exports.emptySTArray = function () {
  return [];
};

exports.peekSTArrayImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.pokeSTArray = function (xs) {
  return function (i) {
    return function (a) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.pushAllSTArray = function (xs) {
  return function (as) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.spliceSTArray = function (xs) {
  return function (i) {
    return function (howMany) {
      return function (bs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.copyImpl = function (xs) {
  return function () {
    return xs.slice();
  };
};

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);
    for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };
    return as;
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array.ST/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_Maybe = require("Data.Maybe");
var thaw = $foreign.copyImpl;
var pushSTArray = function (arr) {
    return function (a) {
        return $foreign.pushAllSTArray(arr)([ a ]);
    };
};
var peekSTArray = $foreign.peekSTArrayImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var freeze = $foreign.copyImpl;
module.exports = {
    thaw: thaw, 
    freeze: freeze, 
    pushSTArray: pushSTArray, 
    peekSTArray: peekSTArray, 
    toAssocArray: $foreign.toAssocArray, 
    spliceSTArray: $foreign.spliceSTArray, 
    pushAllSTArray: $foreign.pushAllSTArray, 
    pokeSTArray: $foreign.pokeSTArray, 
    emptySTArray: $foreign.emptySTArray, 
    runSTArray: $foreign.runSTArray
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array.ST/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Control.Monad.ST":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.ST/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Array

//------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------

exports.range = function (start) {
  return function (end) {
    var step = start > end ? -1 : 1;
    var result = [];
    for (var i = start, n = 0; i !== end; i += step) {
      result[n++] = i;
    }
    result[n] = i;
    return result;
  };
};

exports.replicate = function (n) {
  return function (v) {
    if (n < 1) return [];
    var r = new Array(n);
    for (var i = 0; i < n; i++) r[i] = v;
    return r;
  };
};

//------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.length = function (xs) {
  return xs.length;
};

//------------------------------------------------------------------------------
// Extending arrays ------------------------------------------------------------
//------------------------------------------------------------------------------

exports.cons = function (e) {
  return function (l) {
    return [e].concat(l);
  };
};

exports.snoc = function (l) {
  return function (e) {
    var l1 = l.slice();
    l1.push(e);
    return l1;
  };
};

//------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------

exports["uncons'"] = function (empty) {
  return function (next) {
    return function (xs) {
      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
    };
  };
};

//------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------

exports.indexImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
      };
    };
  };
};

exports.findIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports.findLastIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = xs.length - 1; i >= 0; i--) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports._insertAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i > l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 0, a);
          return just(l1);
        };
      };
    };
  };
};

exports._deleteAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (l) {
        if (i < 0 || i >= l.length) return nothing;
        var l1 = l.slice();
        l1.splice(i, 1);
        return just(l1);
      };
    };
  };
};

exports._updateAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
};

//------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------

exports.reverse = function (l) {
  return l.slice().reverse();
};

exports.concat = function (xss) {
  var result = [];
  for (var i = 0, l = xss.length; i < l; i++) {
    var xs = xss[i];
    for (var j = 0, m = xs.length; j < m; j++) {
      result.push(xs[j]);
    }
  }
  return result;
};

exports.filter = function (f) {
  return function (xs) {
    return xs.filter(f);
  };
};

//------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.sortImpl = function (f) {
  return function (l) {
    /* jshint maxparams: 2 */
    return l.slice().sort(function (x, y) {
      return f(x)(y);
    });
  };
};

//------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.slice = function (s) {
  return function (e) {
    return function (l) {
      return l.slice(s, e);
    };
  };
};

exports.drop = function (n) {
  return function (l) {
    return n < 1 ? l : l.slice(n);
  };
};

//------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.zipWith = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }
      return result;
    };
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Traversable = require("Data.Traversable");
var Control_Lazy = require("Control.Lazy");
var Control_Alt = require("Control.Alt");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Foldable = require("Data.Foldable");
var Control_Alternative = require("Control.Alternative");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Data_Tuple = require("Data.Tuple");
var $colon = $foreign.cons;
var $dot$dot = $foreign.range;
var zipWithA = function (__dict_Applicative_0) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(__dict_Applicative_0)($foreign.zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unzip = $foreign["uncons'"](function (_696) {
    return new Data_Tuple.Tuple([  ], [  ]);
})(function (_697) {
    return function (ts) {
        var _1288 = unzip(ts);
        return new Data_Tuple.Tuple($colon(_697.value0)(_1288.value0), $colon(_697.value1)(_1288.value1));
    };
});
var uncons = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (xs) {
        return new Data_Maybe.Just({
            head: x, 
            tail: xs
        });
    };
});
var take = $foreign.slice(0);
var tail = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (_694) {
    return function (xs) {
        return new Data_Maybe.Just(xs);
    };
});
var span = function (p) {
    var go = function (__copy_acc) {
        return function (__copy_xs) {
            var acc = __copy_acc;
            var xs = __copy_xs;
            tco: while (true) {
                var _1294 = uncons(xs);
                if (_1294 instanceof Data_Maybe.Just && p(_1294.value0.head)) {
                    var __tco_acc = $colon(_1294.value0.head)(acc);
                    acc = __tco_acc;
                    xs = _1294.value0.tail;
                    continue tco;
                };
                return {
                    init: $foreign.reverse(acc), 
                    rest: xs
                };
            };
        };
    };
    return go([  ]);
};
var takeWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).init;
    };
};
var sortBy = function (comp) {
    return function (xs) {
        var comp$prime = function (x) {
            return function (y) {
                var _1298 = comp(x)(y);
                if (_1298 instanceof Prelude.GT) {
                    return 1;
                };
                if (_1298 instanceof Prelude.EQ) {
                    return 0;
                };
                if (_1298 instanceof Prelude.LT) {
                    return Prelude.negate(Prelude.ringInt)(1);
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-arrays/src/Data/Array.purs line 390, column 3 - line 395, column 1: " + [ _1298.constructor.name ]);
            };
        };
        return $foreign.sortImpl(comp$prime)(xs);
    };
};
var sort = function (__dict_Ord_1) {
    return function (xs) {
        return sortBy(Prelude.compare(__dict_Ord_1))(xs);
    };
};
var singleton = function (a) {
    return [ a ];
};
var replicateM = function (__dict_Monad_2) {
    return function (n) {
        return function (m) {
            if (Prelude["<"](Prelude.ordInt)(n)(1)) {
                return Prelude["return"](__dict_Monad_2["__superclass_Prelude.Applicative_0"]())([  ]);
            };
            if (Prelude.otherwise) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(__dict_Monad_2["__superclass_Prelude.Applicative_0"]())($foreign.replicate(n)(m));
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-arrays/src/Data/Array.purs line 117, column 1 - line 118, column 1: " + [ n.constructor.name, m.constructor.name ]);
        };
    };
};
var $$null = function (xs) {
    return Prelude["=="](Prelude.eqInt)($foreign.length(xs))(0);
};
var nubBy = function (eq) {
    return function (xs) {
        var _1301 = uncons(xs);
        if (_1301 instanceof Data_Maybe.Just) {
            return $colon(_1301.value0.head)(nubBy(eq)($foreign.filter(function (y) {
                return Prelude.not(Prelude.booleanAlgebraBoolean)(eq(_1301.value0.head)(y));
            })(_1301.value0.tail)));
        };
        if (_1301 instanceof Data_Maybe.Nothing) {
            return [  ];
        };
        throw new Error("Failed pattern match: " + [ _1301.constructor.name ]);
    };
};
var nub = function (__dict_Eq_3) {
    return nubBy(Prelude.eq(__dict_Eq_3));
};
var some = function (__dict_Alternative_4) {
    return function (__dict_Lazy_5) {
        return function (v) {
            return Prelude["<*>"]((__dict_Alternative_4["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_4["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())($colon)(v))(Control_Lazy.defer(__dict_Lazy_5)(function (_692) {
                return many(__dict_Alternative_4)(__dict_Lazy_5)(v);
            }));
        };
    };
};
var many = function (__dict_Alternative_6) {
    return function (__dict_Lazy_7) {
        return function (v) {
            return Control_Alt["<|>"]((__dict_Alternative_6["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_6)(__dict_Lazy_7)(v))(Prelude.pure(__dict_Alternative_6["__superclass_Prelude.Applicative_0"]())([  ]));
        };
    };
};
var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var init = function (xs) {
    if ($$null(xs)) {
        return Data_Maybe.Nothing.value;
    };
    if (Prelude.otherwise) {
        return new Data_Maybe.Just($foreign.slice(Prelude.zero(Prelude.semiringInt))(Prelude["-"](Prelude.ringInt)($foreign.length(xs))(Prelude.one(Prelude.semiringInt)))(xs));
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-arrays/src/Data/Array.purs line 207, column 1 - line 208, column 1: " + [ xs.constructor.name ]);
};
var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var $bang$bang = index;
var last = function (xs) {
    return $bang$bang(xs)(Prelude["-"](Prelude.ringInt)($foreign.length(xs))(1));
};
var modifyAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                return updateAt(i)(f(x))(xs);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)($bang$bang(xs)(i));
        };
    };
};
var head = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (_693) {
        return new Data_Maybe.Just(x);
    };
});
var groupBy = function (op) {
    var go = function (__copy_acc) {
        return function (__copy_xs) {
            var acc = __copy_acc;
            var xs = __copy_xs;
            tco: while (true) {
                var _1306 = uncons(xs);
                if (_1306 instanceof Data_Maybe.Just) {
                    var sp = span(op(_1306.value0.head))(_1306.value0.tail);
                    var __tco_acc = $colon($colon(_1306.value0.head)(sp.init))(acc);
                    acc = __tco_acc;
                    xs = sp.rest;
                    continue tco;
                };
                if (_1306 instanceof Data_Maybe.Nothing) {
                    return $foreign.reverse(acc);
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-arrays/src/Data/Array.purs line 457, column 1 - line 458, column 1: " + [ _1306.constructor.name ]);
            };
        };
    };
    return go([  ]);
};
var group = function (__dict_Eq_8) {
    return function (xs) {
        return groupBy(Prelude.eq(__dict_Eq_8))(xs);
    };
};
var group$prime = function (__dict_Ord_9) {
    return Prelude["<<<"](Prelude.semigroupoidFn)(group(__dict_Ord_9["__superclass_Prelude.Eq_0"]()))(sort(__dict_Ord_9));
};
var foldM = function (__dict_Monad_10) {
    return function (f) {
        return function (a) {
            return $foreign["uncons'"](function (_698) {
                return Prelude["return"](__dict_Monad_10["__superclass_Prelude.Applicative_0"]())(a);
            })(function (b) {
                return function (bs) {
                    return Prelude[">>="](__dict_Monad_10["__superclass_Prelude.Bind_1"]())(f(a)(b))(function (a$prime) {
                        return foldM(__dict_Monad_10)(f)(a$prime)(bs);
                    });
                };
            });
        };
    };
};
var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var insertBy = function (cmp) {
    return function (x) {
        return function (ys) {
            var i = Data_Maybe.maybe(0)(function (_11) {
                return Prelude["+"](Prelude.semiringInt)(_11)(1);
            })(findLastIndex(function (y) {
                return Prelude["=="](Prelude.eqOrdering)(cmp(x)(y))(Prelude.GT.value);
            })(ys));
            return Data_Maybe_Unsafe.fromJust(insertAt(i)(x)(ys));
        };
    };
};
var insert = function (__dict_Ord_11) {
    return insertBy(Prelude.compare(__dict_Ord_11));
};
var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var intersectBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return $foreign.filter(function (x) {
                return Data_Maybe.isJust(findIndex(eq(x))(ys));
            })(xs);
        };
    };
};
var intersect = function (__dict_Eq_12) {
    return intersectBy(Prelude.eq(__dict_Eq_12));
};
var filterM = function (__dict_Monad_13) {
    return function (p) {
        return $foreign["uncons'"](function (_695) {
            return Prelude.pure(__dict_Monad_13["__superclass_Prelude.Applicative_0"]())([  ]);
        })(function (x) {
            return function (xs) {
                return Prelude.bind(__dict_Monad_13["__superclass_Prelude.Bind_1"]())(p(x))(function (_80) {
                    return Prelude.bind(__dict_Monad_13["__superclass_Prelude.Bind_1"]())(filterM(__dict_Monad_13)(p)(xs))(function (_79) {
                        return Prelude["return"](__dict_Monad_13["__superclass_Prelude.Applicative_0"]())((function () {
                            if (_80) {
                                return $colon(x)(_79);
                            };
                            if (!_80) {
                                return _79;
                            };
                            throw new Error("Failed pattern match: " + [ _80.constructor.name ]);
                        })());
                    });
                });
            };
        });
    };
};
var elemLastIndex = function (__dict_Eq_14) {
    return function (x) {
        return findLastIndex(function (_13) {
            return Prelude["=="](__dict_Eq_14)(_13)(x);
        });
    };
};
var elemIndex = function (__dict_Eq_15) {
    return function (x) {
        return findIndex(function (_12) {
            return Prelude["=="](__dict_Eq_15)(_12)(x);
        });
    };
};
var dropWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).rest;
    };
};
var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var deleteBy = function (eq) {
    return function (x) {
        return function (_699) {
            if (_699.length === 0) {
                return [  ];
            };
            return Data_Maybe.maybe(_699)(function (i) {
                return Data_Maybe_Unsafe.fromJust(deleteAt(i)(_699));
            })(findIndex(eq(x))(_699));
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Prelude["++"](Prelude.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (__dict_Eq_16) {
    return unionBy(Prelude["=="](__dict_Eq_16));
};
var $$delete = function (__dict_Eq_17) {
    return deleteBy(Prelude.eq(__dict_Eq_17));
};
var $bslash$bslash = function (__dict_Eq_18) {
    return function (xs) {
        return function (ys) {
            if ($$null(xs)) {
                return [  ];
            };
            if (Prelude.otherwise) {
                return $foreign["uncons'"](Prelude["const"](xs))(function (y) {
                    return function (ys_2) {
                        return $bslash$bslash(__dict_Eq_18)($$delete(__dict_Eq_18)(y)(xs))(ys_2);
                    };
                })(ys);
            };
            throw new Error("Failed pattern match: " + [ xs.constructor.name, ys.constructor.name ]);
        };
    };
};
var concatMap = Prelude.flip(Prelude.bind(Prelude.bindArray));
var mapMaybe = function (f) {
    return concatMap(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.maybe([  ])(singleton))(f));
};
var catMaybes = mapMaybe(Prelude.id(Prelude.categoryFn));
var alterAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                var _1318 = f(x);
                if (_1318 instanceof Data_Maybe.Nothing) {
                    return deleteAt(i)(xs);
                };
                if (_1318 instanceof Data_Maybe.Just) {
                    return updateAt(i)(_1318.value0)(xs);
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-arrays/src/Data/Array.purs line 330, column 3 - line 339, column 1: " + [ _1318.constructor.name ]);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)($bang$bang(xs)(i));
        };
    };
};
module.exports = {
    foldM: foldM, 
    unzip: unzip, 
    zip: zip, 
    zipWithA: zipWithA, 
    intersectBy: intersectBy, 
    intersect: intersect, 
    "\\\\": $bslash$bslash, 
    deleteBy: deleteBy, 
    "delete": $$delete, 
    unionBy: unionBy, 
    union: union, 
    nubBy: nubBy, 
    nub: nub, 
    groupBy: groupBy, 
    "group'": group$prime, 
    group: group, 
    span: span, 
    dropWhile: dropWhile, 
    takeWhile: takeWhile, 
    take: take, 
    sortBy: sortBy, 
    sort: sort, 
    catMaybes: catMaybes, 
    mapMaybe: mapMaybe, 
    filterM: filterM, 
    concatMap: concatMap, 
    alterAt: alterAt, 
    modifyAt: modifyAt, 
    updateAt: updateAt, 
    deleteAt: deleteAt, 
    insertAt: insertAt, 
    findLastIndex: findLastIndex, 
    findIndex: findIndex, 
    elemLastIndex: elemLastIndex, 
    elemIndex: elemIndex, 
    index: index, 
    "!!": $bang$bang, 
    uncons: uncons, 
    init: init, 
    tail: tail, 
    last: last, 
    head: head, 
    insertBy: insertBy, 
    insert: insert, 
    ":": $colon, 
    "null": $$null, 
    many: many, 
    some: some, 
    replicateM: replicateM, 
    "..": $dot$dot, 
    singleton: singleton, 
    zipWith: $foreign.zipWith, 
    drop: $foreign.drop, 
    slice: $foreign.slice, 
    filter: $foreign.filter, 
    concat: $foreign.concat, 
    reverse: $foreign.reverse, 
    snoc: $foreign.snoc, 
    cons: $foreign.cons, 
    length: $foreign.length, 
    replicate: $foreign.replicate, 
    range: $foreign.range
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/foreign.js","Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Alternative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alternative/index.js","Control.Lazy":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Lazy/index.js","Control.MonadPlus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.MonadPlus/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Functor.Invariant":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Maybe.Unsafe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe.Unsafe/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.ArrayBuffer.Types/index.js":[function(require,module,exports){
arguments[4]["/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js"][0].apply(exports,arguments)
},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bifoldable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Apply = require("Control.Apply");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var Data_Monoid = require("Data.Monoid");
var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
    this.bifoldMap = bifoldMap;
    this.bifoldl = bifoldl;
    this.bifoldr = bifoldr;
};
var bifoldr = function (dict) {
    return dict.bifoldr;
};
var bitraverse_ = function (__dict_Bifoldable_0) {
    return function (__dict_Applicative_1) {
        return function (f) {
            return function (g) {
                return bifoldr(__dict_Bifoldable_0)(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Apply["*>"](__dict_Applicative_1["__superclass_Prelude.Apply_0"]()))(f))(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Apply["*>"](__dict_Applicative_1["__superclass_Prelude.Apply_0"]()))(g))(Prelude.pure(__dict_Applicative_1)(Prelude.unit));
            };
        };
    };
};
var bifor_ = function (__dict_Bifoldable_2) {
    return function (__dict_Applicative_3) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse_(__dict_Bifoldable_2)(__dict_Applicative_3)(f)(g)(t);
                };
            };
        };
    };
};
var bisequence_ = function (__dict_Bifoldable_4) {
    return function (__dict_Applicative_5) {
        return bitraverse_(__dict_Bifoldable_4)(__dict_Applicative_5)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn));
    };
};
var bifoldl = function (dict) {
    return dict.bifoldl;
};
var bifoldMap = function (dict) {
    return dict.bifoldMap;
};
var bifold = function (__dict_Bifoldable_6) {
    return function (__dict_Monoid_7) {
        return bifoldMap(__dict_Bifoldable_6)(__dict_Monoid_7)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn));
    };
};
var biany = function (__dict_Bifoldable_8) {
    return function (__dict_BooleanAlgebra_9) {
        return function (p) {
            return function (q) {
                return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Disj.runDisj)(bifoldMap(__dict_Bifoldable_8)(Data_Monoid_Disj.monoidDisj(__dict_BooleanAlgebra_9))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Disj.Disj)(p))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Disj.Disj)(q)));
            };
        };
    };
};
var biall = function (__dict_Bifoldable_10) {
    return function (__dict_BooleanAlgebra_11) {
        return function (p) {
            return function (q) {
                return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Conj.runConj)(bifoldMap(__dict_Bifoldable_10)(Data_Monoid_Conj.monoidConj(__dict_BooleanAlgebra_11))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Conj.Conj)(p))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Conj.Conj)(q)));
            };
        };
    };
};
module.exports = {
    Bifoldable: Bifoldable, 
    biall: biall, 
    biany: biany, 
    bisequence_: bisequence_, 
    bifor_: bifor_, 
    bitraverse_: bitraverse_, 
    bifold: bifold, 
    bifoldMap: bifoldMap, 
    bifoldl: bifoldl, 
    bifoldr: bifoldr
};

},{"Control.Apply":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Apply/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Monoid.Conj":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Conj/index.js","Data.Monoid.Disj":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Disj/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bifunctor/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Bifunctor = function (bimap) {
    this.bimap = bimap;
};
var bimap = function (dict) {
    return dict.bimap;
};
var lmap = function (__dict_Bifunctor_0) {
    return function (f) {
        return bimap(__dict_Bifunctor_0)(f)(Prelude.id(Prelude.categoryFn));
    };
};
var rmap = function (__dict_Bifunctor_1) {
    return bimap(__dict_Bifunctor_1)(Prelude.id(Prelude.categoryFn));
};
module.exports = {
    Bifunctor: Bifunctor, 
    rmap: rmap, 
    lmap: lmap, 
    bimap: bimap
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bitraversable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Bitraversable = function (__superclass_Data$dotBifoldable$dotBifoldable_1, __superclass_Data$dotBifunctor$dotBifunctor_0, bisequence, bitraverse) {
    this["__superclass_Data.Bifoldable.Bifoldable_1"] = __superclass_Data$dotBifoldable$dotBifoldable_1;
    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    this.bisequence = bisequence;
    this.bitraverse = bitraverse;
};
var bitraverse = function (dict) {
    return dict.bitraverse;
};
var bisequence = function (dict) {
    return dict.bisequence;
};
var bifor = function (__dict_Bitraversable_0) {
    return function (__dict_Applicative_1) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse(__dict_Bitraversable_0)(__dict_Applicative_1)(f)(g)(t);
                };
            };
        };
    };
};
module.exports = {
    Bitraversable: Bitraversable, 
    bifor: bifor, 
    bisequence: bisequence, 
    bitraverse: bitraverse
};

},{"Data.Bifoldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bifoldable/index.js","Data.Bifunctor":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bifunctor/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.CatList/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_CatQueue = require("Data.CatQueue");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Data_Tuple = require("Data.Tuple");
var Data_List = require("Data.List");
var CatNil = (function () {
    function CatNil() {

    };
    CatNil.value = new CatNil();
    return CatNil;
})();
var CatCons = (function () {
    function CatCons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CatCons.create = function (value0) {
        return function (value1) {
            return new CatCons(value0, value1);
        };
    };
    return CatCons;
})();
var showCatList = function (__dict_Show_0) {
    return new Prelude.Show(function (_422) {
        if (_422 instanceof CatNil) {
            return "CatNil";
        };
        if (_422 instanceof CatCons) {
            return "CatList (" + (Prelude.show(__dict_Show_0)(_422.value0) + (") (" + (Prelude.show(Data_CatQueue.showCatQueue(showCatList(__dict_Show_0)))(_422.value1) + ")")));
        };
        throw new Error("Failed pattern match: " + [ _422.constructor.name ]);
    });
};
var $$null = function (_416) {
    if (_416 instanceof CatNil) {
        return true;
    };
    return false;
};
var link = function (_420) {
    return function (cat) {
        if (_420 instanceof CatNil) {
            return cat;
        };
        if (_420 instanceof CatCons) {
            return new CatCons(_420.value0, Data_CatQueue.snoc(_420.value1)(cat));
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-catenable-lists/src/Data/CatList.purs line 88, column 1 - line 89, column 1: " + [ _420.constructor.name, cat.constructor.name ]);
    };
};
var foldr = function (k) {
    return function (b) {
        return function (q) {
            var foldl = function (__copy_k_1) {
                return function (__copy_b_1) {
                    return function (__copy__421) {
                        var k_1 = __copy_k_1;
                        var b_1 = __copy_b_1;
                        var _421 = __copy__421;
                        tco: while (true) {
                            var b_2 = b_1;
                            if (_421 instanceof Data_List.Nil) {
                                return b_2;
                            };
                            if (_421 instanceof Data_List.Cons) {
                                var __tco_k_1 = k_1;
                                var __tco_b_1 = k_1(b_1)(_421.value0);
                                var __tco__421 = _421.value1;
                                k_1 = __tco_k_1;
                                b_1 = __tco_b_1;
                                _421 = __tco__421;
                                continue tco;
                            };
                            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-catenable-lists/src/Data/CatList.purs line 95, column 1 - line 96, column 1: " + [ k_1.constructor.name, b_1.constructor.name, _421.constructor.name ]);
                        };
                    };
                };
            };
            var go = function (__copy_xs) {
                return function (__copy_ys) {
                    var xs = __copy_xs;
                    var ys = __copy_ys;
                    tco: while (true) {
                        var _770 = Data_CatQueue.uncons(xs);
                        if (_770 instanceof Data_Maybe.Nothing) {
                            return foldl(function (x) {
                                return function (i) {
                                    return i(x);
                                };
                            })(b)(ys);
                        };
                        if (_770 instanceof Data_Maybe.Just) {
                            var __tco_ys = new Data_List.Cons(k(_770.value0.value0), ys);
                            xs = _770.value0.value1;
                            ys = __tco_ys;
                            continue tco;
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-catenable-lists/src/Data/CatList.purs line 95, column 1 - line 96, column 1: " + [ _770.constructor.name ]);
                    };
                };
            };
            return go(q)(Data_List.Nil.value);
        };
    };
};
var uncons = function (_419) {
    if (_419 instanceof CatNil) {
        return Data_Maybe.Nothing.value;
    };
    if (_419 instanceof CatCons) {
        return new Data_Maybe.Just(new Data_Tuple.Tuple(_419.value0, (function () {
            var _775 = Data_CatQueue["null"](_419.value1);
            if (_775) {
                return CatNil.value;
            };
            if (!_775) {
                return foldr(link)(CatNil.value)(_419.value1);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-catenable-lists/src/Data/CatList.purs line 79, column 1 - line 80, column 1: " + [ _775.constructor.name ]);
        })()));
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-catenable-lists/src/Data/CatList.purs line 79, column 1 - line 80, column 1: " + [ _419.constructor.name ]);
};
var empty = CatNil.value;
var append = function (_417) {
    return function (_418) {
        if (_418 instanceof CatNil) {
            return _417;
        };
        if (_417 instanceof CatNil) {
            return _418;
        };
        return link(_417)(_418);
    };
};
var cons = function (a) {
    return function (cat) {
        return append(new CatCons(a, Data_CatQueue.empty))(cat);
    };
};
var semigroupCatList = new Prelude.Semigroup(append);
var monoidCatList = new Data_Monoid.Monoid(function () {
    return semigroupCatList;
}, CatNil.value);
var snoc = function (cat) {
    return function (a) {
        return append(cat)(new CatCons(a, Data_CatQueue.empty));
    };
};
module.exports = {
    CatNil: CatNil, 
    CatCons: CatCons, 
    uncons: uncons, 
    snoc: snoc, 
    cons: cons, 
    append: append, 
    "null": $$null, 
    empty: empty, 
    semigroupCatList: semigroupCatList, 
    monoidCatList: monoidCatList, 
    showCatList: showCatList
};

},{"Data.CatQueue":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.CatQueue/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.CatQueue/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_List = require("Data.List");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var CatQueue = (function () {
    function CatQueue(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CatQueue.create = function (value0) {
        return function (value1) {
            return new CatQueue(value0, value1);
        };
    };
    return CatQueue;
})();
var uncons = function (__copy__414) {
    var _414 = __copy__414;
    tco: while (true) {
        if (_414.value0 instanceof Data_List.Nil && _414.value1 instanceof Data_List.Nil) {
            return Data_Maybe.Nothing.value;
        };
        if (_414.value0 instanceof Data_List.Nil) {
            var __tco__414 = new CatQueue(Data_List.reverse(_414.value1), Data_List.Nil.value);
            _414 = __tco__414;
            continue tco;
        };
        if (_414.value0 instanceof Data_List.Cons) {
            return new Data_Maybe.Just(new Data_Tuple.Tuple(_414.value0.value0, new CatQueue(_414.value0.value1, _414.value1)));
        };
        throw new Error("Failed pattern match: " + [ _414.constructor.name ]);
    };
};
var snoc = function (_413) {
    return function (a) {
        return new CatQueue(_413.value0, new Data_List.Cons(a, _413.value1));
    };
};
var showCatQueue = function (__dict_Show_0) {
    return new Prelude.Show(function (_415) {
        return "CatQueue (" + (Prelude.show(Data_List.showList(__dict_Show_0))(_415.value0) + (") (" + (Prelude.show(Data_List.showList(__dict_Show_0))(_415.value1) + ")")));
    });
};
var $$null = function (_412) {
    if (_412.value0 instanceof Data_List.Nil && _412.value1 instanceof Data_List.Nil) {
        return true;
    };
    return false;
};
var empty = new CatQueue(Data_List.Nil.value, Data_List.Nil.value);
module.exports = {
    CatQueue: CatQueue, 
    uncons: uncons, 
    snoc: snoc, 
    "null": $$null, 
    empty: empty, 
    showCatQueue: showCatQueue
};

},{"Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Char/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Char

exports.toString = function (c) {
  return c;
};

exports.toCharCode = function (c) {
  return c.charCodeAt(0);
};

exports.fromCharCode = function (c) {
  return String.fromCharCode(c);
};

exports.toLower = function (c) {
  return c.toLowerCase();
};

exports.toUpper = function (c) {
  return c.toUpperCase();
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Char/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
module.exports = {
    toUpper: $foreign.toUpper, 
    toLower: $foreign.toLower, 
    toCharCode: $foreign.toCharCode, 
    fromCharCode: $foreign.fromCharCode, 
    toString: $foreign.toString
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Char/foreign.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Const/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Foldable = require("Data.Foldable");
var Data_Functor_Contravariant = require("Data.Functor.Contravariant");
var Data_Traversable = require("Data.Traversable");
var Const = function (x) {
    return x;
};
var showConst = function (__dict_Show_2) {
    return new Prelude.Show(function (_160) {
        return "Const (" + (Prelude.show(__dict_Show_2)(_160) + ")");
    });
};
var semigroupoidConst = new Prelude.Semigroupoid(function (_161) {
    return function (_162) {
        return _162;
    };
});
var semigroupConst = function (__dict_Semigroup_3) {
    return new Prelude.Semigroup(function (_163) {
        return function (_164) {
            return Prelude["<>"](__dict_Semigroup_3)(_163)(_164);
        };
    });
};
var monoidConst = function (__dict_Monoid_5) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConst(__dict_Monoid_5["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(__dict_Monoid_5));
};
var getConst = function (_155) {
    return _155;
};
var functorConst = new Prelude.Functor(function (_165) {
    return function (_166) {
        return _166;
    };
});
var invariantConst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorConst));
var foldableConst = new Data_Foldable.Foldable(function (__dict_Monoid_6) {
    return function (_178) {
        return function (_179) {
            return Data_Monoid.mempty(__dict_Monoid_6);
        };
    };
}, function (_176) {
    return function (z) {
        return function (_177) {
            return z;
        };
    };
}, function (_174) {
    return function (z) {
        return function (_175) {
            return z;
        };
    };
});
var traversableConst = new Data_Traversable.Traversable(function () {
    return foldableConst;
}, function () {
    return functorConst;
}, function (__dict_Applicative_1) {
    return function (_182) {
        return Prelude.pure(__dict_Applicative_1)(_182);
    };
}, function (__dict_Applicative_0) {
    return function (_180) {
        return function (_181) {
            return Prelude.pure(__dict_Applicative_0)(_181);
        };
    };
});
var eqConst = function (__dict_Eq_7) {
    return new Prelude.Eq(function (_156) {
        return function (_157) {
            return Prelude["=="](__dict_Eq_7)(_156)(_157);
        };
    });
};
var ordConst = function (__dict_Ord_4) {
    return new Prelude.Ord(function () {
        return eqConst(__dict_Ord_4["__superclass_Prelude.Eq_0"]());
    }, function (_158) {
        return function (_159) {
            return Prelude.compare(__dict_Ord_4)(_158)(_159);
        };
    });
};
var contravariantConst = new Data_Functor_Contravariant.Contravariant(function (_172) {
    return function (_173) {
        return _173;
    };
});
var boundedConst = function (__dict_Bounded_8) {
    return new Prelude.Bounded(Prelude.bottom(__dict_Bounded_8), Prelude.top(__dict_Bounded_8));
};
var applyConst = function (__dict_Semigroup_10) {
    return new Prelude.Apply(function () {
        return functorConst;
    }, function (_167) {
        return function (_168) {
            return Prelude["<>"](__dict_Semigroup_10)(_167)(_168);
        };
    });
};
var bindConst = function (__dict_Semigroup_9) {
    return new Prelude.Bind(function () {
        return applyConst(__dict_Semigroup_9);
    }, function (_169) {
        return function (_170) {
            return _169;
        };
    });
};
var applicativeConst = function (__dict_Monoid_11) {
    return new Prelude.Applicative(function () {
        return applyConst(__dict_Monoid_11["__superclass_Prelude.Semigroup_0"]());
    }, function (_171) {
        return Data_Monoid.mempty(__dict_Monoid_11);
    });
};
module.exports = {
    Const: Const, 
    getConst: getConst, 
    eqConst: eqConst, 
    ordConst: ordConst, 
    boundedConst: boundedConst, 
    showConst: showConst, 
    semigroupoidConst: semigroupoidConst, 
    semigroupConst: semigroupConst, 
    monoidConst: monoidConst, 
    functorConst: functorConst, 
    invariantConst: invariantConst, 
    applyConst: applyConst, 
    bindConst: bindConst, 
    applicativeConst: applicativeConst, 
    contravariantConst: contravariantConst, 
    foldableConst: foldableConst, 
    traversableConst: traversableConst
};

},{"Data.Bifoldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bifoldable/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Functor.Contravariant":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Contravariant/index.js","Data.Functor.Invariant":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Date/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Date

exports.nowEpochMilliseconds = function () {
  return Date.now();
};

exports.nowImpl = function (ctor) {
  return function () {
    return ctor(new Date());
  };
};

exports.jsDateConstructor = function (x) {
  return new Date(x);
};

// jshint maxparams: 2
exports.jsDateMethod = function (method, date) {
  return date[method]();
};

// jshint maxparams: 3
exports.strictJsDate = function (just, nothing, s) {
  var epoch = Date.parse(s);
  if (isNaN(epoch)) return nothing;
  var date = new Date(epoch);
  var s2 = date.toISOString();
  var idx = s2.indexOf(s);
  return idx < 0 ? nothing : just(date);
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Date/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Global = require("Global");
var Data_Function = require("Data.Function");
var Data_Enum = require("Data.Enum");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var Data_Time = require("Data.Time");
var Year = function (x) {
    return x;
};
var January = (function () {
    function January() {

    };
    January.value = new January();
    return January;
})();
var February = (function () {
    function February() {

    };
    February.value = new February();
    return February;
})();
var March = (function () {
    function March() {

    };
    March.value = new March();
    return March;
})();
var April = (function () {
    function April() {

    };
    April.value = new April();
    return April;
})();
var May = (function () {
    function May() {

    };
    May.value = new May();
    return May;
})();
var June = (function () {
    function June() {

    };
    June.value = new June();
    return June;
})();
var July = (function () {
    function July() {

    };
    July.value = new July();
    return July;
})();
var August = (function () {
    function August() {

    };
    August.value = new August();
    return August;
})();
var September = (function () {
    function September() {

    };
    September.value = new September();
    return September;
})();
var October = (function () {
    function October() {

    };
    October.value = new October();
    return October;
})();
var November = (function () {
    function November() {

    };
    November.value = new November();
    return November;
})();
var December = (function () {
    function December() {

    };
    December.value = new December();
    return December;
})();
var LocaleOffset = function (x) {
    return x;
};
var Sunday = (function () {
    function Sunday() {

    };
    Sunday.value = new Sunday();
    return Sunday;
})();
var Monday = (function () {
    function Monday() {

    };
    Monday.value = new Monday();
    return Monday;
})();
var Tuesday = (function () {
    function Tuesday() {

    };
    Tuesday.value = new Tuesday();
    return Tuesday;
})();
var Wednesday = (function () {
    function Wednesday() {

    };
    Wednesday.value = new Wednesday();
    return Wednesday;
})();
var Thursday = (function () {
    function Thursday() {

    };
    Thursday.value = new Thursday();
    return Thursday;
})();
var Friday = (function () {
    function Friday() {

    };
    Friday.value = new Friday();
    return Friday;
})();
var Saturday = (function () {
    function Saturday() {

    };
    Saturday.value = new Saturday();
    return Saturday;
})();
var DayOfMonth = function (x) {
    return x;
};
var DateTime = function (x) {
    return x;
};
var toJSDate = function (_837) {
    return _837;
};
var toEpochMilliseconds = function (_838) {
    return $foreign.jsDateMethod("getTime", _838);
};
var timezoneOffset = function (_839) {
    return $foreign.jsDateMethod("getTimezoneOffset", _839);
};
var showYear = new Prelude.Show(function (_854) {
    return "(Year " + (Prelude.show(Prelude.showInt)(_854) + ")");
});
var showMonth = new Prelude.Show(function (_857) {
    if (_857 instanceof January) {
        return "January";
    };
    if (_857 instanceof February) {
        return "February";
    };
    if (_857 instanceof March) {
        return "March";
    };
    if (_857 instanceof April) {
        return "April";
    };
    if (_857 instanceof May) {
        return "May";
    };
    if (_857 instanceof June) {
        return "June";
    };
    if (_857 instanceof July) {
        return "July";
    };
    if (_857 instanceof August) {
        return "August";
    };
    if (_857 instanceof September) {
        return "September";
    };
    if (_857 instanceof October) {
        return "October";
    };
    if (_857 instanceof November) {
        return "November";
    };
    if (_857 instanceof December) {
        return "December";
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-datetime/src/Data/Date.purs line 161, column 1 - line 175, column 1: " + [ _857.constructor.name ]);
});
var showDayOfWeek = new Prelude.Show(function (_864) {
    if (_864 instanceof Sunday) {
        return "Sunday";
    };
    if (_864 instanceof Monday) {
        return "Monday";
    };
    if (_864 instanceof Tuesday) {
        return "Tuesday";
    };
    if (_864 instanceof Wednesday) {
        return "Wednesday";
    };
    if (_864 instanceof Thursday) {
        return "Thursday";
    };
    if (_864 instanceof Friday) {
        return "Friday";
    };
    if (_864 instanceof Saturday) {
        return "Saturday";
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-datetime/src/Data/Date.purs line 249, column 1 - line 258, column 1: " + [ _864.constructor.name ]);
});
var showDate = new Prelude.Show(function (d) {
    return "(fromEpochMilliseconds " + (Prelude.show(Data_Time.showMilliseconds)(toEpochMilliseconds(d)) + ")");
});
var semiringYear = new Prelude.Semiring(function (_848) {
    return function (_849) {
        return Prelude["+"](Prelude.semiringInt)(_848)(_849);
    };
}, function (_850) {
    return function (_851) {
        return Prelude["*"](Prelude.semiringInt)(_850)(_851);
    };
}, Prelude.one(Prelude.semiringInt), Prelude.zero(Prelude.semiringInt));
var ringYear = new Prelude.Ring(function () {
    return semiringYear;
}, function (_852) {
    return function (_853) {
        return Prelude["-"](Prelude.ringInt)(_852)(_853);
    };
});
var now = $foreign.nowImpl(DateTime);
var monthToEnum = function (_840) {
    if (_840 === 0) {
        return new Data_Maybe.Just(January.value);
    };
    if (_840 === 1) {
        return new Data_Maybe.Just(February.value);
    };
    if (_840 === 2) {
        return new Data_Maybe.Just(March.value);
    };
    if (_840 === 3) {
        return new Data_Maybe.Just(April.value);
    };
    if (_840 === 4) {
        return new Data_Maybe.Just(May.value);
    };
    if (_840 === 5) {
        return new Data_Maybe.Just(June.value);
    };
    if (_840 === 6) {
        return new Data_Maybe.Just(July.value);
    };
    if (_840 === 7) {
        return new Data_Maybe.Just(August.value);
    };
    if (_840 === 8) {
        return new Data_Maybe.Just(September.value);
    };
    if (_840 === 9) {
        return new Data_Maybe.Just(October.value);
    };
    if (_840 === 10) {
        return new Data_Maybe.Just(November.value);
    };
    if (_840 === 11) {
        return new Data_Maybe.Just(December.value);
    };
    return Data_Maybe.Nothing.value;
};
var monthFromEnum = function (_841) {
    if (_841 instanceof January) {
        return 0;
    };
    if (_841 instanceof February) {
        return 1;
    };
    if (_841 instanceof March) {
        return 2;
    };
    if (_841 instanceof April) {
        return 3;
    };
    if (_841 instanceof May) {
        return 4;
    };
    if (_841 instanceof June) {
        return 5;
    };
    if (_841 instanceof July) {
        return 6;
    };
    if (_841 instanceof August) {
        return 7;
    };
    if (_841 instanceof September) {
        return 8;
    };
    if (_841 instanceof October) {
        return 9;
    };
    if (_841 instanceof November) {
        return 10;
    };
    if (_841 instanceof December) {
        return 11;
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-datetime/src/Data/Date.purs line 197, column 1 - line 198, column 1: " + [ _841.constructor.name ]);
};
var fromJSDate = function (d) {
    var _970 = Global.isNaN($foreign.jsDateMethod("getTime", d));
    if (_970) {
        return Data_Maybe.Nothing.value;
    };
    if (!_970) {
        return new Data_Maybe.Just(d);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-datetime/src/Data/Date.purs line 50, column 1 - line 51, column 1: " + [ _970.constructor.name ]);
};
var fromString = Prelude["<<<"](Prelude.semigroupoidFn)(fromJSDate)($foreign.jsDateConstructor);
var fromStringStrict = function (s) {
    return Prelude[">>="](Data_Maybe.bindMaybe)($foreign.strictJsDate(Data_Maybe.Just.create, Data_Maybe.Nothing.value, s))(fromJSDate);
};
var fromEpochMilliseconds = Prelude["<<<"](Prelude.semigroupoidFn)(fromJSDate)($foreign.jsDateConstructor);
var eqYear = new Prelude.Eq(function (_844) {
    return function (_845) {
        return Prelude["=="](Prelude.eqInt)(_844)(_845);
    };
});
var ordYear = new Prelude.Ord(function () {
    return eqYear;
}, function (_846) {
    return function (_847) {
        return Prelude.compare(Prelude.ordInt)(_846)(_847);
    };
});
var eqMonth = new Prelude.Eq(function (_855) {
    return function (_856) {
        if (_855 instanceof January && _856 instanceof January) {
            return true;
        };
        if (_855 instanceof February && _856 instanceof February) {
            return true;
        };
        if (_855 instanceof March && _856 instanceof March) {
            return true;
        };
        if (_855 instanceof April && _856 instanceof April) {
            return true;
        };
        if (_855 instanceof May && _856 instanceof May) {
            return true;
        };
        if (_855 instanceof June && _856 instanceof June) {
            return true;
        };
        if (_855 instanceof July && _856 instanceof July) {
            return true;
        };
        if (_855 instanceof August && _856 instanceof August) {
            return true;
        };
        if (_855 instanceof September && _856 instanceof September) {
            return true;
        };
        if (_855 instanceof October && _856 instanceof October) {
            return true;
        };
        if (_855 instanceof November && _856 instanceof November) {
            return true;
        };
        if (_855 instanceof December && _856 instanceof December) {
            return true;
        };
        return false;
    };
});
var eqDayOfWeek = new Prelude.Eq(function (_862) {
    return function (_863) {
        if (_862 instanceof Sunday && _863 instanceof Sunday) {
            return true;
        };
        if (_862 instanceof Monday && _863 instanceof Monday) {
            return true;
        };
        if (_862 instanceof Tuesday && _863 instanceof Tuesday) {
            return true;
        };
        if (_862 instanceof Wednesday && _863 instanceof Wednesday) {
            return true;
        };
        if (_862 instanceof Thursday && _863 instanceof Thursday) {
            return true;
        };
        if (_862 instanceof Friday && _863 instanceof Friday) {
            return true;
        };
        if (_862 instanceof Saturday && _863 instanceof Saturday) {
            return true;
        };
        return false;
    };
});
var eqDayOfMonth = new Prelude.Eq(function (_858) {
    return function (_859) {
        return Prelude["=="](Prelude.eqInt)(_858)(_859);
    };
});
var ordDayOfMonth = new Prelude.Ord(function () {
    return eqDayOfMonth;
}, function (_860) {
    return function (_861) {
        return Prelude.compare(Prelude.ordInt)(_860)(_861);
    };
});
var eqDate = new Prelude.Eq(Data_Function.on(Prelude.eq(Data_Time.eqMilliseconds))(toEpochMilliseconds));
var ordDate = new Prelude.Ord(function () {
    return eqDate;
}, Data_Function.on(Prelude.compare(Data_Time.ordMilliseconds))(toEpochMilliseconds));
var dayOfWeekToEnum = function (_842) {
    if (_842 === 0) {
        return new Data_Maybe.Just(Sunday.value);
    };
    if (_842 === 1) {
        return new Data_Maybe.Just(Monday.value);
    };
    if (_842 === 2) {
        return new Data_Maybe.Just(Tuesday.value);
    };
    if (_842 === 3) {
        return new Data_Maybe.Just(Wednesday.value);
    };
    if (_842 === 4) {
        return new Data_Maybe.Just(Thursday.value);
    };
    if (_842 === 5) {
        return new Data_Maybe.Just(Friday.value);
    };
    if (_842 === 6) {
        return new Data_Maybe.Just(Saturday.value);
    };
    return Data_Maybe.Nothing.value;
};
var dayOfWeekFromEnum = function (_843) {
    if (_843 instanceof Sunday) {
        return 0;
    };
    if (_843 instanceof Monday) {
        return 1;
    };
    if (_843 instanceof Tuesday) {
        return 2;
    };
    if (_843 instanceof Wednesday) {
        return 3;
    };
    if (_843 instanceof Thursday) {
        return 4;
    };
    if (_843 instanceof Friday) {
        return 5;
    };
    if (_843 instanceof Saturday) {
        return 6;
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-datetime/src/Data/Date.purs line 275, column 1 - line 276, column 1: " + [ _843.constructor.name ]);
};
var boundedMonth = new Prelude.Bounded(January.value, December.value);
var enumMonth = new Data_Enum.Enum(function () {
    return boundedMonth;
}, 12, monthFromEnum, Data_Enum.defaultPred(monthToEnum)(monthFromEnum), Data_Enum.defaultSucc(monthToEnum)(monthFromEnum), monthToEnum);
var ordMonth = new Prelude.Ord(function () {
    return eqMonth;
}, Data_Function.on(Prelude.compare(Prelude.ordInt))(Data_Enum.fromEnum(enumMonth)));
var boundedOrdMonth = new Prelude.BoundedOrd(function () {
    return boundedMonth;
}, function () {
    return ordMonth;
});
var boundedDayOfWeek = new Prelude.Bounded(Sunday.value, Saturday.value);
var enumDayOfWeek = new Data_Enum.Enum(function () {
    return boundedDayOfWeek;
}, 7, dayOfWeekFromEnum, Data_Enum.defaultPred(dayOfWeekToEnum)(dayOfWeekFromEnum), Data_Enum.defaultSucc(dayOfWeekToEnum)(dayOfWeekFromEnum), dayOfWeekToEnum);
var ordDayOfWeek = new Prelude.Ord(function () {
    return eqDayOfWeek;
}, Data_Function.on(Prelude.compare(Prelude.ordInt))(Data_Enum.fromEnum(enumDayOfWeek)));
var boundedOrdDayOfWeek = new Prelude.BoundedOrd(function () {
    return boundedDayOfWeek;
}, function () {
    return ordDayOfWeek;
});
module.exports = {
    Sunday: Sunday, 
    Monday: Monday, 
    Tuesday: Tuesday, 
    Wednesday: Wednesday, 
    Thursday: Thursday, 
    Friday: Friday, 
    Saturday: Saturday, 
    DayOfMonth: DayOfMonth, 
    January: January, 
    February: February, 
    March: March, 
    April: April, 
    May: May, 
    June: June, 
    July: July, 
    August: August, 
    September: September, 
    October: October, 
    November: November, 
    December: December, 
    Year: Year, 
    LocaleOffset: LocaleOffset, 
    timezoneOffset: timezoneOffset, 
    now: now, 
    fromStringStrict: fromStringStrict, 
    fromString: fromString, 
    toEpochMilliseconds: toEpochMilliseconds, 
    fromEpochMilliseconds: fromEpochMilliseconds, 
    toJSDate: toJSDate, 
    fromJSDate: fromJSDate, 
    eqDate: eqDate, 
    ordDate: ordDate, 
    showDate: showDate, 
    eqYear: eqYear, 
    ordYear: ordYear, 
    semiringYear: semiringYear, 
    ringYear: ringYear, 
    showYear: showYear, 
    eqMonth: eqMonth, 
    ordMonth: ordMonth, 
    boundedMonth: boundedMonth, 
    boundedOrdMonth: boundedOrdMonth, 
    showMonth: showMonth, 
    enumMonth: enumMonth, 
    eqDayOfMonth: eqDayOfMonth, 
    ordDayOfMonth: ordDayOfMonth, 
    eqDayOfWeek: eqDayOfWeek, 
    ordDayOfWeek: ordDayOfWeek, 
    boundedDayOfWeek: boundedDayOfWeek, 
    boundedOrdDayOfWeek: boundedOrdDayOfWeek, 
    showDayOfWeek: showDayOfWeek, 
    enumDayOfWeek: enumDayOfWeek, 
    nowEpochMilliseconds: $foreign.nowEpochMilliseconds
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Date/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Data.Enum":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Enum/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Time":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Time/index.js","Global":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Global/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Distributive/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Identity = require("Data.Identity");
var Distributive = function (__superclass_Prelude$dotFunctor_0, collect, distribute) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.collect = collect;
    this.distribute = distribute;
};
var distributiveIdentity = new Distributive(function () {
    return Data_Identity.functorIdentity;
}, function (__dict_Functor_1) {
    return function (f) {
        return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.Identity)(Prelude.map(__dict_Functor_1)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.runIdentity)(f)));
    };
}, function (__dict_Functor_0) {
    return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.Identity)(Prelude.map(__dict_Functor_0)(Data_Identity.runIdentity));
});
var distribute = function (dict) {
    return dict.distribute;
};
var distributiveFunction = new Distributive(function () {
    return Prelude.functorFn;
}, function (__dict_Functor_3) {
    return function (f) {
        return Prelude["<<<"](Prelude.semigroupoidFn)(distribute(distributiveFunction)(__dict_Functor_3))(Prelude.map(__dict_Functor_3)(f));
    };
}, function (__dict_Functor_2) {
    return function (a) {
        return function (e) {
            return Prelude.map(__dict_Functor_2)(function (_10) {
                return _10(e);
            })(a);
        };
    };
});
var cotraverse = function (__dict_Distributive_4) {
    return function (__dict_Functor_5) {
        return function (f) {
            return Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.map(__dict_Distributive_4["__superclass_Prelude.Functor_0"]())(f))(distribute(__dict_Distributive_4)(__dict_Functor_5));
        };
    };
};
var collect = function (dict) {
    return dict.collect;
};
module.exports = {
    Distributive: Distributive, 
    cotraverse: cotraverse, 
    collect: collect, 
    distribute: distribute, 
    distributiveIdentity: distributiveIdentity, 
    distributiveFunction: distributiveFunction
};

},{"Data.Identity":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Identity/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either.Unsafe/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Either.Unsafe

exports.unsafeThrow = function (msg) {
  throw new Error(msg);
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var fromRight = function (_497) {
    if (_497 instanceof Data_Either.Right) {
        return _497.value0;
    };
    return $foreign.unsafeThrow("Data.Either.Unsafe.fromLeft called on Left value");
};
var fromLeft = function (_496) {
    if (_496 instanceof Data_Either.Left) {
        return _496.value0;
    };
    return $foreign.unsafeThrow("Data.Either.Unsafe.fromLeft called on Right value");
};
module.exports = {
    fromRight: fromRight, 
    fromLeft: fromLeft
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either.Unsafe/foreign.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Control_Alt = require("Control.Alt");
var Control_Extend = require("Control.Extend");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Data_Bitraversable = require("Data.Bitraversable");
var Data_Foldable = require("Data.Foldable");
var Data_Traversable = require("Data.Traversable");
var Left = (function () {
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    return Left;
})();
var Right = (function () {
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    return Right;
})();
var showEither = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (_481) {
            if (_481 instanceof Left) {
                return "Left (" + (Prelude.show(__dict_Show_2)(_481.value0) + ")");
            };
            if (_481 instanceof Right) {
                return "Right (" + (Prelude.show(__dict_Show_3)(_481.value0) + ")");
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-either/src/Data/Either.purs line 174, column 1 - line 181, column 1: " + [ _481.constructor.name ]);
        });
    };
};
var functorEither = new Prelude.Functor(function (f) {
    return function (_476) {
        if (_476 instanceof Left) {
            return new Left(_476.value0);
        };
        if (_476 instanceof Right) {
            return new Right(f(_476.value0));
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-either/src/Data/Either.purs line 52, column 1 - line 56, column 1: " + [ f.constructor.name, _476.constructor.name ]);
    };
});
var foldableEither = new Data_Foldable.Foldable(function (__dict_Monoid_8) {
    return function (f) {
        return function (_488) {
            if (_488 instanceof Left) {
                return Data_Monoid.mempty(__dict_Monoid_8);
            };
            if (_488 instanceof Right) {
                return f(_488.value0);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-either/src/Data/Either.purs line 201, column 1 - line 209, column 1: " + [ f.constructor.name, _488.constructor.name ]);
        };
    };
}, function (f) {
    return function (z) {
        return function (_487) {
            if (_487 instanceof Left) {
                return z;
            };
            if (_487 instanceof Right) {
                return f(z)(_487.value0);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-either/src/Data/Either.purs line 201, column 1 - line 209, column 1: " + [ f.constructor.name, z.constructor.name, _487.constructor.name ]);
        };
    };
}, function (f) {
    return function (z) {
        return function (_486) {
            if (_486 instanceof Left) {
                return z;
            };
            if (_486 instanceof Right) {
                return f(_486.value0)(z);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-either/src/Data/Either.purs line 201, column 1 - line 209, column 1: " + [ f.constructor.name, z.constructor.name, _486.constructor.name ]);
        };
    };
});
var traversableEither = new Data_Traversable.Traversable(function () {
    return foldableEither;
}, function () {
    return functorEither;
}, function (__dict_Applicative_1) {
    return function (_493) {
        if (_493 instanceof Left) {
            return Prelude.pure(__dict_Applicative_1)(new Left(_493.value0));
        };
        if (_493 instanceof Right) {
            return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(_493.value0);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-either/src/Data/Either.purs line 217, column 1 - line 223, column 1: " + [ _493.constructor.name ]);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_492) {
            if (_492 instanceof Left) {
                return Prelude.pure(__dict_Applicative_0)(new Left(_492.value0));
            };
            if (_492 instanceof Right) {
                return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(f(_492.value0));
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-either/src/Data/Either.purs line 217, column 1 - line 223, column 1: " + [ f.constructor.name, _492.constructor.name ]);
        };
    };
});
var extendEither = new Control_Extend.Extend(function () {
    return functorEither;
}, function (f) {
    return function (_480) {
        if (_480 instanceof Left) {
            return new Left(_480.value0);
        };
        return new Right(f(_480));
    };
});
var eqEither = function (__dict_Eq_9) {
    return function (__dict_Eq_10) {
        return new Prelude.Eq(function (_482) {
            return function (_483) {
                if (_482 instanceof Left && _483 instanceof Left) {
                    return Prelude["=="](__dict_Eq_9)(_482.value0)(_483.value0);
                };
                if (_482 instanceof Right && _483 instanceof Right) {
                    return Prelude["=="](__dict_Eq_10)(_482.value0)(_483.value0);
                };
                return false;
            };
        });
    };
};
var ordEither = function (__dict_Ord_6) {
    return function (__dict_Ord_7) {
        return new Prelude.Ord(function () {
            return eqEither(__dict_Ord_6["__superclass_Prelude.Eq_0"]())(__dict_Ord_7["__superclass_Prelude.Eq_0"]());
        }, function (_484) {
            return function (_485) {
                if (_484 instanceof Left && _485 instanceof Left) {
                    return Prelude.compare(__dict_Ord_6)(_484.value0)(_485.value0);
                };
                if (_484 instanceof Right && _485 instanceof Right) {
                    return Prelude.compare(__dict_Ord_7)(_484.value0)(_485.value0);
                };
                if (_484 instanceof Left) {
                    return Prelude.LT.value;
                };
                if (_485 instanceof Left) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-either/src/Data/Either.purs line 191, column 1 - line 197, column 1: " + [ _484.constructor.name, _485.constructor.name ]);
            };
        });
    };
};
var either = function (f) {
    return function (g) {
        return function (_475) {
            if (_475 instanceof Left) {
                return f(_475.value0);
            };
            if (_475 instanceof Right) {
                return g(_475.value0);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-either/src/Data/Either.purs line 28, column 1 - line 29, column 1: " + [ f.constructor.name, g.constructor.name, _475.constructor.name ]);
        };
    };
};
var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
var isRight = either(Prelude["const"](false))(Prelude["const"](true));
var boundedEither = function (__dict_Bounded_11) {
    return function (__dict_Bounded_12) {
        return new Prelude.Bounded(new Left(Prelude.bottom(__dict_Bounded_11)), new Right(Prelude.top(__dict_Bounded_12)));
    };
};
var bifunctorEither = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (_477) {
            if (_477 instanceof Left) {
                return new Left(f(_477.value0));
            };
            if (_477 instanceof Right) {
                return new Right(g(_477.value0));
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-either/src/Data/Either.purs line 56, column 1 - line 92, column 1: " + [ f.constructor.name, g.constructor.name, _477.constructor.name ]);
        };
    };
});
var bifoldableEither = new Data_Bifoldable.Bifoldable(function (__dict_Monoid_15) {
    return function (f) {
        return function (g) {
            return function (_491) {
                if (_491 instanceof Left) {
                    return f(_491.value0);
                };
                if (_491 instanceof Right) {
                    return g(_491.value0);
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-either/src/Data/Either.purs line 209, column 1 - line 217, column 1: " + [ f.constructor.name, g.constructor.name, _491.constructor.name ]);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (_490) {
                if (_490 instanceof Left) {
                    return f(z)(_490.value0);
                };
                if (_490 instanceof Right) {
                    return g(z)(_490.value0);
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-either/src/Data/Either.purs line 209, column 1 - line 217, column 1: " + [ f.constructor.name, g.constructor.name, z.constructor.name, _490.constructor.name ]);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (_489) {
                if (_489 instanceof Left) {
                    return f(_489.value0)(z);
                };
                if (_489 instanceof Right) {
                    return g(_489.value0)(z);
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-either/src/Data/Either.purs line 209, column 1 - line 217, column 1: " + [ f.constructor.name, g.constructor.name, z.constructor.name, _489.constructor.name ]);
            };
        };
    };
});
var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableEither;
}, function () {
    return bifunctorEither;
}, function (__dict_Applicative_14) {
    return function (_495) {
        if (_495 instanceof Left) {
            return Prelude["<$>"]((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Left.create)(_495.value0);
        };
        if (_495 instanceof Right) {
            return Prelude["<$>"]((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(_495.value0);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-either/src/Data/Either.purs line 223, column 1 - line 229, column 1: " + [ _495.constructor.name ]);
    };
}, function (__dict_Applicative_13) {
    return function (f) {
        return function (g) {
            return function (_494) {
                if (_494 instanceof Left) {
                    return Prelude["<$>"]((__dict_Applicative_13["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Left.create)(f(_494.value0));
                };
                if (_494 instanceof Right) {
                    return Prelude["<$>"]((__dict_Applicative_13["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(g(_494.value0));
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-either/src/Data/Either.purs line 223, column 1 - line 229, column 1: " + [ f.constructor.name, g.constructor.name, _494.constructor.name ]);
            };
        };
    };
});
var applyEither = new Prelude.Apply(function () {
    return functorEither;
}, function (_478) {
    return function (r) {
        if (_478 instanceof Left) {
            return new Left(_478.value0);
        };
        if (_478 instanceof Right) {
            return Prelude["<$>"](functorEither)(_478.value0)(r);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-either/src/Data/Either.purs line 92, column 1 - line 116, column 1: " + [ _478.constructor.name, r.constructor.name ]);
    };
});
var bindEither = new Prelude.Bind(function () {
    return applyEither;
}, either(function (e) {
    return function (_474) {
        return new Left(e);
    };
})(function (a) {
    return function (f) {
        return f(a);
    };
}));
var semigroupEither = function (__dict_Semigroup_5) {
    return new Prelude.Semigroup(function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.append(__dict_Semigroup_5))(x))(y);
        };
    });
};
var semiringEither = function (__dict_Semiring_4) {
    return new Prelude.Semiring(function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.add(__dict_Semiring_4))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.mul(__dict_Semiring_4))(x))(y);
        };
    }, new Right(Prelude.one(__dict_Semiring_4)), new Right(Prelude.zero(__dict_Semiring_4)));
};
var applicativeEither = new Prelude.Applicative(function () {
    return applyEither;
}, Right.create);
var monadEither = new Prelude.Monad(function () {
    return applicativeEither;
}, function () {
    return bindEither;
});
var altEither = new Control_Alt.Alt(function () {
    return functorEither;
}, function (_479) {
    return function (r) {
        if (_479 instanceof Left) {
            return r;
        };
        return _479;
    };
});
module.exports = {
    Left: Left, 
    Right: Right, 
    isRight: isRight, 
    isLeft: isLeft, 
    either: either, 
    functorEither: functorEither, 
    bifunctorEither: bifunctorEither, 
    applyEither: applyEither, 
    applicativeEither: applicativeEither, 
    altEither: altEither, 
    bindEither: bindEither, 
    monadEither: monadEither, 
    extendEither: extendEither, 
    showEither: showEither, 
    eqEither: eqEither, 
    ordEither: ordEither, 
    boundedEither: boundedEither, 
    foldableEither: foldableEither, 
    bifoldableEither: bifoldableEither, 
    traversableEither: traversableEither, 
    bitraversableEither: bitraversableEither, 
    semiringEither: semiringEither, 
    semigroupEither: semigroupEither
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Extend":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Extend/index.js","Data.Bifoldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bifoldable/index.js","Data.Bifunctor":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bifunctor/index.js","Data.Bitraversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bitraversable/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Enum/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Unfoldable = require("Data.Unfoldable");
var Data_Char = require("Data.Char");
var Data_Either = require("Data.Either");
var Data_Tuple = require("Data.Tuple");
var Cardinality = function (x) {
    return x;
};
var Enum = function (__superclass_Prelude$dotBounded_0, cardinality, fromEnum, pred, succ, toEnum) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this.cardinality = cardinality;
    this.fromEnum = fromEnum;
    this.pred = pred;
    this.succ = succ;
    this.toEnum = toEnum;
};
var toEnum = function (dict) {
    return dict.toEnum;
};
var succ = function (dict) {
    return dict.succ;
};
var runCardinality = function (_313) {
    return _313;
};
var tupleCardinality = function (__dict_Enum_0) {
    return function (__dict_Enum_1) {
        return function (l) {
            return function (r) {
                return Cardinality(Prelude["*"](Prelude.semiringInt)(runCardinality(l))(runCardinality(r)));
            };
        };
    };
};
var tupleToEnum = function (__dict_Enum_2) {
    return function (__dict_Enum_3) {
        return function (cardb) {
            return function (n) {
                return Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(toEnum(__dict_Enum_2)(Prelude["/"](Prelude.moduloSemiringInt)(n)(runCardinality(cardb)))))(toEnum(__dict_Enum_3)(Prelude.mod(Prelude.moduloSemiringInt)(n)(runCardinality(cardb))));
            };
        };
    };
};
var pred = function (dict) {
    return dict.pred;
};
var maybeCardinality = function (__dict_Enum_4) {
    return function (c) {
        return Cardinality(Prelude["+"](Prelude.semiringInt)(Prelude.one(Prelude.semiringInt))(runCardinality(c)));
    };
};
var maybeToEnum = function (__dict_Enum_5) {
    return function (carda) {
        return function (n) {
            if (Prelude["<="](Prelude.ordInt)(n)(runCardinality(maybeCardinality(__dict_Enum_5)(carda)))) {
                var _731 = Prelude["=="](Prelude.eqInt)(n)(Prelude.zero(Prelude.semiringInt));
                if (_731) {
                    return Data_Maybe.Just.create(Data_Maybe.Nothing.value);
                };
                if (!_731) {
                    return Data_Maybe.Just.create(toEnum(__dict_Enum_5)(Prelude["-"](Prelude.ringInt)(n)(Prelude.one(Prelude.semiringInt))));
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-enums/src/Data/Enum.purs line 138, column 1 - line 139, column 1: " + [ _731.constructor.name ]);
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var intStepFromTo = function (step) {
    return function (from) {
        return function (to) {
            return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(function (e) {
                var _732 = Prelude["<="](Prelude.ordInt)(e)(to);
                if (_732) {
                    return Data_Maybe.Just.create(new Data_Tuple.Tuple(e, Prelude["+"](Prelude.semiringInt)(e)(step)));
                };
                if (!_732) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-enums/src/Data/Enum.purs line 103, column 1 - line 104, column 1: " + [ _732.constructor.name ]);
            })(from);
        };
    };
};
var intFromTo = intStepFromTo(Prelude.one(Prelude.semiringInt));
var fromEnum = function (dict) {
    return dict.fromEnum;
};
var tupleFromEnum = function (__dict_Enum_6) {
    return function (__dict_Enum_7) {
        return function (cardb) {
            return function (_316) {
                return Prelude["+"](Prelude.semiringInt)(Prelude["*"](Prelude.semiringInt)(fromEnum(__dict_Enum_6)(_316.value0))(runCardinality(cardb)))(fromEnum(__dict_Enum_7)(_316.value1));
            };
        };
    };
};
var enumFromTo = function (__dict_Enum_8) {
    return function (a) {
        return function (b) {
            var b$prime = fromEnum(__dict_Enum_8)(b);
            var a$prime = fromEnum(__dict_Enum_8)(a);
            return Prelude["<$>"](Prelude.functorArray)(Prelude[">>>"](Prelude.semigroupoidFn)(toEnum(__dict_Enum_8))(Data_Maybe_Unsafe.fromJust))(intFromTo(a$prime)(b$prime));
        };
    };
};
var enumFromThenTo = function (__dict_Enum_9) {
    return function (a) {
        return function (b) {
            return function (c) {
                var c$prime = fromEnum(__dict_Enum_9)(c);
                var b$prime = fromEnum(__dict_Enum_9)(b);
                var a$prime = fromEnum(__dict_Enum_9)(a);
                return Prelude["<$>"](Prelude.functorArray)(Prelude[">>>"](Prelude.semigroupoidFn)(toEnum(__dict_Enum_9))(Data_Maybe_Unsafe.fromJust))(intStepFromTo(Prelude["-"](Prelude.ringInt)(b$prime)(a$prime))(a$prime)(c$prime));
            };
        };
    };
};
var eitherFromEnum = function (__dict_Enum_10) {
    return function (__dict_Enum_11) {
        return function (carda) {
            return function (_317) {
                if (_317 instanceof Data_Either.Left) {
                    return fromEnum(__dict_Enum_10)(_317.value0);
                };
                if (_317 instanceof Data_Either.Right) {
                    return Prelude["+"](Prelude.semiringInt)(fromEnum(__dict_Enum_11)(_317.value0))(runCardinality(carda));
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-enums/src/Data/Enum.purs line 197, column 1 - line 198, column 1: " + [ carda.constructor.name, _317.constructor.name ]);
            };
        };
    };
};
var eitherCardinality = function (__dict_Enum_12) {
    return function (__dict_Enum_13) {
        return function (l) {
            return function (r) {
                return Cardinality(Prelude["+"](Prelude.semiringInt)(runCardinality(l))(runCardinality(r)));
            };
        };
    };
};
var eitherToEnum = function (__dict_Enum_14) {
    return function (__dict_Enum_15) {
        return function (carda) {
            return function (cardb) {
                return function (n) {
                    var _741 = Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude[">="](Prelude.ordInt)(n)(Prelude.zero(Prelude.semiringInt)))(Prelude["<"](Prelude.ordInt)(n)(runCardinality(carda)));
                    if (_741) {
                        return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Left.create)(toEnum(__dict_Enum_14)(n));
                    };
                    if (!_741) {
                        var _742 = Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude[">="](Prelude.ordInt)(n)(runCardinality(carda)))(Prelude["<"](Prelude.ordInt)(n)(runCardinality(eitherCardinality(__dict_Enum_14)(__dict_Enum_15)(carda)(cardb))));
                        if (_742) {
                            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Right.create)(toEnum(__dict_Enum_15)(Prelude["-"](Prelude.ringInt)(n)(runCardinality(carda))));
                        };
                        if (!_742) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match: " + [ _742.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-enums/src/Data/Enum.purs line 189, column 1 - line 190, column 1: " + [ _741.constructor.name ]);
                };
            };
        };
    };
};
var defaultToEnum = function (succ$prime) {
    return function (bottom$prime) {
        return function (n) {
            if (Prelude["<"](Prelude.ordInt)(n)(Prelude.zero(Prelude.semiringInt))) {
                return Data_Maybe.Nothing.value;
            };
            if (Prelude["=="](Prelude.eqInt)(n)(Prelude.zero(Prelude.semiringInt))) {
                return new Data_Maybe.Just(bottom$prime);
            };
            if (Prelude.otherwise) {
                return Prelude[">>="](Data_Maybe.bindMaybe)(defaultToEnum(succ$prime)(bottom$prime)(Prelude["-"](Prelude.ringInt)(n)(Prelude.one(Prelude.semiringInt))))(succ$prime);
            };
            throw new Error("Failed pattern match: " + [ succ$prime.constructor.name, bottom$prime.constructor.name, n.constructor.name ]);
        };
    };
};
var defaultSucc = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(Prelude["+"](Prelude.semiringInt)(fromEnum$prime(a))(Prelude.one(Prelude.semiringInt)));
        };
    };
};
var defaultPred = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(Prelude["-"](Prelude.ringInt)(fromEnum$prime(a))(Prelude.one(Prelude.semiringInt)));
        };
    };
};
var defaultFromEnum = function (pred$prime) {
    return function (e) {
        return Data_Maybe.maybe(Prelude.zero(Prelude.semiringInt))(function (prd) {
            return Prelude["+"](Prelude.semiringInt)(defaultFromEnum(pred$prime)(prd))(Prelude.one(Prelude.semiringInt));
        })(pred$prime(e));
    };
};
var charToEnum = function (n) {
    if (Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude[">="](Prelude.ordInt)(n)(0))(Prelude["<="](Prelude.ordInt)(n)(65535))) {
        return Data_Maybe.Just.create(Data_Char.fromCharCode(n));
    };
    return Data_Maybe.Nothing.value;
};
var charFromEnum = Data_Char.toCharCode;
var enumChar = new Enum(function () {
    return Prelude.boundedChar;
}, 65536, charFromEnum, defaultPred(charToEnum)(charFromEnum), defaultSucc(charToEnum)(charFromEnum), charToEnum);
var cardinality = function (dict) {
    return dict.cardinality;
};
var enumEither = function (__dict_Enum_16) {
    return function (__dict_Enum_17) {
        return new Enum(function () {
            return Data_Either.boundedEither(__dict_Enum_16["__superclass_Prelude.Bounded_0"]())(__dict_Enum_17["__superclass_Prelude.Bounded_0"]());
        }, eitherCardinality(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16))(cardinality(__dict_Enum_17)), eitherFromEnum(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16)), function (_324) {
            if (_324 instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Either.Left.create))(pred(__dict_Enum_16)(_324.value0));
            };
            if (_324 instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Left(Prelude.top(__dict_Enum_16["__superclass_Prelude.Bounded_0"]()))))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Either.Right.create))(pred(__dict_Enum_17)(_324.value0));
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-enums/src/Data/Enum.purs line 180, column 1 - line 189, column 1: " + [ _324.constructor.name ]);
        }, function (_323) {
            if (_323 instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Right(Prelude.bottom(__dict_Enum_17["__superclass_Prelude.Bounded_0"]()))))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Either.Left.create))(succ(__dict_Enum_16)(_323.value0));
            };
            if (_323 instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Either.Right.create))(succ(__dict_Enum_17)(_323.value0));
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-enums/src/Data/Enum.purs line 180, column 1 - line 189, column 1: " + [ _323.constructor.name ]);
        }, eitherToEnum(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16))(cardinality(__dict_Enum_17)));
    };
};
var enumMaybe = function (__dict_Enum_18) {
    return new Enum(function () {
        return Data_Maybe.boundedMaybe(__dict_Enum_18["__superclass_Prelude.Bounded_0"]());
    }, maybeCardinality(__dict_Enum_18)(cardinality(__dict_Enum_18)), function (_320) {
        if (_320 instanceof Data_Maybe.Nothing) {
            return Prelude.zero(Prelude.semiringInt);
        };
        if (_320 instanceof Data_Maybe.Just) {
            return Prelude["+"](Prelude.semiringInt)(fromEnum(__dict_Enum_18)(_320.value0))(Prelude.one(Prelude.semiringInt));
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-enums/src/Data/Enum.purs line 128, column 1 - line 138, column 1: " + [ _320.constructor.name ]);
    }, function (_319) {
        if (_319 instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Nothing.value;
        };
        if (_319 instanceof Data_Maybe.Just) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(pred(__dict_Enum_18)(_319.value0));
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-enums/src/Data/Enum.purs line 128, column 1 - line 138, column 1: " + [ _319.constructor.name ]);
    }, function (_318) {
        if (_318 instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Just.create(Prelude.bottom(Data_Maybe.boundedMaybe(__dict_Enum_18["__superclass_Prelude.Bounded_0"]())));
        };
        if (_318 instanceof Data_Maybe.Just) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(__dict_Enum_18)(_318.value0));
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-enums/src/Data/Enum.purs line 128, column 1 - line 138, column 1: " + [ _318.constructor.name ]);
    }, maybeToEnum(__dict_Enum_18)(cardinality(__dict_Enum_18)));
};
var enumTuple = function (__dict_Enum_19) {
    return function (__dict_Enum_20) {
        return new Enum(function () {
            return Data_Tuple.boundedTuple(__dict_Enum_19["__superclass_Prelude.Bounded_0"]())(__dict_Enum_20["__superclass_Prelude.Bounded_0"]());
        }, tupleCardinality(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_19))(cardinality(__dict_Enum_20)), tupleFromEnum(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_20)), function (_322) {
            return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(Prelude.bottom(__dict_Enum_20["__superclass_Prelude.Bounded_0"]())))(pred(__dict_Enum_19)(_322.value0)))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_322.value0)))(pred(__dict_Enum_20)(_322.value1));
        }, function (_321) {
            return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(Prelude.bottom(__dict_Enum_20["__superclass_Prelude.Bounded_0"]())))(succ(__dict_Enum_19)(_321.value0)))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_321.value0)))(succ(__dict_Enum_20)(_321.value1));
        }, tupleToEnum(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_20)));
    };
};
var booleanSucc = function (_314) {
    if (!_314) {
        return new Data_Maybe.Just(true);
    };
    return Data_Maybe.Nothing.value;
};
var booleanPred = function (_315) {
    if (_315) {
        return new Data_Maybe.Just(false);
    };
    return Data_Maybe.Nothing.value;
};
var enumBoolean = new Enum(function () {
    return Prelude.boundedBoolean;
}, 2, defaultFromEnum(booleanPred), booleanPred, booleanSucc, defaultToEnum(booleanSucc)(false));
module.exports = {
    Cardinality: Cardinality, 
    Enum: Enum, 
    enumFromThenTo: enumFromThenTo, 
    enumFromTo: enumFromTo, 
    intStepFromTo: intStepFromTo, 
    intFromTo: intFromTo, 
    defaultFromEnum: defaultFromEnum, 
    defaultToEnum: defaultToEnum, 
    defaultPred: defaultPred, 
    defaultSucc: defaultSucc, 
    toEnum: toEnum, 
    succ: succ, 
    runCardinality: runCardinality, 
    pred: pred, 
    fromEnum: fromEnum, 
    cardinality: cardinality, 
    enumChar: enumChar, 
    enumMaybe: enumMaybe, 
    enumBoolean: enumBoolean, 
    enumTuple: enumTuple, 
    enumEither: enumEither
};

},{"Data.Char":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Char/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Maybe.Unsafe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe.Unsafe/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Data.Unfoldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Unfoldable/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Exists/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Exists

exports.mkExists = function (fa) {
  return fa;
};

exports.runExists = function (f) {
  return function (fa) {
    return f(fa);
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Exists/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
module.exports = {
    runExists: $foreign.runExists, 
    mkExists: $foreign.mkExists
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Exists/foreign.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.ExistsR/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Unsafe_Coerce = require("Unsafe.Coerce");
var runExistsR = Unsafe_Coerce.unsafeCoerce;
var mkExistsR = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    runExistsR: runExistsR, 
    mkExistsR: mkExistsR
};

},{"Unsafe.Coerce":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Unsafe.Coerce/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foldable

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }
      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }
      return acc;
    };
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Control_Apply = require("Control.Apply");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Maybe_Last = require("Data.Maybe.Last");
var Data_Monoid_Additive = require("Data.Monoid.Additive");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("Data.Monoid.Multiplicative");
var Foldable = function (foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
};
var foldr = function (dict) {
    return dict.foldr;
};
var traverse_ = function (__dict_Applicative_0) {
    return function (__dict_Foldable_1) {
        return function (f) {
            return foldr(__dict_Foldable_1)(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Apply["*>"](__dict_Applicative_0["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_0)(Prelude.unit));
        };
    };
};
var for_ = function (__dict_Applicative_2) {
    return function (__dict_Foldable_3) {
        return Prelude.flip(traverse_(__dict_Applicative_2)(__dict_Foldable_3));
    };
};
var sequence_ = function (__dict_Applicative_4) {
    return function (__dict_Foldable_5) {
        return traverse_(__dict_Applicative_4)(__dict_Foldable_5)(Prelude.id(Prelude.categoryFn));
    };
};
var foldl = function (dict) {
    return dict.foldl;
};
var intercalate = function (__dict_Foldable_6) {
    return function (__dict_Monoid_7) {
        return function (sep) {
            return function (xs) {
                var go = function (_422) {
                    return function (x) {
                        if (_422.init) {
                            return {
                                init: false, 
                                acc: x
                            };
                        };
                        return {
                            init: false, 
                            acc: Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(_422.acc)(Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(sep)(x))
                        };
                    };
                };
                return (foldl(__dict_Foldable_6)(go)({
                    init: true, 
                    acc: Data_Monoid.mempty(__dict_Monoid_7)
                })(xs)).acc;
            };
        };
    };
};
var mconcat = function (__dict_Foldable_8) {
    return function (__dict_Monoid_9) {
        return foldl(__dict_Foldable_8)(Prelude["<>"](__dict_Monoid_9["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_9));
    };
};
var product = function (__dict_Foldable_10) {
    return function (__dict_Semiring_11) {
        return foldl(__dict_Foldable_10)(Prelude["*"](__dict_Semiring_11))(Prelude.one(__dict_Semiring_11));
    };
};
var sum = function (__dict_Foldable_12) {
    return function (__dict_Semiring_13) {
        return foldl(__dict_Foldable_12)(Prelude["+"](__dict_Semiring_13))(Prelude.zero(__dict_Semiring_13));
    };
};
var foldableMultiplicative = new Foldable(function (__dict_Monoid_14) {
    return function (f) {
        return function (_421) {
            return f(_421);
        };
    };
}, function (f) {
    return function (z) {
        return function (_420) {
            return f(z)(_420);
        };
    };
}, function (f) {
    return function (z) {
        return function (_419) {
            return f(_419)(z);
        };
    };
});
var foldableMaybe = new Foldable(function (__dict_Monoid_15) {
    return function (f) {
        return function (_400) {
            if (_400 instanceof Data_Maybe.Nothing) {
                return Data_Monoid.mempty(__dict_Monoid_15);
            };
            if (_400 instanceof Data_Maybe.Just) {
                return f(_400.value0);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs line 51, column 1 - line 59, column 1: " + [ f.constructor.name, _400.constructor.name ]);
        };
    };
}, function (f) {
    return function (z) {
        return function (_399) {
            if (_399 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (_399 instanceof Data_Maybe.Just) {
                return f(z)(_399.value0);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs line 51, column 1 - line 59, column 1: " + [ f.constructor.name, z.constructor.name, _399.constructor.name ]);
        };
    };
}, function (f) {
    return function (z) {
        return function (_398) {
            if (_398 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (_398 instanceof Data_Maybe.Just) {
                return f(_398.value0)(z);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs line 51, column 1 - line 59, column 1: " + [ f.constructor.name, z.constructor.name, _398.constructor.name ]);
        };
    };
});
var foldableDual = new Foldable(function (__dict_Monoid_16) {
    return function (f) {
        return function (_412) {
            return f(_412);
        };
    };
}, function (f) {
    return function (z) {
        return function (_411) {
            return f(z)(_411);
        };
    };
}, function (f) {
    return function (z) {
        return function (_410) {
            return f(_410)(z);
        };
    };
});
var foldableDisj = new Foldable(function (__dict_Monoid_17) {
    return function (f) {
        return function (_415) {
            return f(_415);
        };
    };
}, function (f) {
    return function (z) {
        return function (_414) {
            return f(z)(_414);
        };
    };
}, function (f) {
    return function (z) {
        return function (_413) {
            return f(_413)(z);
        };
    };
});
var foldableConj = new Foldable(function (__dict_Monoid_18) {
    return function (f) {
        return function (_418) {
            return f(_418);
        };
    };
}, function (f) {
    return function (z) {
        return function (_417) {
            return f(z)(_417);
        };
    };
}, function (f) {
    return function (z) {
        return function (_416) {
            return f(_416)(z);
        };
    };
});
var foldableArray = new Foldable(function (__dict_Monoid_19) {
    return function (f) {
        return function (xs) {
            return foldr(foldableArray)(function (x) {
                return function (acc) {
                    return Prelude["<>"](__dict_Monoid_19["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                };
            })(Data_Monoid.mempty(__dict_Monoid_19))(xs);
        };
    };
}, $foreign.foldlArray, $foreign.foldrArray);
var foldableAdditive = new Foldable(function (__dict_Monoid_20) {
    return function (f) {
        return function (_409) {
            return f(_409);
        };
    };
}, function (f) {
    return function (z) {
        return function (_408) {
            return f(z)(_408);
        };
    };
}, function (f) {
    return function (z) {
        return function (_407) {
            return f(_407)(z);
        };
    };
});
var foldMap = function (dict) {
    return dict.foldMap;
};
var foldableFirst = new Foldable(function (__dict_Monoid_21) {
    return function (f) {
        return function (_403) {
            return foldMap(foldableMaybe)(__dict_Monoid_21)(f)(_403);
        };
    };
}, function (f) {
    return function (z) {
        return function (_402) {
            return foldl(foldableMaybe)(f)(z)(_402);
        };
    };
}, function (f) {
    return function (z) {
        return function (_401) {
            return foldr(foldableMaybe)(f)(z)(_401);
        };
    };
});
var foldableLast = new Foldable(function (__dict_Monoid_22) {
    return function (f) {
        return function (_406) {
            return foldMap(foldableMaybe)(__dict_Monoid_22)(f)(_406);
        };
    };
}, function (f) {
    return function (z) {
        return function (_405) {
            return foldl(foldableMaybe)(f)(z)(_405);
        };
    };
}, function (f) {
    return function (z) {
        return function (_404) {
            return foldr(foldableMaybe)(f)(z)(_404);
        };
    };
});
var fold = function (__dict_Foldable_23) {
    return function (__dict_Monoid_24) {
        return foldMap(__dict_Foldable_23)(__dict_Monoid_24)(Prelude.id(Prelude.categoryFn));
    };
};
var find = function (__dict_Foldable_25) {
    return function (p) {
        return foldl(__dict_Foldable_25)(function (r) {
            return function (x) {
                var _1294 = p(x);
                if (_1294) {
                    return new Data_Maybe.Just(x);
                };
                if (!_1294) {
                    return r;
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs line 181, column 1 - line 182, column 1: " + [ _1294.constructor.name ]);
            };
        })(Data_Maybe.Nothing.value);
    };
};
var any = function (__dict_Foldable_26) {
    return function (__dict_BooleanAlgebra_27) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Disj.runDisj)(foldMap(__dict_Foldable_26)(Data_Monoid_Disj.monoidDisj(__dict_BooleanAlgebra_27))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Disj.Disj)(p)));
        };
    };
};
var elem = function (__dict_Foldable_28) {
    return function (__dict_Eq_29) {
        return Prelude["<<<"](Prelude.semigroupoidFn)(any(__dict_Foldable_28)(Prelude.booleanAlgebraBoolean))(Prelude["=="](__dict_Eq_29));
    };
};
var notElem = function (__dict_Foldable_30) {
    return function (__dict_Eq_31) {
        return function (x) {
            return Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.not(Prelude.booleanAlgebraBoolean))(elem(__dict_Foldable_30)(__dict_Eq_31)(x));
        };
    };
};
var or = function (__dict_Foldable_32) {
    return function (__dict_BooleanAlgebra_33) {
        return any(__dict_Foldable_32)(__dict_BooleanAlgebra_33)(Prelude.id(Prelude.categoryFn));
    };
};
var all = function (__dict_Foldable_34) {
    return function (__dict_BooleanAlgebra_35) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Conj.runConj)(foldMap(__dict_Foldable_34)(Data_Monoid_Conj.monoidConj(__dict_BooleanAlgebra_35))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Conj.Conj)(p)));
        };
    };
};
var and = function (__dict_Foldable_36) {
    return function (__dict_BooleanAlgebra_37) {
        return all(__dict_Foldable_36)(__dict_BooleanAlgebra_37)(Prelude.id(Prelude.categoryFn));
    };
};
module.exports = {
    Foldable: Foldable, 
    find: find, 
    notElem: notElem, 
    elem: elem, 
    product: product, 
    sum: sum, 
    all: all, 
    any: any, 
    or: or, 
    and: and, 
    intercalate: intercalate, 
    mconcat: mconcat, 
    sequence_: sequence_, 
    for_: for_, 
    traverse_: traverse_, 
    fold: fold, 
    foldMap: foldMap, 
    foldl: foldl, 
    foldr: foldr, 
    foldableArray: foldableArray, 
    foldableMaybe: foldableMaybe, 
    foldableFirst: foldableFirst, 
    foldableLast: foldableLast, 
    foldableAdditive: foldableAdditive, 
    foldableDual: foldableDual, 
    foldableDisj: foldableDisj, 
    foldableConj: foldableConj, 
    foldableMultiplicative: foldableMultiplicative
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/foreign.js","Control.Apply":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Apply/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Maybe.First":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe.First/index.js","Data.Maybe.Last":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe.Last/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Monoid.Additive":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Additive/index.js","Data.Monoid.Conj":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Conj/index.js","Data.Monoid.Disj":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Disj/index.js","Data.Monoid.Dual":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Dual/index.js","Data.Monoid.Multiplicative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Multiplicative/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Foreign = require("Data.Foreign");
var Data_Traversable = require("Data.Traversable");
var Data_Array = require("Data.Array");
var Data_Foreign_Null = require("Data.Foreign.Null");
var Data_Foreign_Undefined = require("Data.Foreign.Undefined");
var Data_Foreign_NullOrUndefined = require("Data.Foreign.NullOrUndefined");
var Data_Either = require("Data.Either");
var Data_Foreign_Index = require("Data.Foreign.Index");
var Data_Int = require("Data.Int");
var IsForeign = function (read) {
    this.read = read;
};
var stringIsForeign = new IsForeign(Data_Foreign.readString);
var read = function (dict) {
    return dict.read;
};
var readJSON = function (__dict_IsForeign_0) {
    return function (json) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.parseJSON(json))(read(__dict_IsForeign_0));
    };
};
var readWith = function (__dict_IsForeign_1) {
    return function (f) {
        return function (value) {
            return Data_Either.either(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Left.create)(f))(Data_Either.Right.create)(read(__dict_IsForeign_1)(value));
        };
    };
};
var readProp = function (__dict_IsForeign_2) {
    return function (__dict_Index_3) {
        return function (prop) {
            return function (value) {
                return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index["!"](__dict_Index_3)(value)(prop))(readWith(__dict_IsForeign_2)(Data_Foreign_Index.errorAt(__dict_Index_3)(prop)));
            };
        };
    };
};
var undefinedIsForeign = function (__dict_IsForeign_4) {
    return new IsForeign(Data_Foreign_Undefined.readUndefined(read(__dict_IsForeign_4)));
};
var numberIsForeign = new IsForeign(Data_Foreign.readNumber);
var nullOrUndefinedIsForeign = function (__dict_IsForeign_5) {
    return new IsForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(read(__dict_IsForeign_5)));
};
var nullIsForeign = function (__dict_IsForeign_6) {
    return new IsForeign(Data_Foreign_Null.readNull(read(__dict_IsForeign_6)));
};
var intIsForeign = new IsForeign(Data_Foreign.readInt);
var foreignIsForeign = new IsForeign(function (f) {
    return Prelude["return"](Data_Either.applicativeEither)(f);
});
var charIsForeign = new IsForeign(Data_Foreign.readChar);
var booleanIsForeign = new IsForeign(Data_Foreign.readBoolean);
var arrayIsForeign = function (__dict_IsForeign_7) {
    return new IsForeign(function (value) {
        var readElement = function (i) {
            return function (value_1) {
                return readWith(__dict_IsForeign_7)(Data_Foreign.ErrorAtIndex.create(i))(value_1);
            };
        };
        var readElements = function (arr) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Array.zipWith(readElement)(Data_Array.range(Prelude.zero(Prelude.semiringInt))(Data_Array.length(arr)))(arr));
        };
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.readArray(value))(readElements);
    });
};
module.exports = {
    IsForeign: IsForeign, 
    readProp: readProp, 
    readWith: readWith, 
    readJSON: readJSON, 
    read: read, 
    foreignIsForeign: foreignIsForeign, 
    stringIsForeign: stringIsForeign, 
    charIsForeign: charIsForeign, 
    booleanIsForeign: booleanIsForeign, 
    numberIsForeign: numberIsForeign, 
    intIsForeign: intIsForeign, 
    arrayIsForeign: arrayIsForeign, 
    nullIsForeign: nullIsForeign, 
    undefinedIsForeign: undefinedIsForeign, 
    nullOrUndefinedIsForeign: nullOrUndefinedIsForeign
};

},{"Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign/index.js","Data.Foreign.Index":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign.Index/index.js","Data.Foreign.Null":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign.Null/index.js","Data.Foreign.NullOrUndefined":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign.NullOrUndefined/index.js","Data.Foreign.Undefined":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign.Undefined/index.js","Data.Int":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign.Index/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foreign.Index

// jshint maxparams: 4
exports.unsafeReadPropImpl = function (f, s, key, value) {
  return value == null ? f : s(value[key]);
};

// jshint maxparams: 2
exports.unsafeHasOwnProperty = function (prop, value) {
  return Object.prototype.hasOwnProperty.call(value, prop);
};

exports.unsafeHasProperty = function (prop, value) {
  return prop in value;
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign.Index/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("Data.Function");
var Data_Foreign = require("Data.Foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Int = require("Data.Int");
var Index = function (errorAt, hasOwnProperty, hasProperty, ix) {
    this.errorAt = errorAt;
    this.hasOwnProperty = hasOwnProperty;
    this.hasProperty = hasProperty;
    this.ix = ix;
};
var unsafeReadProp = function (k) {
    return function (value) {
        return $foreign.unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
    };
};
var prop = unsafeReadProp;
var ix = function (dict) {
    return dict.ix;
};
var $bang = function (__dict_Index_0) {
    return ix(__dict_Index_0);
};
var index = unsafeReadProp;
var hasPropertyImpl = function (p) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Prelude["||"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("object"))(Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("function"))) {
            return $foreign.unsafeHasProperty(p, value);
        };
        return false;
    };
};
var hasProperty = function (dict) {
    return dict.hasProperty;
};
var hasOwnPropertyImpl = function (p) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Prelude["||"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("object"))(Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("function"))) {
            return $foreign.unsafeHasOwnProperty(p, value);
        };
        return false;
    };
};
var indexInt = new Index(Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl, Prelude.flip(index));
var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Prelude.flip(prop));
var hasOwnProperty = function (dict) {
    return dict.hasOwnProperty;
};
var errorAt = function (dict) {
    return dict.errorAt;
};
module.exports = {
    Index: Index, 
    errorAt: errorAt, 
    hasOwnProperty: hasOwnProperty, 
    hasProperty: hasProperty, 
    "!": $bang, 
    ix: ix, 
    index: index, 
    prop: prop, 
    indexString: indexString, 
    indexInt: indexInt
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign.Index/foreign.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.Int":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign.Null/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_Foreign = require("Data.Foreign");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Null = function (x) {
    return x;
};
var runNull = function (_501) {
    return _501;
};
var readNull = function (f) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidFn)(Null)(Data_Maybe.Just.create))(f(value));
    };
};
module.exports = {
    Null: Null, 
    readNull: readNull, 
    runNull: runNull
};

},{"Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign.NullOrUndefined/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Foreign = require("Data.Foreign");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var NullOrUndefined = function (x) {
    return x;
};
var runNullOrUndefined = function (_502) {
    return _502;
};
var readNullOrUndefined = function (f) {
    return function (value) {
        if (Prelude["||"](Prelude.booleanAlgebraBoolean)(Data_Foreign.isNull(value))(Data_Foreign.isUndefined(value))) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidFn)(NullOrUndefined)(Data_Maybe.Just.create))(f(value));
    };
};
module.exports = {
    NullOrUndefined: NullOrUndefined, 
    readNullOrUndefined: readNullOrUndefined, 
    runNullOrUndefined: runNullOrUndefined
};

},{"Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign.Undefined/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_Foreign = require("Data.Foreign");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Undefined = function (x) {
    return x;
};
var runUndefined = function (_503) {
    return _503;
};
var readUndefined = function (f) {
    return function (value) {
        if (Data_Foreign.isUndefined(value)) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidFn)(Undefined)(Data_Maybe.Just.create))(f(value));
    };
};
module.exports = {
    Undefined: Undefined, 
    readUndefined: readUndefined, 
    runUndefined: runUndefined
};

},{"Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foreign

// jshint maxparams: 3
exports.parseJSONImpl = function (left, right, str) {
  try {
    return right(JSON.parse(str));
  } catch (e) {
    return left(e.toString());
  }
};

// jshint maxparams: 1
exports.toForeign = function (value) {
  return value;
};

exports.unsafeFromForeign = function (value) {
  return value;
};

exports.typeOf = function (value) {
  return typeof value;
};

exports.tagOf = function (value) {
  return Object.prototype.toString.call(value).slice(8, -1);
};

exports.isNull = function (value) {
  return value === null;
};

exports.isUndefined = function (value) {
  return value === undefined;
};

exports.isArray = Array.isArray || function (value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
var Data_String = require("Data.String");
var Data_Either = require("Data.Either");
var Data_Int = require("Data.Int");
var TypeMismatch = (function () {
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    return TypeMismatch;
})();
var ErrorAtIndex = (function () {
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    return ErrorAtIndex;
})();
var ErrorAtProperty = (function () {
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    return ErrorAtProperty;
})();
var JSONError = (function () {
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    return JSONError;
})();
var unsafeReadTagged = function (tag) {
    return function (value) {
        if (Prelude["=="](Prelude.eqString)($foreign.tagOf(value))(tag)) {
            return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
        };
        return new Data_Either.Left(new TypeMismatch(tag, $foreign.tagOf(value)));
    };
};
var showForeignError = new Prelude.Show(function (_498) {
    if (_498 instanceof TypeMismatch) {
        return "Type mismatch: expected " + (_498.value0 + (", found " + _498.value1));
    };
    if (_498 instanceof ErrorAtIndex) {
        return "Error at array index " + (Prelude.show(Prelude.showInt)(_498.value0) + (": " + Prelude.show(showForeignError)(_498.value1)));
    };
    if (_498 instanceof ErrorAtProperty) {
        return "Error at property " + (Prelude.show(Prelude.showString)(_498.value0) + (": " + Prelude.show(showForeignError)(_498.value1)));
    };
    if (_498 instanceof JSONError) {
        return "JSON error: " + _498.value0;
    };
    throw new Error("Failed pattern match: " + [ _498.constructor.name ]);
});
var readString = unsafeReadTagged("String");
var readNumber = unsafeReadTagged("Number");
var readInt = function (value) {
    var error = Data_Either.Left.create(new TypeMismatch("Int", $foreign.tagOf(value)));
    var fromNumber = Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.maybe(error)(Prelude.pure(Data_Either.applicativeEither)))(Data_Int.fromNumber);
    return Data_Either.either(Prelude["const"](error))(fromNumber)(readNumber(value));
};
var readChar = function (value) {
    var error = Data_Either.Left.create(new TypeMismatch("Char", $foreign.tagOf(value)));
    var fromString = Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.maybe(error)(Prelude.pure(Data_Either.applicativeEither)))(Data_String.toChar);
    return Data_Either.either(Prelude["const"](error))(fromString)(readString(value));
};
var readBoolean = unsafeReadTagged("Boolean");
var readArray = function (value) {
    if ($foreign.isArray(value)) {
        return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
    };
    return new Data_Either.Left(new TypeMismatch("array", $foreign.tagOf(value)));
};
var parseJSON = function (json) {
    return $foreign.parseJSONImpl(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Left.create)(JSONError.create), Data_Either.Right.create, json);
};
var eqForeignError = new Prelude.Eq(function (_499) {
    return function (_500) {
        if (_499 instanceof TypeMismatch && _500 instanceof TypeMismatch) {
            return Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqString)(_499.value0)(_500.value0))(Prelude["=="](Prelude.eqString)(_499.value1)(_500.value1));
        };
        if (_499 instanceof ErrorAtIndex && _500 instanceof ErrorAtIndex) {
            return Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqInt)(_499.value0)(_500.value0))(Prelude["=="](eqForeignError)(_499.value1)(_500.value1));
        };
        if (_499 instanceof ErrorAtProperty && _500 instanceof ErrorAtProperty) {
            return Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqString)(_499.value0)(_500.value0))(Prelude["=="](eqForeignError)(_499.value1)(_500.value1));
        };
        if (_499 instanceof JSONError && _500 instanceof JSONError) {
            return Prelude["=="](Prelude.eqString)(_499.value0)(_500.value0);
        };
        return false;
    };
});
module.exports = {
    TypeMismatch: TypeMismatch, 
    ErrorAtIndex: ErrorAtIndex, 
    ErrorAtProperty: ErrorAtProperty, 
    JSONError: JSONError, 
    readArray: readArray, 
    readInt: readInt, 
    readNumber: readNumber, 
    readBoolean: readBoolean, 
    readChar: readChar, 
    readString: readString, 
    unsafeReadTagged: unsafeReadTagged, 
    parseJSON: parseJSON, 
    showForeignError: showForeignError, 
    eqForeignError: eqForeignError, 
    isArray: $foreign.isArray, 
    isUndefined: $foreign.isUndefined, 
    isNull: $foreign.isNull, 
    tagOf: $foreign.tagOf, 
    typeOf: $foreign.typeOf, 
    unsafeFromForeign: $foreign.unsafeFromForeign, 
    toForeign: $foreign.toForeign
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign/foreign.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.Int":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.String":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Function

exports.mkFn0 = function (fn) {
  return function () {
    return fn({});
  };
};

exports.mkFn1 = function (fn) {
  return function (a) {
    return fn(a);
  };
};

exports.mkFn2 = function (fn) {
  /* jshint maxparams: 2 */
  return function (a, b) {
    return fn(a)(b);
  };
};

exports.mkFn3 = function (fn) {
  /* jshint maxparams: 3 */
  return function (a, b, c) {
    return fn(a)(b)(c);
  };
};

exports.mkFn4 = function (fn) {
  /* jshint maxparams: 4 */
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d);
  };
};

exports.mkFn5 = function (fn) {
  /* jshint maxparams: 5 */
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e);
  };
};

exports.mkFn6 = function (fn) {
  /* jshint maxparams: 6 */
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f);
  };
};

exports.mkFn7 = function (fn) {
  /* jshint maxparams: 7 */
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g);
  };
};

exports.mkFn8 = function (fn) {
  /* jshint maxparams: 8 */
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h);
  };
};

exports.mkFn9 = function (fn) {
  /* jshint maxparams: 9 */
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
  };
};

exports.mkFn10 = function (fn) {
  /* jshint maxparams: 10 */
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
  };
};

exports.runFn0 = function (fn) {
  return fn();
};

exports.runFn1 = function (fn) {
  return function (a) {
    return fn(a);
  };
};

exports.runFn2 = function (fn) {
  return function (a) {
    return function (b) {
      return fn(a, b);
    };
  };
};

exports.runFn3 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return fn(a, b, c);
      };
    };
  };
};

exports.runFn4 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

exports.runFn5 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return fn(a, b, c, d, e);
          };
        };
      };
    };
  };
};

exports.runFn6 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return fn(a, b, c, d, e, f);
            };
          };
        };
      };
    };
  };
};

exports.runFn7 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return fn(a, b, c, d, e, f, g);
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn8 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return fn(a, b, c, d, e, f, g, h);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn9 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return fn(a, b, c, d, e, f, g, h, i);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn10 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return fn(a, b, c, d, e, f, g, h, i, j);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var on = function (f) {
    return function (g) {
        return function (x) {
            return function (y) {
                return f(g(x))(g(y));
            };
        };
    };
};
module.exports = {
    on: on, 
    runFn10: $foreign.runFn10, 
    runFn9: $foreign.runFn9, 
    runFn8: $foreign.runFn8, 
    runFn7: $foreign.runFn7, 
    runFn6: $foreign.runFn6, 
    runFn5: $foreign.runFn5, 
    runFn4: $foreign.runFn4, 
    runFn3: $foreign.runFn3, 
    runFn2: $foreign.runFn2, 
    runFn1: $foreign.runFn1, 
    runFn0: $foreign.runFn0, 
    mkFn10: $foreign.mkFn10, 
    mkFn9: $foreign.mkFn9, 
    mkFn8: $foreign.mkFn8, 
    mkFn7: $foreign.mkFn7, 
    mkFn6: $foreign.mkFn6, 
    mkFn5: $foreign.mkFn5, 
    mkFn4: $foreign.mkFn4, 
    mkFn3: $foreign.mkFn3, 
    mkFn2: $foreign.mkFn2, 
    mkFn1: $foreign.mkFn1, 
    mkFn0: $foreign.mkFn0
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/foreign.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Contravariant/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Contravariant = function (cmap) {
    this.cmap = cmap;
};
var cmap = function (dict) {
    return dict.cmap;
};
var $greater$dollar$less = function (__dict_Contravariant_0) {
    return cmap(__dict_Contravariant_0);
};
var $greater$hash$less = function (__dict_Contravariant_1) {
    return function (x) {
        return function (f) {
            return $greater$dollar$less(__dict_Contravariant_1)(f)(x);
        };
    };
};
module.exports = {
    Contravariant: Contravariant, 
    ">#<": $greater$hash$less, 
    ">$<": $greater$dollar$less, 
    cmap: cmap
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Coproduct/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Foldable = require("Data.Foldable");
var Data_Traversable = require("Data.Traversable");
var Coproduct = function (x) {
    return x;
};
var runCoproduct = function (_505) {
    return _505;
};
var right = Prelude["<<<"](Prelude.semigroupoidFn)(Coproduct)(Data_Either.Right.create);
var left = Prelude["<<<"](Prelude.semigroupoidFn)(Coproduct)(Data_Either.Left.create);
var coproduct = function (f) {
    return function (g) {
        return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.either(f)(g))(runCoproduct);
    };
};
var foldableCoproduct = function (__dict_Foldable_0) {
    return function (__dict_Foldable_1) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_2) {
            return function (f) {
                return coproduct(Data_Foldable.foldMap(__dict_Foldable_0)(__dict_Monoid_2)(f))(Data_Foldable.foldMap(__dict_Foldable_1)(__dict_Monoid_2)(f));
            };
        }, function (f) {
            return function (z) {
                return coproduct(Data_Foldable.foldl(__dict_Foldable_0)(f)(z))(Data_Foldable.foldl(__dict_Foldable_1)(f)(z));
            };
        }, function (f) {
            return function (z) {
                return coproduct(Data_Foldable.foldr(__dict_Foldable_0)(f)(z))(Data_Foldable.foldr(__dict_Foldable_1)(f)(z));
            };
        });
    };
};
var functorCoproduct = function (__dict_Functor_3) {
    return function (__dict_Functor_4) {
        return new Prelude.Functor(function (f) {
            return Prelude["<<<"](Prelude.semigroupoidFn)(Coproduct)(coproduct(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Left.create)(Prelude["<$>"](__dict_Functor_3)(f)))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Right.create)(Prelude["<$>"](__dict_Functor_4)(f))));
        });
    };
};
var traversableCoproduct = function (__dict_Traversable_5) {
    return function (__dict_Traversable_6) {
        return new Data_Traversable.Traversable(function () {
            return foldableCoproduct(__dict_Traversable_5["__superclass_Data.Foldable.Foldable_1"]())(__dict_Traversable_6["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return functorCoproduct(__dict_Traversable_5["__superclass_Prelude.Functor_0"]())(__dict_Traversable_6["__superclass_Prelude.Functor_0"]());
        }, function (__dict_Applicative_8) {
            return coproduct(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["<$>"]((__dict_Applicative_8["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidFn)(Coproduct)(Data_Either.Left.create)))(Data_Traversable.sequence(__dict_Traversable_5)(__dict_Applicative_8)))(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["<$>"]((__dict_Applicative_8["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidFn)(Coproduct)(Data_Either.Right.create)))(Data_Traversable.sequence(__dict_Traversable_6)(__dict_Applicative_8)));
        }, function (__dict_Applicative_7) {
            return function (f) {
                return coproduct(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["<$>"]((__dict_Applicative_7["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidFn)(Coproduct)(Data_Either.Left.create)))(Data_Traversable.traverse(__dict_Traversable_5)(__dict_Applicative_7)(f)))(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["<$>"]((__dict_Applicative_7["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidFn)(Coproduct)(Data_Either.Right.create)))(Data_Traversable.traverse(__dict_Traversable_6)(__dict_Applicative_7)(f)));
            };
        });
    };
};
module.exports = {
    Coproduct: Coproduct, 
    coproduct: coproduct, 
    right: right, 
    left: left, 
    runCoproduct: runCoproduct, 
    functorCoproduct: functorCoproduct, 
    foldableCoproduct: foldableCoproduct, 
    traversableCoproduct: traversableCoproduct
};

},{"Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Invariant/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Invariant = function (imap) {
    this.imap = imap;
};
var imapF = function (__dict_Functor_0) {
    return Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["const"])(Prelude.map(__dict_Functor_0));
};
var invariantArray = new Invariant(imapF(Prelude.functorArray));
var invariantFn = new Invariant(imapF(Prelude.functorFn));
var imap = function (dict) {
    return dict.imap;
};
module.exports = {
    Invariant: Invariant, 
    imapF: imapF, 
    imap: imap, 
    invariantFn: invariantFn, 
    invariantArray: invariantArray
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var $less$dollar = function (__dict_Functor_0) {
    return function (x) {
        return function (f) {
            return Prelude["<$>"](__dict_Functor_0)(Prelude["const"](x))(f);
        };
    };
};
var $dollar$greater = function (__dict_Functor_1) {
    return function (f) {
        return function (x) {
            return Prelude["<$>"](__dict_Functor_1)(Prelude["const"](x))(f);
        };
    };
};
module.exports = {
    "$>": $dollar$greater, 
    "<$": $less$dollar
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Identity/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Foldable = require("Data.Foldable");
var Data_Traversable = require("Data.Traversable");
var Identity = function (x) {
    return x;
};
var showIdentity = function (__dict_Show_2) {
    return new Prelude.Show(function (_528) {
        return "Identity (" + (Prelude.show(__dict_Show_2)(_528) + ")");
    });
};
var semiringIdentity = function (__dict_Semiring_3) {
    return new Prelude.Semiring(function (_518) {
        return function (_519) {
            return Prelude["+"](__dict_Semiring_3)(_518)(_519);
        };
    }, function (_520) {
        return function (_521) {
            return Prelude["*"](__dict_Semiring_3)(_520)(_521);
        };
    }, Prelude.one(__dict_Semiring_3), Prelude.zero(__dict_Semiring_3));
};
var semigroupIdenity = function (__dict_Semigroup_4) {
    return new Prelude.Semigroup(function (_516) {
        return function (_517) {
            return Prelude["<>"](__dict_Semigroup_4)(_516)(_517);
        };
    });
};
var runIdentity = function (_506) {
    return _506;
};
var ringIdentity = function (__dict_Ring_5) {
    return new Prelude.Ring(function () {
        return semiringIdentity(__dict_Ring_5["__superclass_Prelude.Semiring_0"]());
    }, function (_526) {
        return function (_527) {
            return Prelude["-"](__dict_Ring_5)(_526)(_527);
        };
    });
};
var monoidIdentity = function (__dict_Monoid_8) {
    return new Data_Monoid.Monoid(function () {
        return semigroupIdenity(__dict_Monoid_8["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(__dict_Monoid_8));
};
var moduloSemiringIdentity = function (__dict_ModuloSemiring_9) {
    return new Prelude.ModuloSemiring(function () {
        return semiringIdentity(__dict_ModuloSemiring_9["__superclass_Prelude.Semiring_0"]());
    }, function (_524) {
        return function (_525) {
            return Prelude["/"](__dict_ModuloSemiring_9)(_524)(_525);
        };
    }, function (_522) {
        return function (_523) {
            return Prelude.mod(__dict_ModuloSemiring_9)(_522)(_523);
        };
    });
};
var functorIdentity = new Prelude.Functor(function (f) {
    return function (_529) {
        return f(_529);
    };
});
var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
var foldableIdentity = new Data_Foldable.Foldable(function (__dict_Monoid_10) {
    return function (f) {
        return function (_536) {
            return f(_536);
        };
    };
}, function (f) {
    return function (z) {
        return function (_535) {
            return f(z)(_535);
        };
    };
}, function (f) {
    return function (z) {
        return function (_534) {
            return f(_534)(z);
        };
    };
});
var traversableIdentity = new Data_Traversable.Traversable(function () {
    return foldableIdentity;
}, function () {
    return functorIdentity;
}, function (__dict_Applicative_1) {
    return function (_538) {
        return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity)(_538);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_537) {
            return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity)(f(_537));
        };
    };
});
var extendIdentity = new Control_Extend.Extend(function () {
    return functorIdentity;
}, function (f) {
    return function (m) {
        return f(m);
    };
});
var eqIdentity = function (__dict_Eq_11) {
    return new Prelude.Eq(function (_507) {
        return function (_508) {
            return Prelude["=="](__dict_Eq_11)(_507)(_508);
        };
    });
};
var ordIdentity = function (__dict_Ord_6) {
    return new Prelude.Ord(function () {
        return eqIdentity(__dict_Ord_6["__superclass_Prelude.Eq_0"]());
    }, function (_509) {
        return function (_510) {
            return Prelude.compare(__dict_Ord_6)(_509)(_510);
        };
    });
};
var divisionRingIdentity = function (__dict_DivisionRing_12) {
    return new Prelude.DivisionRing(function () {
        return moduloSemiringIdentity(__dict_DivisionRing_12["__superclass_Prelude.ModuloSemiring_1"]());
    }, function () {
        return ringIdentity(__dict_DivisionRing_12["__superclass_Prelude.Ring_0"]());
    });
};
var numIdentity = function (__dict_Num_7) {
    return new Prelude.Num(function () {
        return divisionRingIdentity(__dict_Num_7["__superclass_Prelude.DivisionRing_0"]());
    });
};
var comonadIdentity = new Control_Comonad.Comonad(function () {
    return extendIdentity;
}, function (_533) {
    return _533;
});
var boundedIdentity = function (__dict_Bounded_14) {
    return new Prelude.Bounded(Prelude.bottom(__dict_Bounded_14), Prelude.top(__dict_Bounded_14));
};
var boundedOrdIdentity = function (__dict_BoundedOrd_13) {
    return new Prelude.BoundedOrd(function () {
        return boundedIdentity(__dict_BoundedOrd_13["__superclass_Prelude.Bounded_0"]());
    }, function () {
        return ordIdentity(__dict_BoundedOrd_13["__superclass_Prelude.Ord_1"]());
    });
};
var booleanAlgebraIdentity = function (__dict_BooleanAlgebra_15) {
    return new Prelude.BooleanAlgebra(function () {
        return boundedIdentity(__dict_BooleanAlgebra_15["__superclass_Prelude.Bounded_0"]());
    }, function (_511) {
        return function (_512) {
            return Prelude.conj(__dict_BooleanAlgebra_15)(_511)(_512);
        };
    }, function (_513) {
        return function (_514) {
            return Prelude.disj(__dict_BooleanAlgebra_15)(_513)(_514);
        };
    }, function (_515) {
        return Prelude.not(__dict_BooleanAlgebra_15)(_515);
    });
};
var applyIdentity = new Prelude.Apply(function () {
    return functorIdentity;
}, function (_530) {
    return function (_531) {
        return _530(_531);
    };
});
var bindIdentity = new Prelude.Bind(function () {
    return applyIdentity;
}, function (_532) {
    return function (f) {
        return f(_532);
    };
});
var applicativeIdentity = new Prelude.Applicative(function () {
    return applyIdentity;
}, Identity);
var monadIdentity = new Prelude.Monad(function () {
    return applicativeIdentity;
}, function () {
    return bindIdentity;
});
module.exports = {
    Identity: Identity, 
    runIdentity: runIdentity, 
    eqIdentity: eqIdentity, 
    ordIdentity: ordIdentity, 
    boundedIdentity: boundedIdentity, 
    boundedOrdIdentity: boundedOrdIdentity, 
    booleanAlgebraIdentity: booleanAlgebraIdentity, 
    semigroupIdenity: semigroupIdenity, 
    monoidIdentity: monoidIdentity, 
    semiringIdentity: semiringIdentity, 
    moduloSemiringIdentity: moduloSemiringIdentity, 
    ringIdentity: ringIdentity, 
    divisionRingIdentity: divisionRingIdentity, 
    numIdentity: numIdentity, 
    showIdentity: showIdentity, 
    functorIdentity: functorIdentity, 
    invariantIdentity: invariantIdentity, 
    applyIdentity: applyIdentity, 
    applicativeIdentity: applicativeIdentity, 
    bindIdentity: bindIdentity, 
    monadIdentity: monadIdentity, 
    extendIdentity: extendIdentity, 
    comonadIdentity: comonadIdentity, 
    foldableIdentity: foldableIdentity, 
    traversableIdentity: traversableIdentity
};

},{"Control.Comonad":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Comonad/index.js","Control.Extend":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Extend/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Functor.Invariant":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Inject/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Functor_Coproduct = require("Data.Functor.Coproduct");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Inject = function (inj, prj) {
    this.inj = inj;
    this.prj = prj;
};
var prj = function (dict) {
    return dict.prj;
};
var injectReflexive = new Inject(Prelude.id(Prelude.categoryFn), Data_Maybe.Just.create);
var injectLeft = new Inject(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Functor_Coproduct.Coproduct)(Data_Either.Left.create), Data_Functor_Coproduct.coproduct(Data_Maybe.Just.create)(Prelude["const"](Data_Maybe.Nothing.value)));
var inj = function (dict) {
    return dict.inj;
};
var injectRight = function (__dict_Inject_0) {
    return new Inject(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Functor_Coproduct.Coproduct)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Right.create)(inj(__dict_Inject_0))), Data_Functor_Coproduct.coproduct(Prelude["const"](Data_Maybe.Nothing.value))(prj(__dict_Inject_0)));
};
module.exports = {
    Inject: Inject, 
    prj: prj, 
    inj: inj, 
    injectReflexive: injectReflexive, 
    injectLeft: injectLeft, 
    injectRight: injectRight
};

},{"Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Functor.Coproduct":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Coproduct/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int.Bits/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Int.Bits

exports.andImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 & n2;
  };
};

exports.orImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 | n2;
  };
};

exports.xorImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 ^ n2;
  };
};

exports.shl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 << n2;
  };
};

exports.shr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >> n2;
  };
};

exports.zshr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >>> n2;
  };
};

exports.complement = function (n) {
  /* jshint bitwise: false */
  return ~n;
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int.Bits/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var $dot$bar$dot = $foreign.orImpl;
var $dot$up$dot = $foreign.xorImpl;
var $dot$amp$dot = $foreign.andImpl;
module.exports = {
    ".^.": $dot$up$dot, 
    ".|.": $dot$bar$dot, 
    ".&.": $dot$amp$dot, 
    complement: $foreign.complement, 
    zshr: $foreign.zshr, 
    shr: $foreign.shr, 
    shl: $foreign.shl
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int.Bits/foreign.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Int

exports.fromNumberImpl = function (just) {
  return function (nothing) {
    return function (n) {
      /* jshint bitwise: false */
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};

exports.toNumber = function (n) {
  return n;
};

exports.fromStringImpl = function (just) {
  return function (nothing) {
    return function (s) {
      /* jshint bitwise: false */
      var i = parseFloat(s);
      return (i | 0) === i ? just(i) : nothing;
    };
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var $$Math = require("Math");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Int_Bits = require("Data.Int.Bits");
var Data_Maybe = require("Data.Maybe");
var odd = function (x) {
    return Prelude["/="](Prelude.eqInt)(x & 1)(0);
};
var fromString = $foreign.fromStringImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeClamp = function (x) {
    if (x >= $foreign.toNumber(Prelude.top(Prelude.boundedInt))) {
        return Prelude.top(Prelude.boundedInt);
    };
    if (x <= $foreign.toNumber(Prelude.bottom(Prelude.boundedInt))) {
        return Prelude.bottom(Prelude.boundedInt);
    };
    if (Prelude.otherwise) {
        return Data_Maybe_Unsafe.fromJust(fromNumber(x));
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-integers/src/Data/Int.purs line 48, column 1 - line 49, column 1: " + [ x.constructor.name ]);
};
var round = Prelude["<<<"](Prelude.semigroupoidFn)(unsafeClamp)($$Math.round);
var floor = Prelude["<<<"](Prelude.semigroupoidFn)(unsafeClamp)($$Math.floor);
var even = function (x) {
    return Prelude["=="](Prelude.eqInt)(x & 1)(0);
};
var ceil = Prelude["<<<"](Prelude.semigroupoidFn)(unsafeClamp)($$Math.ceil);
module.exports = {
    odd: odd, 
    even: even, 
    fromString: fromString, 
    round: round, 
    floor: floor, 
    ceil: ceil, 
    fromNumber: fromNumber, 
    toNumber: $foreign.toNumber
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int/foreign.js","Data.Int.Bits":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int.Bits/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Maybe.Unsafe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe.Unsafe/index.js","Math":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Math/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.JSON/foreign.js":[function(require,module,exports){
  /* global exports */
"use strict";

// module Data.JSON

exports.jsonParseImpl = function jsonParseImpl(left, right, string) {
    try       { return right(JSON.parse(string)); }
    catch (e) { return left(e.toString()); }
};

exports.jsonToValueImpl = function jsonToValueImpl(auxes, ctors) {
    var left   = auxes.left;
    var right  = auxes.right;
    var either = auxes.either;
    var insert = auxes.insert;
    var empty  = auxes.empty;
    var Null   = ctors.null;
    var Number = ctors.number;
    var Int    = ctors.int;
    var Bool   = ctors.bool;
    var String = ctors.string;
    var Array  = ctors.array;
    var Object = ctors.object;
    var parse  = function(json) {
        var typ = Object.prototype.toString.call(json).slice(8,-1);
        if (typ === 'Number') {
            return right((json | 0) === json ? Int(json) : Number(json));
        } else if (typ === 'Boolean') {
            return right(Bool(json));
        } else if (typ === 'String') {
            return right(String(json));
        } else if (typ === 'Null') {
            return right(Null);
        } else if (typ === 'Array') {
            var ary = [];
            for(var i = 0; i < json.length; i++) {
                either
                    (function(l){return left(l)})
                    (function(r){ary.push(r)})
                    (parse(json[i]))
            }
            return right(Array(ary));
        } else if (typ === 'Object') {
            var obj = empty;
            for(var k in json) {
                either
                    (function(l){return left(l)})
                    (function(r){obj = insert(k)(r)(obj)})
                    (parse(json[k]));
            }
            return right(Object(obj));
        } else {
            return left('unknown type: ' + typ);
        }
   };
   return parse;
};

exports.jsNull = null;

exports.unsafeCoerce = function unsafeCoerce(a) {
  return a;
};

exports.objToHash = function objToHash(valueToJSONImpl, fst, snd, obj) {
    var hash = {};
    for(var i = 0; i < obj.length; i++) {
        hash[fst(obj[i])] = valueToJSONImpl(snd(obj[i]));
    }
    return hash;
};

exports.jsonStringify = function jsonStringify(json) {
  return JSON.stringify(json);
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.JSON/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Int = require("Data.Int");
var Data_Maybe = require("Data.Maybe");
var Data_Traversable = require("Data.Traversable");
var Data_List = require("Data.List");
var Data_Map = require("Data.Map");
var Data_Set = require("Data.Set");
var Data_Function = require("Data.Function");
var Data_Either = require("Data.Either");
var Data_Tuple = require("Data.Tuple");
var Data_Unfoldable = require("Data.Unfoldable");
var Data_Foldable = require("Data.Foldable");
var JObject = (function () {
    function JObject(value0) {
        this.value0 = value0;
    };
    JObject.create = function (value0) {
        return new JObject(value0);
    };
    return JObject;
})();
var JArray = (function () {
    function JArray(value0) {
        this.value0 = value0;
    };
    JArray.create = function (value0) {
        return new JArray(value0);
    };
    return JArray;
})();
var JString = (function () {
    function JString(value0) {
        this.value0 = value0;
    };
    JString.create = function (value0) {
        return new JString(value0);
    };
    return JString;
})();
var JNumber = (function () {
    function JNumber(value0) {
        this.value0 = value0;
    };
    JNumber.create = function (value0) {
        return new JNumber(value0);
    };
    return JNumber;
})();
var JInt = (function () {
    function JInt(value0) {
        this.value0 = value0;
    };
    JInt.create = function (value0) {
        return new JInt(value0);
    };
    return JInt;
})();
var JBool = (function () {
    function JBool(value0) {
        this.value0 = value0;
    };
    JBool.create = function (value0) {
        return new JBool(value0);
    };
    return JBool;
})();
var JNull = (function () {
    function JNull() {

    };
    JNull.value = new JNull();
    return JNull;
})();
var FromJSON = function (parseJSON) {
    this.parseJSON = parseJSON;
};
var ToJSON = function (toJSON) {
    this.toJSON = toJSON;
};
var $dot$bang$eq = function (pmval) {
    return function (val) {
        return Prelude["<$>"](Data_Either.functorEither)(Data_Maybe.fromMaybe(val))(pmval);
    };
};
var valueToJSONImpl = function (_491) {
    if (_491 instanceof JObject) {
        return $foreign.objToHash(valueToJSONImpl, Data_Tuple.fst, Data_Tuple.snd, Data_List.fromList(Data_Unfoldable.unfoldableArray)(Data_Map.toList(_491.value0)));
    };
    if (_491 instanceof JArray) {
        return $foreign.unsafeCoerce(Prelude["<$>"](Prelude.functorArray)(valueToJSONImpl)(_491.value0));
    };
    if (_491 instanceof JString) {
        return $foreign.unsafeCoerce(_491.value0);
    };
    if (_491 instanceof JNumber) {
        return $foreign.unsafeCoerce(_491.value0);
    };
    if (_491 instanceof JInt) {
        return $foreign.unsafeCoerce(_491.value0);
    };
    if (_491 instanceof JBool) {
        return $foreign.unsafeCoerce(_491.value0);
    };
    if (_491 instanceof JNull) {
        return $foreign.jsNull;
    };
    throw new Error("Failed pattern match: " + [ _491.constructor.name ]);
};
var valueToString = function (v) {
    return $foreign.jsonStringify(valueToJSONImpl(v));
};
var valueToJSON = new ToJSON(Prelude.id(Prelude.categoryFn));
var valueFromJSON = new FromJSON(Data_Either.Right.create);
var unitToJSON = new ToJSON(function (_505) {
    return JNull.value;
});
var toJSON = function (dict) {
    return dict.toJSON;
};
var tupleToJSON = function (__dict_ToJSON_0) {
    return function (__dict_ToJSON_1) {
        return new ToJSON(function (_508) {
            return new JArray([ toJSON(__dict_ToJSON_0)(_508.value0), toJSON(__dict_ToJSON_1)(_508.value1) ]);
        });
    };
};
var $dot$eq = function (__dict_ToJSON_2) {
    return function (name) {
        return function (value) {
            return new Data_Tuple.Tuple(name, toJSON(__dict_ToJSON_2)(value));
        };
    };
};
var stringToJSON = new ToJSON(JString.create);
var showValue = new Prelude.Show(function (_492) {
    if (_492 instanceof JObject) {
        return "JObject " + Prelude.show(Data_Map.showMap(Prelude.showString)(showValue))(_492.value0);
    };
    if (_492 instanceof JArray) {
        return "JArray " + Prelude.show(Prelude.showArray(showValue))(_492.value0);
    };
    if (_492 instanceof JString) {
        return "JString " + Prelude.show(Prelude.showString)(_492.value0);
    };
    if (_492 instanceof JNumber) {
        return "JNumber " + Prelude.show(Prelude.showNumber)(_492.value0);
    };
    if (_492 instanceof JInt) {
        return "JInt " + Prelude.show(Prelude.showInt)(_492.value0);
    };
    if (_492 instanceof JBool) {
        return "JBool " + Prelude.show(Prelude.showBoolean)(_492.value0);
    };
    if (_492 instanceof JNull) {
        return "JNull";
    };
    throw new Error("Failed pattern match: " + [ _492.constructor.name ]);
});
var setToJSON = function (__dict_ToJSON_3) {
    return new ToJSON(function (s) {
        return JArray.create(Data_List.fromList(Data_Unfoldable.unfoldableArray)(Prelude["<$>"](Data_List.functorList)(toJSON(__dict_ToJSON_3))(Data_Set.toList(s))));
    });
};
var parseJSON = function (dict) {
    return dict.parseJSON;
};
var $dot$colon = function (__dict_FromJSON_6) {
    return function (obj) {
        return function (key) {
            var _784 = Data_Map.lookup(Prelude.ordString)(key)(obj);
            if (_784 instanceof Data_Maybe.Nothing) {
                return Data_Either.Left.create("key " + (Prelude.show(Prelude.showString)(key) + " not present"));
            };
            if (_784 instanceof Data_Maybe.Just) {
                return parseJSON(__dict_FromJSON_6)(_784.value0);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-json/src/Data/JSON.purs line 128, column 1 - line 129, column 1: " + [ _784.constructor.name ]);
        };
    };
};
var object = function (ps) {
    return JObject.create(Data_Map.fromList(Prelude.ordString)(Data_List.toList(Data_Foldable.foldableArray)(ps)));
};
var numberToJSON = new ToJSON(JNumber.create);
var maybeToJSON = function (__dict_ToJSON_8) {
    return new ToJSON(function (_507) {
        if (_507 instanceof Data_Maybe.Nothing) {
            return JNull.value;
        };
        if (_507 instanceof Data_Maybe.Just) {
            return toJSON(__dict_ToJSON_8)(_507.value0);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-json/src/Data/JSON.purs line 215, column 1 - line 219, column 1: " + [ _507.constructor.name ]);
    });
};
var maybeFromJSON = function (__dict_FromJSON_9) {
    return new FromJSON(function (a) {
        return Prelude["return"](Data_Either.applicativeEither)((function () {
            var _788 = parseJSON(__dict_FromJSON_9)(a);
            if (_788 instanceof Data_Either.Left) {
                return Data_Maybe.Nothing.value;
            };
            if (_788 instanceof Data_Either.Right) {
                return new Data_Maybe.Just(_788.value0);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-json/src/Data/JSON.purs line 112, column 1 - line 117, column 1: " + [ _788.constructor.name ]);
        })());
    });
};
var $dot$colon$qmark = function (__dict_FromJSON_7) {
    return function (obj) {
        return function (key) {
            var _791 = Data_Map.lookup(Prelude.ordString)(key)(obj);
            if (_791 instanceof Data_Maybe.Nothing) {
                return Prelude["return"](Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
            };
            if (_791 instanceof Data_Maybe.Just) {
                return parseJSON(maybeFromJSON(__dict_FromJSON_7))(_791.value0);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-json/src/Data/JSON.purs line 133, column 1 - line 134, column 1: " + [ _791.constructor.name ]);
        };
    };
};
var mapToJSON = function (__dict_ToJSON_10) {
    return new ToJSON(function (m) {
        return JObject.create(Prelude.map(Data_Map.functorMap)(toJSON(__dict_ToJSON_10))(m));
    });
};
var jsonToValue = function (s) {
    var insert$prime = Data_Map.insert(Prelude.ordString);
    var ctors = {
        "null": JNull.value, 
        number: JNumber.create, 
        "int": JInt.create, 
        bool: JBool.create, 
        string: JString.create, 
        array: JArray.create, 
        object: JObject.create
    };
    var auxes = {
        left: Data_Either.Left.create, 
        right: Data_Either.Right.create, 
        either: Data_Either.either, 
        insert: insert$prime, 
        empty: Data_Map.empty
    };
    return $foreign.jsonParseImpl(Data_Either.Left.create, $foreign.jsonToValueImpl(auxes, ctors), s);
};
var jsonParse = function (s) {
    return $foreign.jsonParseImpl(Data_Either.Left.create, Data_Either.Right.create, s);
};
var intToJSON = new ToJSON(JInt.create);
var fail = Data_Either.Left.create;
var intFromJSON = new FromJSON(function (_497) {
    if (_497 instanceof JInt) {
        return Prelude["return"](Data_Either.applicativeEither)(_497.value0);
    };
    if (_497 instanceof JNumber) {
        return Data_Maybe.maybe(fail(Prelude.show(Prelude.showNumber)(_497.value0) + " is not Int."))(Prelude["return"](Data_Either.applicativeEither))(Data_Int.fromNumber(_497.value0));
    };
    return fail(Prelude.show(showValue)(_497) + " is not Int.");
});
var mapFromJSON = function (__dict_FromJSON_11) {
    return new FromJSON(function (_503) {
        if (_503 instanceof JObject) {
            var fn = function (_504) {
                var _798 = parseJSON(__dict_FromJSON_11)(_504.value1);
                if (_798 instanceof Data_Either.Right) {
                    return Prelude["return"](Data_Either.applicativeEither)(new Data_Tuple.Tuple(_504.value0, _798.value0));
                };
                if (_798 instanceof Data_Either.Left) {
                    return fail(_798.value0);
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-json/src/Data/JSON.purs line 123, column 9 - line 126, column 5: " + [ _798.constructor.name ]);
            };
            return Prelude["<$>"](Data_Either.functorEither)(Data_Map.fromList(Prelude.ordString))(Data_Traversable.sequence(Data_List.traversableList)(Data_Either.applicativeEither)(Prelude["<$>"](Data_List.functorList)(fn)(Data_Map.toList(_503.value0))));
        };
        return fail(Prelude.show(showValue)(_503) + " is not (Map String a).");
    });
};
var numberFromJSON = new FromJSON(function (_496) {
    if (_496 instanceof JNumber) {
        return Prelude["return"](Data_Either.applicativeEither)(_496.value0);
    };
    if (_496 instanceof JInt) {
        return Prelude["return"](Data_Either.applicativeEither)(Data_Int.toNumber(_496.value0));
    };
    return fail(Prelude.show(showValue)(_496) + " is not Number.");
});
var stringFromJSON = new FromJSON(function (_499) {
    if (_499 instanceof JString) {
        return Prelude["return"](Data_Either.applicativeEither)(_499.value0);
    };
    return fail(Prelude.show(showValue)(_499) + " is not String.");
});
var tupleFromJSON = function (__dict_FromJSON_12) {
    return function (__dict_FromJSON_13) {
        return new FromJSON(function (_501) {
            if (_501 instanceof JArray && _501.value0.length === 2) {
                return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(Data_Tuple.Tuple.create)(parseJSON(__dict_FromJSON_12)(_501.value0[0])))(parseJSON(__dict_FromJSON_13)(_501.value0[1]));
            };
            return fail(Prelude.show(showValue)(_501) + " is not (a,b).");
        });
    };
};
var unitFromJSON = new FromJSON(function (_498) {
    if (_498 instanceof JNull) {
        return Prelude["return"](Data_Either.applicativeEither)(Prelude.unit);
    };
    return fail(Prelude.show(showValue)(_498) + " is not Null.");
});
var eqValue = new Prelude.Eq(function (_493) {
    return function (_494) {
        if (_493 instanceof JObject && _494 instanceof JObject) {
            return Prelude["=="](Data_Map.eqMap(Prelude.eqString)(eqValue))(_493.value0)(_494.value0);
        };
        if (_493 instanceof JArray && _494 instanceof JArray) {
            return Prelude["=="](Prelude.eqArray(eqValue))(_493.value0)(_494.value0);
        };
        if (_493 instanceof JString && _494 instanceof JString) {
            return Prelude["=="](Prelude.eqString)(_493.value0)(_494.value0);
        };
        if (_493 instanceof JNumber && _494 instanceof JNumber) {
            return _493.value0 === _494.value0;
        };
        if (_493 instanceof JInt && _494 instanceof JInt) {
            return Prelude["=="](Prelude.eqInt)(_493.value0)(_494.value0);
        };
        if (_493 instanceof JBool && _494 instanceof JBool) {
            return Prelude["=="](Prelude.eqBoolean)(_493.value0)(_494.value0);
        };
        if (_493 instanceof JNull && _494 instanceof JNull) {
            return true;
        };
        return false;
    };
});
var encode = function (__dict_ToJSON_14) {
    return function (a) {
        return valueToString(toJSON(__dict_ToJSON_14)(a));
    };
};
var eitherToJSON = function (__dict_ToJSON_15) {
    return function (__dict_ToJSON_16) {
        return new ToJSON(function (_506) {
            if (_506 instanceof Data_Either.Right) {
                return object([ $dot$eq(__dict_ToJSON_16)("Right")(_506.value0) ]);
            };
            if (_506 instanceof Data_Either.Left) {
                return object([ $dot$eq(__dict_ToJSON_15)("Left")(_506.value0) ]);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-json/src/Data/JSON.purs line 208, column 1 - line 212, column 1: " + [ _506.constructor.name ]);
        });
    };
};
var eitherFromJSON = function (__dict_FromJSON_17) {
    return function (__dict_FromJSON_18) {
        return new FromJSON(function (_502) {
            if (_502 instanceof JObject) {
                var _832 = Data_List.fromList(Data_Unfoldable.unfoldableArray)(Data_Map.toList(_502.value0));
                if (_832.length === 1 && (_832[0]).value0 === "Right") {
                    return Prelude["<$>"](Data_Either.functorEither)(Data_Either.Right.create)(parseJSON(__dict_FromJSON_18)((_832[0]).value1));
                };
                if (_832.length === 1 && (_832[0]).value0 === "Left") {
                    return Prelude["<$>"](Data_Either.functorEither)(Data_Either.Left.create)(parseJSON(__dict_FromJSON_17)((_832[0]).value1));
                };
                return fail(Prelude.show(Data_Map.showMap(Prelude.showString)(showValue))(_502.value0) + " is not (Either a b).");
            };
            return fail(Prelude.show(showValue)(_502) + " is not (Either a b).");
        });
    };
};
var eitherDecode = function (__dict_FromJSON_19) {
    return function (s) {
        return Prelude.bind(Data_Either.bindEither)(jsonToValue(s))(function (_83) {
            return parseJSON(__dict_FromJSON_19)(_83);
        });
    };
};
var decode = function (__dict_FromJSON_20) {
    return function (s) {
        var _841 = eitherDecode(__dict_FromJSON_20)(s);
        if (_841 instanceof Data_Either.Right) {
            return new Data_Maybe.Just(_841.value0);
        };
        if (_841 instanceof Data_Either.Left) {
            return Data_Maybe.Nothing.value;
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-json/src/Data/JSON.purs line 64, column 1 - line 65, column 1: " + [ _841.constructor.name ]);
    };
};
var boolToJSON = new ToJSON(JBool.create);
var boolFromJSON = new FromJSON(function (_495) {
    if (_495 instanceof JBool) {
        return new Data_Either.Right(_495.value0);
    };
    return fail(Prelude.show(showValue)(_495) + " is not Boolean.");
});
var arrayToJSON = function (__dict_ToJSON_21) {
    return new ToJSON(function (a) {
        return JArray.create(Prelude["<$>"](Prelude.functorArray)(toJSON(__dict_ToJSON_21))(a));
    });
};
var arrayFromJSON = function (__dict_FromJSON_22) {
    return new FromJSON(function (_500) {
        if (_500 instanceof JArray) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Prelude["<$>"](Prelude.functorArray)(parseJSON(__dict_FromJSON_22))(_500.value0));
        };
        return fail(Prelude.show(showValue)(_500) + " is not [a].");
    });
};
var setFromJSON = function (__dict_Ord_4) {
    return function (__dict_FromJSON_5) {
        return new FromJSON(function (x) {
            return Prelude["<$>"](Data_Either.functorEither)(Prelude["<$>"](Prelude.functorFn)(Data_Set.fromList(__dict_Ord_4))(Data_List.toList(Data_Foldable.foldableArray)))(parseJSON(arrayFromJSON(__dict_FromJSON_5))(x));
        });
    };
};
module.exports = {
    JObject: JObject, 
    JArray: JArray, 
    JString: JString, 
    JNumber: JNumber, 
    JInt: JInt, 
    JBool: JBool, 
    JNull: JNull, 
    ToJSON: ToJSON, 
    FromJSON: FromJSON, 
    object: object, 
    ".=": $dot$eq, 
    encode: encode, 
    toJSON: toJSON, 
    ".!=": $dot$bang$eq, 
    ".:?": $dot$colon$qmark, 
    ".:": $dot$colon, 
    eitherDecode: eitherDecode, 
    decode: decode, 
    fail: fail, 
    parseJSON: parseJSON, 
    showValue: showValue, 
    eqValue: eqValue, 
    valueFromJSON: valueFromJSON, 
    boolFromJSON: boolFromJSON, 
    numberFromJSON: numberFromJSON, 
    intFromJSON: intFromJSON, 
    unitFromJSON: unitFromJSON, 
    stringFromJSON: stringFromJSON, 
    arrayFromJSON: arrayFromJSON, 
    tupleFromJSON: tupleFromJSON, 
    eitherFromJSON: eitherFromJSON, 
    maybeFromJSON: maybeFromJSON, 
    setFromJSON: setFromJSON, 
    mapFromJSON: mapFromJSON, 
    boolToJSON: boolToJSON, 
    numberToJSON: numberToJSON, 
    intToJSON: intToJSON, 
    stringToJSON: stringToJSON, 
    unitToJSON: unitToJSON, 
    arrayToJSON: arrayToJSON, 
    eitherToJSON: eitherToJSON, 
    mapToJSON: mapToJSON, 
    maybeToJSON: maybeToJSON, 
    setToJSON: setToJSON, 
    tupleToJSON: tupleToJSON, 
    valueToJSON: valueToJSON
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.JSON/foreign.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.Int":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Map":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Map/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Set":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Set/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Data.Unfoldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Unfoldable/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_Unfoldable = require("Data.Unfoldable");
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Control_Lazy = require("Control.Lazy");
var Control_Alt = require("Control.Alt");
var Data_Traversable = require("Data.Traversable");
var Data_Monoid = require("Data.Monoid");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Control_Plus = require("Control.Plus");
var Control_Alternative = require("Control.Alternative");
var Control_MonadPlus = require("Control.MonadPlus");
var Nil = (function () {
    function Nil() {

    };
    Nil.value = new Nil();
    return Nil;
})();
var Cons = (function () {
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    return Cons;
})();
var $colon = Cons.create;
var updateAt = function (_365) {
    return function (x) {
        return function (_366) {
            if (_365 === 0 && _366 instanceof Cons) {
                return new Data_Maybe.Just(new Cons(x, _366.value1));
            };
            if (_366 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_366.value0))(updateAt(Prelude["-"](Prelude.ringInt)(_365)(1))(x)(_366.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
    return function (b) {
        var go = function (_408) {
            if (_408 instanceof Data_Maybe.Nothing) {
                return Nil.value;
            };
            if (_408 instanceof Data_Maybe.Just) {
                return new Cons(_408.value0.value0, go(f(_408.value0.value1)));
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 734, column 1 - line 740, column 1: " + [ _408.constructor.name ]);
        };
        return go(f(b));
    };
});
var uncons = function (_358) {
    if (_358 instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (_358 instanceof Cons) {
        return new Data_Maybe.Just({
            head: _358.value0, 
            tail: _358.value1
        });
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 266, column 1 - line 267, column 1: " + [ _358.constructor.name ]);
};
var toList = function (__dict_Foldable_2) {
    return Data_Foldable.foldr(__dict_Foldable_2)(Cons.create)(Nil.value);
};
var tail = function (_356) {
    if (_356 instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (_356 instanceof Cons) {
        return new Data_Maybe.Just(_356.value1);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 248, column 1 - line 249, column 1: " + [ _356.constructor.name ]);
};
var span = function (p) {
    return function (_373) {
        if (_373 instanceof Cons && p(_373.value0)) {
            var _774 = span(p)(_373.value1);
            return {
                init: new Cons(_373.value0, _774.init), 
                rest: _774.rest
            };
        };
        return {
            init: Nil.value, 
            rest: _373
        };
    };
};
var singleton = function (a) {
    return new Cons(a, Nil.value);
};
var sortBy = function (cmp) {
    var merge = function (_390) {
        return function (_391) {
            if (_390 instanceof Cons && _391 instanceof Cons) {
                if (Prelude["=="](Prelude.eqOrdering)(cmp(_390.value0)(_391.value0))(Prelude.GT.value)) {
                    return new Cons(_391.value0, merge(_390)(_391.value1));
                };
                if (Prelude.otherwise) {
                    return new Cons(_390.value0, merge(_390.value1)(_391));
                };
            };
            if (_390 instanceof Nil) {
                return _391;
            };
            if (_391 instanceof Nil) {
                return _390;
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 440, column 1 - line 441, column 1: " + [ _390.constructor.name, _391.constructor.name ]);
        };
    };
    var mergePairs = function (_389) {
        if (_389 instanceof Cons && _389.value1 instanceof Cons) {
            return new Cons(merge(_389.value0)(_389.value1.value0), mergePairs(_389.value1.value1));
        };
        return _389;
    };
    var mergeAll = function (__copy__388) {
        var _388 = __copy__388;
        tco: while (true) {
            if (_388 instanceof Cons && _388.value1 instanceof Nil) {
                return _388.value0;
            };
            var __tco__388 = mergePairs(_388);
            _388 = __tco__388;
            continue tco;
        };
    };
    var sequences = function (_385) {
        if (_385 instanceof Cons && _385.value1 instanceof Cons) {
            if (Prelude["=="](Prelude.eqOrdering)(cmp(_385.value0)(_385.value1.value0))(Prelude.GT.value)) {
                return descending(_385.value1.value0)(singleton(_385.value0))(_385.value1.value1);
            };
            if (Prelude.otherwise) {
                return ascending(_385.value1.value0)(Cons.create(_385.value0))(_385.value1.value1);
            };
        };
        return singleton(_385);
    };
    var descending = function (__copy_a) {
        return function (__copy_as) {
            return function (__copy__386) {
                var a = __copy_a;
                var as = __copy_as;
                var _386 = __copy__386;
                tco: while (true) {
                    var a_1 = a;
                    var as_1 = as;
                    if (_386 instanceof Cons && Prelude["=="](Prelude.eqOrdering)(cmp(a_1)(_386.value0))(Prelude.GT.value)) {
                        var __tco_a = _386.value0;
                        var __tco_as = new Cons(a_1, as_1);
                        var __tco__386 = _386.value1;
                        a = __tco_a;
                        as = __tco_as;
                        _386 = __tco__386;
                        continue tco;
                    };
                    return new Cons(new Cons(a, as), sequences(_386));
                };
            };
        };
    };
    var ascending = function (a) {
        return function (as) {
            return function (_387) {
                if (_387 instanceof Cons && Prelude["/="](Prelude.eqOrdering)(cmp(a)(_387.value0))(Prelude.GT.value)) {
                    return ascending(_387.value0)(function (ys) {
                        return as(new Cons(a, ys));
                    })(_387.value1);
                };
                return new Cons(as(singleton(a)), sequences(_387));
            };
        };
    };
    return Prelude["<<<"](Prelude.semigroupoidFn)(mergeAll)(sequences);
};
var sort = function (__dict_Ord_3) {
    return function (xs) {
        return sortBy(Prelude.compare(__dict_Ord_3))(xs);
    };
};
var showList = function (__dict_Show_4) {
    return new Prelude.Show(function (_398) {
        if (_398 instanceof Nil) {
            return "Nil";
        };
        if (_398 instanceof Cons) {
            return "Cons (" + (Prelude.show(__dict_Show_4)(_398.value0) + (") (" + (Prelude.show(showList(__dict_Show_4))(_398.value1) + ")")));
        };
        throw new Error("Failed pattern match: " + [ _398.constructor.name ]);
    });
};
var semigroupList = new Prelude.Semigroup(function (_404) {
    return function (ys) {
        if (_404 instanceof Nil) {
            return ys;
        };
        if (_404 instanceof Cons) {
            return new Cons(_404.value0, Prelude["<>"](semigroupList)(_404.value1)(ys));
        };
        throw new Error("Failed pattern match: " + [ _404.constructor.name, ys.constructor.name ]);
    };
});
var reverse = (function () {
    var go = function (__copy_acc) {
        return function (__copy__382) {
            var acc = __copy_acc;
            var _382 = __copy__382;
            tco: while (true) {
                var acc_1 = acc;
                if (_382 instanceof Nil) {
                    return acc_1;
                };
                if (_382 instanceof Cons) {
                    var __tco_acc = new Cons(_382.value0, acc);
                    var __tco__382 = _382.value1;
                    acc = __tco_acc;
                    _382 = __tco__382;
                    continue tco;
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 364, column 1 - line 365, column 1: " + [ acc.constructor.name, _382.constructor.name ]);
            };
        };
    };
    return go(Nil.value);
})();
var snoc = function (xs) {
    return function (x) {
        return reverse(new Cons(x, reverse(xs)));
    };
};
var take = (function () {
    var go = function (__copy_acc) {
        return function (__copy__392) {
            return function (__copy__393) {
                var acc = __copy_acc;
                var _392 = __copy__392;
                var _393 = __copy__393;
                tco: while (true) {
                    var acc_1 = acc;
                    if (_392 === 0) {
                        return reverse(acc_1);
                    };
                    var acc_1 = acc;
                    if (_393 instanceof Nil) {
                        return reverse(acc_1);
                    };
                    if (_393 instanceof Cons) {
                        var __tco_acc = new Cons(_393.value0, acc);
                        var __tco__392 = Prelude["-"](Prelude.ringInt)(_392)(1);
                        var __tco__393 = _393.value1;
                        acc = __tco_acc;
                        _392 = __tco__392;
                        _393 = __tco__393;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 486, column 1 - line 487, column 1: " + [ acc.constructor.name, _392.constructor.name, _393.constructor.name ]);
                };
            };
        };
    };
    return go(Nil.value);
})();
var takeWhile = function (p) {
    var go = function (__copy_acc) {
        return function (__copy__394) {
            var acc = __copy_acc;
            var _394 = __copy__394;
            tco: while (true) {
                var acc_1 = acc;
                if (_394 instanceof Cons && p(_394.value0)) {
                    var __tco_acc = new Cons(_394.value0, acc_1);
                    var __tco__394 = _394.value1;
                    acc = __tco_acc;
                    _394 = __tco__394;
                    continue tco;
                };
                return reverse(acc);
            };
        };
    };
    return go(Nil.value);
};
var zipWith = function (f) {
    return function (xs) {
        return function (ys) {
            var go = function (__copy__396) {
                return function (__copy__397) {
                    return function (__copy_acc) {
                        var _396 = __copy__396;
                        var _397 = __copy__397;
                        var acc = __copy_acc;
                        tco: while (true) {
                            if (_396 instanceof Nil) {
                                return acc;
                            };
                            if (_397 instanceof Nil) {
                                return acc;
                            };
                            if (_396 instanceof Cons && _397 instanceof Cons) {
                                var __tco__396 = _396.value1;
                                var __tco__397 = _397.value1;
                                var __tco_acc = new Cons(f(_396.value0)(_397.value0), acc);
                                _396 = __tco__396;
                                _397 = __tco__397;
                                acc = __tco_acc;
                                continue tco;
                            };
                            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 650, column 1 - line 651, column 1: " + [ _396.constructor.name, _397.constructor.name, acc.constructor.name ]);
                        };
                    };
                };
            };
            return reverse(go(xs)(ys)(Nil.value));
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var replicateM = function (__dict_Monad_6) {
    return function (n) {
        return function (m) {
            if (Prelude["<"](Prelude.ordInt)(n)(Prelude.one(Prelude.semiringInt))) {
                return Prelude["return"](__dict_Monad_6["__superclass_Prelude.Applicative_0"]())(Nil.value);
            };
            if (Prelude.otherwise) {
                return Prelude.bind(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(m)(function (_76) {
                    return Prelude.bind(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(replicateM(__dict_Monad_6)(Prelude["-"](Prelude.ringInt)(n)(Prelude.one(Prelude.semiringInt)))(m))(function (_75) {
                        return Prelude["return"](__dict_Monad_6["__superclass_Prelude.Applicative_0"]())(new Cons(_76, _75));
                    });
                });
            };
            throw new Error("Failed pattern match: " + [ n.constructor.name, m.constructor.name ]);
        };
    };
};
var replicate = function (n) {
    return function (value) {
        var go = function (__copy_n_1) {
            return function (__copy_rest) {
                var n_1 = __copy_n_1;
                var rest = __copy_rest;
                tco: while (true) {
                    if (Prelude["<="](Prelude.ordInt)(n_1)(0)) {
                        return rest;
                    };
                    if (Prelude.otherwise) {
                        var __tco_n_1 = Prelude["-"](Prelude.ringInt)(n_1)(1);
                        var __tco_rest = new Cons(value, rest);
                        n_1 = __tco_n_1;
                        rest = __tco_rest;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 145, column 1 - line 146, column 1: " + [ n_1.constructor.name, rest.constructor.name ]);
                };
            };
        };
        return go(n)(Nil.value);
    };
};
var range = function (start) {
    return function (end) {
        if (Prelude["=="](Prelude.eqInt)(start)(end)) {
            return singleton(start);
        };
        if (Prelude.otherwise) {
            var go = function (__copy_s) {
                return function (__copy_e) {
                    return function (__copy_step) {
                        return function (__copy_rest) {
                            var s = __copy_s;
                            var e = __copy_e;
                            var step = __copy_step;
                            var rest = __copy_rest;
                            tco: while (true) {
                                if (Prelude["=="](Prelude.eqInt)(s)(e)) {
                                    return new Cons(s, rest);
                                };
                                if (Prelude.otherwise) {
                                    var __tco_s = Prelude["+"](Prelude.semiringInt)(s)(step);
                                    var __tco_e = e;
                                    var __tco_step = step;
                                    var __tco_rest = new Cons(s, rest);
                                    s = __tco_s;
                                    e = __tco_e;
                                    step = __tco_step;
                                    rest = __tco_rest;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 137, column 1 - line 138, column 1: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                            };
                        };
                    };
                };
            };
            return go(end)(start)((function () {
                var _847 = Prelude[">"](Prelude.ordInt)(start)(end);
                if (_847) {
                    return 1;
                };
                if (!_847) {
                    return Prelude.negate(Prelude.ringInt)(1);
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 137, column 1 - line 138, column 1: " + [ _847.constructor.name ]);
            })())(Nil.value);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 137, column 1 - line 138, column 1: " + [ start.constructor.name, end.constructor.name ]);
    };
};
var $dot$dot = range;
var $$null = function (_352) {
    if (_352 instanceof Nil) {
        return true;
    };
    return false;
};
var monoidList = new Data_Monoid.Monoid(function () {
    return semigroupList;
}, Nil.value);
var mapMaybe = function (f) {
    var go = function (__copy_acc) {
        return function (__copy__384) {
            var acc = __copy_acc;
            var _384 = __copy__384;
            tco: while (true) {
                var acc_1 = acc;
                if (_384 instanceof Nil) {
                    return reverse(acc_1);
                };
                if (_384 instanceof Cons) {
                    var _851 = f(_384.value0);
                    if (_851 instanceof Data_Maybe.Nothing) {
                        var __tco_acc = acc;
                        var __tco__384 = _384.value1;
                        acc = __tco_acc;
                        _384 = __tco__384;
                        continue tco;
                    };
                    if (_851 instanceof Data_Maybe.Just) {
                        var __tco_acc = new Cons(_851.value0, acc);
                        var __tco__384 = _384.value1;
                        acc = __tco_acc;
                        _384 = __tco__384;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 416, column 1 - line 417, column 1: " + [ _851.constructor.name ]);
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 416, column 1 - line 417, column 1: " + [ acc.constructor.name, _384.constructor.name ]);
            };
        };
    };
    return go(Nil.value);
};
var some = function (__dict_Alternative_8) {
    return function (__dict_Lazy_9) {
        return function (v) {
            return Prelude["<*>"]((__dict_Alternative_8["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_8["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(v))(Control_Lazy.defer(__dict_Lazy_9)(function (_348) {
                return many(__dict_Alternative_8)(__dict_Lazy_9)(v);
            }));
        };
    };
};
var many = function (__dict_Alternative_10) {
    return function (__dict_Lazy_11) {
        return function (v) {
            return Control_Alt["<|>"]((__dict_Alternative_10["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_10)(__dict_Lazy_11)(v))(Prelude.pure(__dict_Alternative_10["__superclass_Prelude.Applicative_0"]())(Nil.value));
        };
    };
};
var last = function (__copy__355) {
    var _355 = __copy__355;
    tco: while (true) {
        if (_355 instanceof Cons && _355.value1 instanceof Nil) {
            return new Data_Maybe.Just(_355.value0);
        };
        if (_355 instanceof Cons) {
            var __tco__355 = _355.value1;
            _355 = __tco__355;
            continue tco;
        };
        return Data_Maybe.Nothing.value;
    };
};
var insertBy = function (cmp) {
    return function (x) {
        return function (_353) {
            if (_353 instanceof Nil) {
                return new Cons(x, Nil.value);
            };
            if (_353 instanceof Cons) {
                var _864 = cmp(x)(_353.value0);
                if (_864 instanceof Prelude.GT) {
                    return new Cons(_353.value0, insertBy(cmp)(x)(_353.value1));
                };
                return new Cons(x, _353);
            };
            throw new Error("Failed pattern match: " + [ cmp.constructor.name, x.constructor.name, _353.constructor.name ]);
        };
    };
};
var insertAt = function (_361) {
    return function (x) {
        return function (_362) {
            if (_361 === 0) {
                return new Data_Maybe.Just(new Cons(x, _362));
            };
            if (_362 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_362.value0))(insertAt(Prelude["-"](Prelude.ringInt)(_361)(1))(x)(_362.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var insert = function (__dict_Ord_12) {
    return insertBy(Prelude.compare(__dict_Ord_12));
};
var init = function (_357) {
    if (_357 instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    var go = function (__copy__380) {
        return function (__copy_acc) {
            var _380 = __copy__380;
            var acc = __copy_acc;
            tco: while (true) {
                if (_380 instanceof Cons && _380.value1 instanceof Nil) {
                    return acc;
                };
                if (_380 instanceof Cons) {
                    var __tco__380 = _380.value1;
                    var __tco_acc = new Cons(_380.value0, acc);
                    _380 = __tco__380;
                    acc = __tco_acc;
                    continue tco;
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 255, column 1 - line 256, column 1: " + [ _380.constructor.name, acc.constructor.name ]);
            };
        };
    };
    return Data_Maybe.Just.create(reverse(go(_357)(Nil.value)));
};
var index = function (__copy__359) {
    return function (__copy__360) {
        var _359 = __copy__359;
        var _360 = __copy__360;
        tco: while (true) {
            if (_359 instanceof Nil) {
                return Data_Maybe.Nothing.value;
            };
            if (_359 instanceof Cons && _360 === 0) {
                return new Data_Maybe.Just(_359.value0);
            };
            if (_359 instanceof Cons) {
                var __tco__359 = _359.value1;
                var __tco__360 = Prelude["-"](Prelude.ringInt)(_360)(1);
                _359 = __tco__359;
                _360 = __tco__360;
                continue tco;
            };
            throw new Error("Failed pattern match: " + [ _359.constructor.name, _360.constructor.name ]);
        };
    };
};
var $bang$bang = index;
var head = function (_354) {
    if (_354 instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (_354 instanceof Cons) {
        return new Data_Maybe.Just(_354.value0);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 233, column 1 - line 234, column 1: " + [ _354.constructor.name ]);
};
var groupBy = function (eq) {
    return function (_374) {
        if (_374 instanceof Nil) {
            return Nil.value;
        };
        if (_374 instanceof Cons) {
            var _890 = span(eq(_374.value0))(_374.value1);
            return new Cons(new Cons(_374.value0, _890.init), groupBy(eq)(_890.rest));
        };
        throw new Error("Failed pattern match: " + [ eq.constructor.name, _374.constructor.name ]);
    };
};
var group = function (__dict_Eq_13) {
    return groupBy(Prelude["=="](__dict_Eq_13));
};
var group$prime = function (__dict_Ord_14) {
    return Prelude["<<<"](Prelude.semigroupoidFn)(group(__dict_Ord_14["__superclass_Prelude.Eq_0"]()))(sort(__dict_Ord_14));
};
var functorList = new Prelude.Functor(function (f) {
    return function (lst) {
        var go = function (__copy__405) {
            return function (__copy_acc) {
                var _405 = __copy__405;
                var acc = __copy_acc;
                tco: while (true) {
                    if (_405 instanceof Nil) {
                        return acc;
                    };
                    if (_405 instanceof Cons) {
                        var __tco__405 = _405.value1;
                        var __tco_acc = new Cons(f(_405.value0), acc);
                        _405 = __tco__405;
                        acc = __tco_acc;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 717, column 1 - line 724, column 1: " + [ _405.constructor.name, acc.constructor.name ]);
                };
            };
        };
        return reverse(go(lst)(Nil.value));
    };
});
var fromList = function (__dict_Unfoldable_15) {
    return Data_Unfoldable.unfoldr(__dict_Unfoldable_15)(function (xs) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(function (rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var foldableList = new Data_Foldable.Foldable(function (__dict_Monoid_16) {
    return function (f) {
        return Data_Foldable.foldl(foldableList)(function (acc) {
            return Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.append(__dict_Monoid_16["__superclass_Prelude.Semigroup_0"]())(acc))(f);
        })(Data_Monoid.mempty(__dict_Monoid_16));
    };
}, (function () {
    var go = function (__copy_o) {
        return function (__copy_b) {
            return function (__copy__407) {
                var o = __copy_o;
                var b = __copy_b;
                var _407 = __copy__407;
                tco: while (true) {
                    var b_1 = b;
                    if (_407 instanceof Nil) {
                        return b_1;
                    };
                    if (_407 instanceof Cons) {
                        var __tco_o = o;
                        var __tco_b = o(b)(_407.value0);
                        var __tco__407 = _407.value1;
                        o = __tco_o;
                        b = __tco_b;
                        _407 = __tco__407;
                        continue tco;
                    };
                    throw new Error("Failed pattern match: " + [ o.constructor.name, b.constructor.name, _407.constructor.name ]);
                };
            };
        };
    };
    return go;
})(), function (o) {
    return function (b) {
        return function (_406) {
            if (_406 instanceof Nil) {
                return b;
            };
            if (_406 instanceof Cons) {
                return o(_406.value0)(Data_Foldable.foldr(foldableList)(o)(b)(_406.value1));
            };
            throw new Error("Failed pattern match: " + [ o.constructor.name, b.constructor.name, _406.constructor.name ]);
        };
    };
});
var length = Data_Foldable.foldl(foldableList)(function (acc) {
    return function (_349) {
        return Prelude["+"](Prelude.semiringInt)(acc)(1);
    };
})(0);
var traversableList = new Data_Traversable.Traversable(function () {
    return foldableList;
}, function () {
    return functorList;
}, function (__dict_Applicative_1) {
    return function (_410) {
        if (_410 instanceof Nil) {
            return Prelude.pure(__dict_Applicative_1)(Nil.value);
        };
        if (_410 instanceof Cons) {
            return Prelude["<*>"](__dict_Applicative_1["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(_410.value0))(Data_Traversable.sequence(traversableList)(__dict_Applicative_1)(_410.value1));
        };
        throw new Error("Failed pattern match: " + [ _410.constructor.name ]);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_409) {
            if (_409 instanceof Nil) {
                return Prelude.pure(__dict_Applicative_0)(Nil.value);
            };
            if (_409 instanceof Cons) {
                return Prelude["<*>"](__dict_Applicative_0["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(f(_409.value0)))(Data_Traversable.traverse(traversableList)(__dict_Applicative_0)(f)(_409.value1));
            };
            throw new Error("Failed pattern match: " + [ f.constructor.name, _409.constructor.name ]);
        };
    };
});
var zipWithA = function (__dict_Applicative_5) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(traversableList)(__dict_Applicative_5)(zipWith(f)(xs)(ys));
            };
        };
    };
};
var unzip = Data_Foldable.foldr(foldableList)(function (_351) {
    return function (_350) {
        return new Data_Tuple.Tuple(new Cons(_351.value0, _350.value0), new Cons(_351.value1, _350.value1));
    };
})(new Data_Tuple.Tuple(Nil.value, Nil.value));
var foldM = function (__dict_Monad_17) {
    return function (f) {
        return function (a) {
            return function (_379) {
                if (_379 instanceof Nil) {
                    return Prelude["return"](__dict_Monad_17["__superclass_Prelude.Applicative_0"]())(a);
                };
                if (_379 instanceof Cons) {
                    return Prelude[">>="](__dict_Monad_17["__superclass_Prelude.Bind_1"]())(f(a)(_379.value0))(function (a$prime) {
                        return foldM(__dict_Monad_17)(f)(a$prime)(_379.value1);
                    });
                };
                throw new Error("Failed pattern match: " + [ f.constructor.name, a.constructor.name, _379.constructor.name ]);
            };
        };
    };
};
var findIndex = function (fn) {
    var go = function (__copy_n) {
        return function (__copy__381) {
            var n = __copy_n;
            var _381 = __copy__381;
            tco: while (true) {
                if (_381 instanceof Cons) {
                    if (fn(_381.value0)) {
                        return new Data_Maybe.Just(n);
                    };
                    if (Prelude.otherwise) {
                        var __tco_n = Prelude["+"](Prelude.semiringInt)(n)(1);
                        var __tco__381 = _381.value1;
                        n = __tco_n;
                        _381 = __tco__381;
                        continue tco;
                    };
                };
                if (_381 instanceof Nil) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 297, column 1 - line 298, column 1: " + [ n.constructor.name, _381.constructor.name ]);
            };
        };
    };
    return go(0);
};
var findLastIndex = function (fn) {
    return function (xs) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["-"](Prelude.ringInt)(Prelude["-"](Prelude.ringInt)(length(xs))(1)))(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function (__dict_Monad_18) {
    return function (p) {
        return function (_370) {
            if (_370 instanceof Nil) {
                return Prelude["return"](__dict_Monad_18["__superclass_Prelude.Applicative_0"]())(Nil.value);
            };
            if (_370 instanceof Cons) {
                return Prelude.bind(__dict_Monad_18["__superclass_Prelude.Bind_1"]())(p(_370.value0))(function (_78) {
                    return Prelude.bind(__dict_Monad_18["__superclass_Prelude.Bind_1"]())(filterM(__dict_Monad_18)(p)(_370.value1))(function (_77) {
                        return Prelude["return"](__dict_Monad_18["__superclass_Prelude.Applicative_0"]())((function () {
                            if (_78) {
                                return new Cons(_370.value0, _77);
                            };
                            if (!_78) {
                                return _77;
                            };
                            throw new Error("Failed pattern match: " + [ _78.constructor.name ]);
                        })());
                    });
                });
            };
            throw new Error("Failed pattern match: " + [ p.constructor.name, _370.constructor.name ]);
        };
    };
};
var filter = function (p) {
    var go = function (__copy_acc) {
        return function (__copy__383) {
            var acc = __copy_acc;
            var _383 = __copy__383;
            tco: while (true) {
                var acc_1 = acc;
                if (_383 instanceof Nil) {
                    return reverse(acc_1);
                };
                if (_383 instanceof Cons) {
                    if (p(_383.value0)) {
                        var __tco_acc = new Cons(_383.value0, acc);
                        var __tco__383 = _383.value1;
                        acc = __tco_acc;
                        _383 = __tco__383;
                        continue tco;
                    };
                    if (Prelude.otherwise) {
                        var __tco_acc = acc;
                        var __tco__383 = _383.value1;
                        acc = __tco_acc;
                        _383 = __tco__383;
                        continue tco;
                    };
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 387, column 1 - line 388, column 1: " + [ acc.constructor.name, _383.constructor.name ]);
            };
        };
    };
    return go(Nil.value);
};
var intersectBy = function (eq) {
    return function (_377) {
        return function (_378) {
            if (_377 instanceof Nil) {
                return Nil.value;
            };
            if (_378 instanceof Nil) {
                return Nil.value;
            };
            return filter(function (x) {
                return Data_Foldable.any(foldableList)(Prelude.booleanAlgebraBoolean)(eq(x))(_378);
            })(_377);
        };
    };
};
var intersect = function (__dict_Eq_19) {
    return intersectBy(Prelude["=="](__dict_Eq_19));
};
var nubBy = function ($eq$eq) {
    return function (_375) {
        if (_375 instanceof Nil) {
            return Nil.value;
        };
        if (_375 instanceof Cons) {
            return new Cons(_375.value0, nubBy($eq$eq)(filter(function (y) {
                return Prelude.not(Prelude.booleanAlgebraBoolean)($eq$eq(_375.value0)(y));
            })(_375.value1)));
        };
        throw new Error("Failed pattern match: " + [ $eq$eq.constructor.name, _375.constructor.name ]);
    };
};
var nub = function (__dict_Eq_20) {
    return nubBy(Prelude["=="](__dict_Eq_20));
};
var eqList = function (__dict_Eq_21) {
    return new Prelude.Eq(function (xs) {
        return function (ys) {
            var go = function (__copy__399) {
                return function (__copy__400) {
                    return function (__copy__401) {
                        var _399 = __copy__399;
                        var _400 = __copy__400;
                        var _401 = __copy__401;
                        tco: while (true) {
                            if (!_401) {
                                return false;
                            };
                            if (_399 instanceof Nil && _400 instanceof Nil) {
                                return _401;
                            };
                            if (_399 instanceof Cons && _400 instanceof Cons) {
                                var __tco__399 = _399.value1;
                                var __tco__400 = _400.value1;
                                var __tco__401 = Prelude["&&"](Prelude.booleanAlgebraBoolean)(_401)(Prelude["=="](__dict_Eq_21)(_400.value0)(_399.value0));
                                _399 = __tco__399;
                                _400 = __tco__400;
                                _401 = __tco__401;
                                continue tco;
                            };
                            return false;
                        };
                    };
                };
            };
            return go(xs)(ys)(true);
        };
    });
};
var ordList = function (__dict_Ord_7) {
    return new Prelude.Ord(function () {
        return eqList(__dict_Ord_7["__superclass_Prelude.Eq_0"]());
    }, function (xs) {
        return function (ys) {
            var go = function (__copy__402) {
                return function (__copy__403) {
                    var _402 = __copy__402;
                    var _403 = __copy__403;
                    tco: while (true) {
                        if (_402 instanceof Nil && _403 instanceof Nil) {
                            return Prelude.EQ.value;
                        };
                        if (_402 instanceof Nil) {
                            return Prelude.LT.value;
                        };
                        if (_403 instanceof Nil) {
                            return Prelude.GT.value;
                        };
                        if (_402 instanceof Cons && _403 instanceof Cons) {
                            var _959 = Prelude.compare(__dict_Ord_7)(_402.value0)(_403.value0);
                            if (_959 instanceof Prelude.EQ) {
                                var __tco__402 = _402.value1;
                                var __tco__403 = _403.value1;
                                _402 = __tco__402;
                                _403 = __tco__403;
                                continue tco;
                            };
                            return _959;
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-lists/src/Data/List.purs line 699, column 1 - line 710, column 1: " + [ _402.constructor.name, _403.constructor.name ]);
                    };
                };
            };
            return go(xs)(ys);
        };
    });
};
var elemLastIndex = function (__dict_Eq_22) {
    return function (x) {
        return findLastIndex(function (_14) {
            return Prelude["=="](__dict_Eq_22)(_14)(x);
        });
    };
};
var elemIndex = function (__dict_Eq_23) {
    return function (x) {
        return findIndex(function (_13) {
            return Prelude["=="](__dict_Eq_23)(_13)(x);
        });
    };
};
var dropWhile = function (p) {
    var go = function (__copy__395) {
        var _395 = __copy__395;
        tco: while (true) {
            if (_395 instanceof Cons && p(_395.value0)) {
                var __tco__395 = _395.value1;
                _395 = __tco__395;
                continue tco;
            };
            return _395;
        };
    };
    return go;
};
var drop = function (__copy__371) {
    return function (__copy__372) {
        var _371 = __copy__371;
        var _372 = __copy__372;
        tco: while (true) {
            if (_371 === 0) {
                return _372;
            };
            if (_372 instanceof Nil) {
                return Nil.value;
            };
            if (_372 instanceof Cons) {
                var __tco__371 = Prelude["-"](Prelude.ringInt)(_371)(1);
                var __tco__372 = _372.value1;
                _371 = __tco__371;
                _372 = __tco__372;
                continue tco;
            };
            throw new Error("Failed pattern match: " + [ _371.constructor.name, _372.constructor.name ]);
        };
    };
};
var slice = function (start) {
    return function (end) {
        return function (xs) {
            return take(Prelude["-"](Prelude.ringInt)(end)(start))(drop(start)(xs));
        };
    };
};
var deleteBy = function ($eq$eq) {
    return function (x) {
        return function (_376) {
            if (_376 instanceof Nil) {
                return Nil.value;
            };
            if (_376 instanceof Cons && $eq$eq(x)(_376.value0)) {
                return _376.value1;
            };
            if (_376 instanceof Cons) {
                return new Cons(_376.value0, deleteBy($eq$eq)(x)(_376.value1));
            };
            throw new Error("Failed pattern match: " + [ $eq$eq.constructor.name, x.constructor.name, _376.constructor.name ]);
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Prelude["<>"](semigroupList)(xs)(Data_Foldable.foldl(foldableList)(Prelude.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (__dict_Eq_24) {
    return unionBy(Prelude["=="](__dict_Eq_24));
};
var deleteAt = function (_363) {
    return function (_364) {
        if (_363 === 0 && _364 instanceof Cons) {
            return new Data_Maybe.Just(_364.value1);
        };
        if (_364 instanceof Cons) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_364.value0))(deleteAt(Prelude["-"](Prelude.ringInt)(_363)(1))(_364.value1));
        };
        return Data_Maybe.Nothing.value;
    };
};
var $$delete = function (__dict_Eq_25) {
    return deleteBy(Prelude["=="](__dict_Eq_25));
};
var $bslash$bslash = function (__dict_Eq_26) {
    return Data_Foldable.foldl(foldableList)(Prelude.flip($$delete(__dict_Eq_26)));
};
var concatMap = function (f) {
    return function (_369) {
        if (_369 instanceof Nil) {
            return Nil.value;
        };
        if (_369 instanceof Cons) {
            return Prelude["<>"](semigroupList)(f(_369.value0))(concatMap(f)(_369.value1));
        };
        throw new Error("Failed pattern match: " + [ f.constructor.name, _369.constructor.name ]);
    };
};
var catMaybes = mapMaybe(Prelude.id(Prelude.categoryFn));
var applyList = new Prelude.Apply(function () {
    return functorList;
}, function (_411) {
    return function (xs) {
        if (_411 instanceof Nil) {
            return Nil.value;
        };
        if (_411 instanceof Cons) {
            return Prelude["<>"](semigroupList)(Prelude["<$>"](functorList)(_411.value0)(xs))(Prelude["<*>"](applyList)(_411.value1)(xs));
        };
        throw new Error("Failed pattern match: " + [ _411.constructor.name, xs.constructor.name ]);
    };
});
var bindList = new Prelude.Bind(function () {
    return applyList;
}, Prelude.flip(concatMap));
var concat = function (_15) {
    return Prelude[">>="](bindList)(_15)(Prelude.id(Prelude.categoryFn));
};
var applicativeList = new Prelude.Applicative(function () {
    return applyList;
}, function (a) {
    return new Cons(a, Nil.value);
});
var monadList = new Prelude.Monad(function () {
    return applicativeList;
}, function () {
    return bindList;
});
var alterAt = function (_367) {
    return function (f) {
        return function (_368) {
            if (_367 === 0 && _368 instanceof Cons) {
                return Data_Maybe.Just.create((function () {
                    var _995 = f(_368.value0);
                    if (_995 instanceof Data_Maybe.Nothing) {
                        return _368.value1;
                    };
                    if (_995 instanceof Data_Maybe.Just) {
                        return new Cons(_995.value0, _368.value1);
                    };
                    throw new Error("Failed pattern match: " + [ _995.constructor.name ]);
                })());
            };
            if (_368 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_368.value0))(alterAt(Prelude["-"](Prelude.ringInt)(_367)(1))(f)(_368.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var modifyAt = function (n) {
    return function (f) {
        return alterAt(n)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(f));
    };
};
var altList = new Control_Alt.Alt(function () {
    return functorList;
}, Prelude.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
    return altList;
}, Nil.value);
var alternativeList = new Control_Alternative.Alternative(function () {
    return plusList;
}, function () {
    return applicativeList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
    return alternativeList;
}, function () {
    return monadList;
});
module.exports = {
    Nil: Nil, 
    Cons: Cons, 
    foldM: foldM, 
    unzip: unzip, 
    zip: zip, 
    zipWithA: zipWithA, 
    zipWith: zipWith, 
    intersectBy: intersectBy, 
    intersect: intersect, 
    "\\\\": $bslash$bslash, 
    deleteBy: deleteBy, 
    "delete": $$delete, 
    unionBy: unionBy, 
    union: union, 
    nubBy: nubBy, 
    nub: nub, 
    groupBy: groupBy, 
    "group'": group$prime, 
    group: group, 
    span: span, 
    dropWhile: dropWhile, 
    drop: drop, 
    takeWhile: takeWhile, 
    take: take, 
    slice: slice, 
    sortBy: sortBy, 
    sort: sort, 
    catMaybes: catMaybes, 
    mapMaybe: mapMaybe, 
    filterM: filterM, 
    filter: filter, 
    concatMap: concatMap, 
    concat: concat, 
    reverse: reverse, 
    alterAt: alterAt, 
    modifyAt: modifyAt, 
    updateAt: updateAt, 
    deleteAt: deleteAt, 
    insertAt: insertAt, 
    findLastIndex: findLastIndex, 
    findIndex: findIndex, 
    elemLastIndex: elemLastIndex, 
    elemIndex: elemIndex, 
    index: index, 
    "!!": $bang$bang, 
    uncons: uncons, 
    init: init, 
    tail: tail, 
    last: last, 
    head: head, 
    insertBy: insertBy, 
    insert: insert, 
    snoc: snoc, 
    ":": $colon, 
    length: length, 
    "null": $$null, 
    many: many, 
    some: some, 
    replicateM: replicateM, 
    replicate: replicate, 
    range: range, 
    "..": $dot$dot, 
    singleton: singleton, 
    toList: toList, 
    fromList: fromList, 
    showList: showList, 
    eqList: eqList, 
    ordList: ordList, 
    semigroupList: semigroupList, 
    monoidList: monoidList, 
    functorList: functorList, 
    foldableList: foldableList, 
    unfoldableList: unfoldableList, 
    traversableList: traversableList, 
    applyList: applyList, 
    applicativeList: applicativeList, 
    bindList: bindList, 
    monadList: monadList, 
    altList: altList, 
    plusList: plusList, 
    alternativeList: alternativeList, 
    monadPlusList: monadPlusList
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Alternative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alternative/index.js","Control.Lazy":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Lazy/index.js","Control.MonadPlus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.MonadPlus/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Data.Unfoldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Unfoldable/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Map/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var Data_Traversable = require("Data.Traversable");
var Data_List = require("Data.List");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Leaf = (function () {
    function Leaf() {

    };
    Leaf.value = new Leaf();
    return Leaf;
})();
var Two = (function () {
    function Two(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Two.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Two(value0, value1, value2, value3);
                };
            };
        };
    };
    return Two;
})();
var Three = (function () {
    function Three(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
    };
    Three.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return new Three(value0, value1, value2, value3, value4, value5, value6);
                            };
                        };
                    };
                };
            };
        };
    };
    return Three;
})();
var TwoLeft = (function () {
    function TwoLeft(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoLeft(value0, value1, value2);
            };
        };
    };
    return TwoLeft;
})();
var TwoRight = (function () {
    function TwoRight(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoRight(value0, value1, value2);
            };
        };
    };
    return TwoRight;
})();
var ThreeLeft = (function () {
    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeLeft;
})();
var ThreeMiddle = (function () {
    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeMiddle.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeMiddle;
})();
var ThreeRight = (function () {
    function ThreeRight(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeRight(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return ThreeRight;
})();
var KickUp = (function () {
    function KickUp(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    KickUp.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new KickUp(value0, value1, value2, value3);
                };
            };
        };
    };
    return KickUp;
})();
var values = function (_449) {
    if (_449 instanceof Leaf) {
        return Data_List.Nil.value;
    };
    if (_449 instanceof Two) {
        return Prelude["++"](Data_List.semigroupList)(values(_449.value0))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(_449.value2))(values(_449.value3)));
    };
    if (_449 instanceof Three) {
        return Prelude["++"](Data_List.semigroupList)(values(_449.value0))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(_449.value2))(Prelude["++"](Data_List.semigroupList)(values(_449.value3))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(_449.value5))(values(_449.value6)))));
    };
    throw new Error("Failed pattern match: " + [ _449.constructor.name ]);
};
var toList = function (_447) {
    if (_447 instanceof Leaf) {
        return Data_List.Nil.value;
    };
    if (_447 instanceof Two) {
        return Prelude["++"](Data_List.semigroupList)(toList(_447.value0))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(new Data_Tuple.Tuple(_447.value1, _447.value2)))(toList(_447.value3)));
    };
    if (_447 instanceof Three) {
        return Prelude["++"](Data_List.semigroupList)(toList(_447.value0))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(new Data_Tuple.Tuple(_447.value1, _447.value2)))(Prelude["++"](Data_List.semigroupList)(toList(_447.value3))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(new Data_Tuple.Tuple(_447.value4, _447.value5)))(toList(_447.value6)))));
    };
    throw new Error("Failed pattern match: " + [ _447.constructor.name ]);
};
var size = Prelude["<<<"](Prelude.semigroupoidFn)(Data_List.length)(values);
var singleton = function (k) {
    return function (v) {
        return new Two(Leaf.value, k, v, Leaf.value);
    };
};
var showTree = function (__dict_Show_0) {
    return function (__dict_Show_1) {
        return function (_442) {
            if (_442 instanceof Leaf) {
                return "Leaf";
            };
            if (_442 instanceof Two) {
                return "Two (" + (showTree(__dict_Show_0)(__dict_Show_1)(_442.value0) + (") (" + (Prelude.show(__dict_Show_0)(_442.value1) + (") (" + (Prelude.show(__dict_Show_1)(_442.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_442.value3) + ")")))))));
            };
            if (_442 instanceof Three) {
                return "Three (" + (showTree(__dict_Show_0)(__dict_Show_1)(_442.value0) + (") (" + (Prelude.show(__dict_Show_0)(_442.value1) + (") (" + (Prelude.show(__dict_Show_1)(_442.value2) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_442.value3) + (") (" + (Prelude.show(__dict_Show_0)(_442.value4) + (") (" + (Prelude.show(__dict_Show_1)(_442.value5) + (") (" + (showTree(__dict_Show_0)(__dict_Show_1)(_442.value6) + ")")))))))))))));
            };
            throw new Error("Failed pattern match: " + [ _442.constructor.name ]);
        };
    };
};
var showMap = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (m) {
            return "fromList " + Prelude.show(Data_List.showList(Data_Tuple.showTuple(__dict_Show_2)(__dict_Show_3)))(toList(m));
        });
    };
};
var lookup = function (__copy___dict_Ord_6) {
    return function (__copy_k) {
        return function (__copy__444) {
            var __dict_Ord_6 = __copy___dict_Ord_6;
            var k = __copy_k;
            var _444 = __copy__444;
            tco: while (true) {
                if (_444 instanceof Leaf) {
                    return Data_Maybe.Nothing.value;
                };
                var k_1 = k;
                if (_444 instanceof Two && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k_1)(_444.value1)) {
                    return new Data_Maybe.Just(_444.value2);
                };
                var k_1 = k;
                if (_444 instanceof Two && Prelude["<"](__dict_Ord_6)(k_1)(_444.value1)) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco__444 = _444.value0;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = k_1;
                    _444 = __tco__444;
                    continue tco;
                };
                var k_1 = k;
                if (_444 instanceof Two) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco__444 = _444.value3;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = k_1;
                    _444 = __tco__444;
                    continue tco;
                };
                var k_1 = k;
                if (_444 instanceof Three && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k_1)(_444.value1)) {
                    return new Data_Maybe.Just(_444.value2);
                };
                var k_1 = k;
                if (_444 instanceof Three && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k_1)(_444.value4)) {
                    return new Data_Maybe.Just(_444.value5);
                };
                var k_1 = k;
                if (_444 instanceof Three && Prelude["<"](__dict_Ord_6)(k_1)(_444.value1)) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco__444 = _444.value0;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = k_1;
                    _444 = __tco__444;
                    continue tco;
                };
                var k_1 = k;
                if (_444 instanceof Three && Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["<"](__dict_Ord_6)(_444.value1)(k_1))(Prelude["<="](__dict_Ord_6)(k_1)(_444.value4))) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco__444 = _444.value3;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = k_1;
                    _444 = __tco__444;
                    continue tco;
                };
                if (_444 instanceof Three) {
                    var __tco___dict_Ord_6 = __dict_Ord_6;
                    var __tco_k = k;
                    var __tco__444 = _444.value6;
                    __dict_Ord_6 = __tco___dict_Ord_6;
                    k = __tco_k;
                    _444 = __tco__444;
                    continue tco;
                };
                throw new Error("Failed pattern match: " + [ k.constructor.name, _444.constructor.name ]);
            };
        };
    };
};
var member = function (__dict_Ord_7) {
    return function (k) {
        return function (m) {
            return Data_Maybe.isJust(lookup(__dict_Ord_7)(k)(m));
        };
    };
};
var keys = function (_448) {
    if (_448 instanceof Leaf) {
        return Data_List.Nil.value;
    };
    if (_448 instanceof Two) {
        return Prelude["++"](Data_List.semigroupList)(keys(_448.value0))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(_448.value1))(keys(_448.value3)));
    };
    if (_448 instanceof Three) {
        return Prelude["++"](Data_List.semigroupList)(keys(_448.value0))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(_448.value1))(Prelude["++"](Data_List.semigroupList)(keys(_448.value3))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(_448.value4))(keys(_448.value6)))));
    };
    throw new Error("Failed pattern match: " + [ _448.constructor.name ]);
};
var isEmpty = function (_443) {
    if (_443 instanceof Leaf) {
        return true;
    };
    return false;
};
var functorMap = new Prelude.Functor(function (f) {
    return function (_450) {
        if (_450 instanceof Leaf) {
            return Leaf.value;
        };
        if (_450 instanceof Two) {
            return new Two(Prelude.map(functorMap)(f)(_450.value0), _450.value1, f(_450.value2), Prelude.map(functorMap)(f)(_450.value3));
        };
        if (_450 instanceof Three) {
            return new Three(Prelude.map(functorMap)(f)(_450.value0), _450.value1, f(_450.value2), Prelude.map(functorMap)(f)(_450.value3), _450.value4, f(_450.value5), Prelude.map(functorMap)(f)(_450.value6));
        };
        throw new Error("Failed pattern match: " + [ f.constructor.name, _450.constructor.name ]);
    };
});
var fromZipper = function (__copy___dict_Ord_8) {
    return function (__copy__445) {
        return function (__copy__446) {
            var __dict_Ord_8 = __copy___dict_Ord_8;
            var _445 = __copy__445;
            var _446 = __copy__446;
            tco: while (true) {
                if (_445 instanceof Data_List.Nil) {
                    return _446;
                };
                if (_445 instanceof Data_List.Cons && _445.value0 instanceof TwoLeft) {
                    var __tco___dict_Ord_8 = __dict_Ord_8;
                    var __tco__445 = _445.value1;
                    var __tco__446 = new Two(_446, _445.value0.value0, _445.value0.value1, _445.value0.value2);
                    __dict_Ord_8 = __tco___dict_Ord_8;
                    _445 = __tco__445;
                    _446 = __tco__446;
                    continue tco;
                };
                if (_445 instanceof Data_List.Cons && _445.value0 instanceof TwoRight) {
                    var __tco___dict_Ord_8 = __dict_Ord_8;
                    var __tco__445 = _445.value1;
                    var __tco__446 = new Two(_445.value0.value0, _445.value0.value1, _445.value0.value2, _446);
                    __dict_Ord_8 = __tco___dict_Ord_8;
                    _445 = __tco__445;
                    _446 = __tco__446;
                    continue tco;
                };
                if (_445 instanceof Data_List.Cons && _445.value0 instanceof ThreeLeft) {
                    var __tco___dict_Ord_8 = __dict_Ord_8;
                    var __tco__445 = _445.value1;
                    var __tco__446 = new Three(_446, _445.value0.value0, _445.value0.value1, _445.value0.value2, _445.value0.value3, _445.value0.value4, _445.value0.value5);
                    __dict_Ord_8 = __tco___dict_Ord_8;
                    _445 = __tco__445;
                    _446 = __tco__446;
                    continue tco;
                };
                if (_445 instanceof Data_List.Cons && _445.value0 instanceof ThreeMiddle) {
                    var __tco___dict_Ord_8 = __dict_Ord_8;
                    var __tco__445 = _445.value1;
                    var __tco__446 = new Three(_445.value0.value0, _445.value0.value1, _445.value0.value2, _446, _445.value0.value3, _445.value0.value4, _445.value0.value5);
                    __dict_Ord_8 = __tco___dict_Ord_8;
                    _445 = __tco__445;
                    _446 = __tco__446;
                    continue tco;
                };
                if (_445 instanceof Data_List.Cons && _445.value0 instanceof ThreeRight) {
                    var __tco___dict_Ord_8 = __dict_Ord_8;
                    var __tco__445 = _445.value1;
                    var __tco__446 = new Three(_445.value0.value0, _445.value0.value1, _445.value0.value2, _445.value0.value3, _445.value0.value4, _445.value0.value5, _446);
                    __dict_Ord_8 = __tco___dict_Ord_8;
                    _445 = __tco__445;
                    _446 = __tco__446;
                    continue tco;
                };
                throw new Error("Failed pattern match: " + [ _445.constructor.name, _446.constructor.name ]);
            };
        };
    };
};
var insert = function (__dict_Ord_9) {
    var up = function (__copy___dict_Ord_10) {
        return function (__copy__453) {
            return function (__copy__454) {
                var __dict_Ord_10 = __copy___dict_Ord_10;
                var _453 = __copy__453;
                var _454 = __copy__454;
                tco: while (true) {
                    if (_453 instanceof Data_List.Nil) {
                        return new Two(_454.value0, _454.value1, _454.value2, _454.value3);
                    };
                    if (_453 instanceof Data_List.Cons && _453.value0 instanceof TwoLeft) {
                        return fromZipper(__dict_Ord_10)(_453.value1)(new Three(_454.value0, _454.value1, _454.value2, _454.value3, _453.value0.value0, _453.value0.value1, _453.value0.value2));
                    };
                    if (_453 instanceof Data_List.Cons && _453.value0 instanceof TwoRight) {
                        return fromZipper(__dict_Ord_10)(_453.value1)(new Three(_453.value0.value0, _453.value0.value1, _453.value0.value2, _454.value0, _454.value1, _454.value2, _454.value3));
                    };
                    if (_453 instanceof Data_List.Cons && _453.value0 instanceof ThreeLeft) {
                        var __tco___dict_Ord_10 = __dict_Ord_10;
                        var __tco__453 = _453.value1;
                        var __tco__454 = new KickUp(new Two(_454.value0, _454.value1, _454.value2, _454.value3), _453.value0.value0, _453.value0.value1, new Two(_453.value0.value2, _453.value0.value3, _453.value0.value4, _453.value0.value5));
                        __dict_Ord_10 = __tco___dict_Ord_10;
                        _453 = __tco__453;
                        _454 = __tco__454;
                        continue tco;
                    };
                    if (_453 instanceof Data_List.Cons && _453.value0 instanceof ThreeMiddle) {
                        var __tco___dict_Ord_10 = __dict_Ord_10;
                        var __tco__453 = _453.value1;
                        var __tco__454 = new KickUp(new Two(_453.value0.value0, _453.value0.value1, _453.value0.value2, _454.value0), _454.value1, _454.value2, new Two(_454.value3, _453.value0.value3, _453.value0.value4, _453.value0.value5));
                        __dict_Ord_10 = __tco___dict_Ord_10;
                        _453 = __tco__453;
                        _454 = __tco__454;
                        continue tco;
                    };
                    if (_453 instanceof Data_List.Cons && _453.value0 instanceof ThreeRight) {
                        var __tco___dict_Ord_10 = __dict_Ord_10;
                        var __tco__453 = _453.value1;
                        var __tco__454 = new KickUp(new Two(_453.value0.value0, _453.value0.value1, _453.value0.value2, _453.value0.value3), _453.value0.value4, _453.value0.value5, new Two(_454.value0, _454.value1, _454.value2, _454.value3));
                        __dict_Ord_10 = __tco___dict_Ord_10;
                        _453 = __tco__453;
                        _454 = __tco__454;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maps/src/Data/Map.purs line 147, column 1 - line 148, column 1: " + [ _453.constructor.name, _454.constructor.name ]);
                };
            };
        };
    };
    var down = function (__copy___dict_Ord_11) {
        return function (__copy_ctx) {
            return function (__copy_k) {
                return function (__copy_v) {
                    return function (__copy__452) {
                        var __dict_Ord_11 = __copy___dict_Ord_11;
                        var ctx = __copy_ctx;
                        var k = __copy_k;
                        var v = __copy_v;
                        var _452 = __copy__452;
                        tco: while (true) {
                            var ctx_1 = ctx;
                            var k_1 = k;
                            var v_1 = v;
                            if (_452 instanceof Leaf) {
                                return up(__dict_Ord_11)(ctx_1)(new KickUp(Leaf.value, k_1, v_1, Leaf.value));
                            };
                            var ctx_1 = ctx;
                            var k_1 = k;
                            var v_1 = v;
                            if (_452 instanceof Two && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k_1)(_452.value1)) {
                                return fromZipper(__dict_Ord_11)(ctx_1)(new Two(_452.value0, k_1, v_1, _452.value3));
                            };
                            var ctx_1 = ctx;
                            var k_1 = k;
                            var v_1 = v;
                            if (_452 instanceof Two && Prelude["<"](__dict_Ord_11)(k_1)(_452.value1)) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = new Data_List.Cons(new TwoLeft(_452.value1, _452.value2, _452.value3), ctx_1);
                                var __tco__452 = _452.value0;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = k_1;
                                v = v_1;
                                _452 = __tco__452;
                                continue tco;
                            };
                            var ctx_1 = ctx;
                            var k_1 = k;
                            var v_1 = v;
                            if (_452 instanceof Two) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = new Data_List.Cons(new TwoRight(_452.value0, _452.value1, _452.value2), ctx_1);
                                var __tco__452 = _452.value3;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = k_1;
                                v = v_1;
                                _452 = __tco__452;
                                continue tco;
                            };
                            var ctx_1 = ctx;
                            var k_1 = k;
                            var v_1 = v;
                            if (_452 instanceof Three && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k_1)(_452.value1)) {
                                return fromZipper(__dict_Ord_11)(ctx_1)(new Three(_452.value0, k_1, v_1, _452.value3, _452.value4, _452.value5, _452.value6));
                            };
                            var ctx_1 = ctx;
                            var k_1 = k;
                            var v_1 = v;
                            if (_452 instanceof Three && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k_1)(_452.value4)) {
                                return fromZipper(__dict_Ord_11)(ctx_1)(new Three(_452.value0, _452.value1, _452.value2, _452.value3, k_1, v_1, _452.value6));
                            };
                            var ctx_1 = ctx;
                            var k_1 = k;
                            var v_1 = v;
                            if (_452 instanceof Three && Prelude["<"](__dict_Ord_11)(k_1)(_452.value1)) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = new Data_List.Cons(new ThreeLeft(_452.value1, _452.value2, _452.value3, _452.value4, _452.value5, _452.value6), ctx_1);
                                var __tco__452 = _452.value0;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = k_1;
                                v = v_1;
                                _452 = __tco__452;
                                continue tco;
                            };
                            var ctx_1 = ctx;
                            var k_1 = k;
                            var v_1 = v;
                            if (_452 instanceof Three && Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["<"](__dict_Ord_11)(_452.value1)(k_1))(Prelude["<="](__dict_Ord_11)(k_1)(_452.value4))) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = new Data_List.Cons(new ThreeMiddle(_452.value0, _452.value1, _452.value2, _452.value4, _452.value5, _452.value6), ctx_1);
                                var __tco__452 = _452.value3;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = k_1;
                                v = v_1;
                                _452 = __tco__452;
                                continue tco;
                            };
                            if (_452 instanceof Three) {
                                var __tco___dict_Ord_11 = __dict_Ord_11;
                                var __tco_ctx = new Data_List.Cons(new ThreeRight(_452.value0, _452.value1, _452.value2, _452.value3, _452.value4, _452.value5), ctx);
                                var __tco_k = k;
                                var __tco_v = v;
                                var __tco__452 = _452.value6;
                                __dict_Ord_11 = __tco___dict_Ord_11;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                v = __tco_v;
                                _452 = __tco__452;
                                continue tco;
                            };
                            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maps/src/Data/Map.purs line 147, column 1 - line 148, column 1: " + [ ctx.constructor.name, k.constructor.name, v.constructor.name, _452.constructor.name ]);
                        };
                    };
                };
            };
        };
    };
    return down(__dict_Ord_9)(Data_List.Nil.value);
};
var foldableMap = new Data_Foldable.Foldable(function (__dict_Monoid_12) {
    return function (f) {
        return function (m) {
            return Data_Foldable.foldMap(Data_List.foldableList)(__dict_Monoid_12)(f)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldl(Data_List.foldableList)(f)(z)(values(m));
        };
    };
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_List.foldableList)(f)(z)(values(m));
        };
    };
});
var eqMap = function (__dict_Eq_13) {
    return function (__dict_Eq_14) {
        return new Prelude.Eq(function (m1) {
            return function (m2) {
                return Prelude["=="](Data_List.eqList(Data_Tuple.eqTuple(__dict_Eq_13)(__dict_Eq_14)))(toList(m1))(toList(m2));
            };
        });
    };
};
var ordMap = function (__dict_Ord_4) {
    return function (__dict_Ord_5) {
        return new Prelude.Ord(function () {
            return eqMap(__dict_Ord_4["__superclass_Prelude.Eq_0"]())(__dict_Ord_5["__superclass_Prelude.Eq_0"]());
        }, function (m1) {
            return function (m2) {
                return Prelude.compare(Data_List.ordList(Data_Tuple.ordTuple(__dict_Ord_4)(__dict_Ord_5)))(toList(m1))(toList(m2));
            };
        });
    };
};
var empty = Leaf.value;
var fromList = function (__dict_Ord_15) {
    return Data_Foldable.foldl(Data_List.foldableList)(function (m) {
        return function (_440) {
            return insert(__dict_Ord_15)(_440.value0)(_440.value1)(m);
        };
    })(empty);
};
var $$delete = function (__dict_Ord_17) {
    var up = function (__copy___dict_Ord_18) {
        return function (__copy__456) {
            return function (__copy__457) {
                var __dict_Ord_18 = __copy___dict_Ord_18;
                var _456 = __copy__456;
                var _457 = __copy__457;
                tco: while (true) {
                    if (_456 instanceof Data_List.Nil) {
                        return _457;
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof TwoLeft && (_456.value0.value2 instanceof Leaf && _457 instanceof Leaf))) {
                        return fromZipper(__dict_Ord_18)(_456.value1)(new Two(Leaf.value, _456.value0.value0, _456.value0.value1, Leaf.value));
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof TwoRight && (_456.value0.value0 instanceof Leaf && _457 instanceof Leaf))) {
                        return fromZipper(__dict_Ord_18)(_456.value1)(new Two(Leaf.value, _456.value0.value1, _456.value0.value2, Leaf.value));
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof TwoLeft && _456.value0.value2 instanceof Two)) {
                        var __tco___dict_Ord_18 = __dict_Ord_18;
                        var __tco__456 = _456.value1;
                        var __tco__457 = new Three(_457, _456.value0.value0, _456.value0.value1, _456.value0.value2.value0, _456.value0.value2.value1, _456.value0.value2.value2, _456.value0.value2.value3);
                        __dict_Ord_18 = __tco___dict_Ord_18;
                        _456 = __tco__456;
                        _457 = __tco__457;
                        continue tco;
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof TwoRight && _456.value0.value0 instanceof Two)) {
                        var __tco___dict_Ord_18 = __dict_Ord_18;
                        var __tco__456 = _456.value1;
                        var __tco__457 = new Three(_456.value0.value0.value0, _456.value0.value0.value1, _456.value0.value0.value2, _456.value0.value0.value3, _456.value0.value1, _456.value0.value2, _457);
                        __dict_Ord_18 = __tco___dict_Ord_18;
                        _456 = __tco__456;
                        _457 = __tco__457;
                        continue tco;
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof TwoLeft && _456.value0.value2 instanceof Three)) {
                        return fromZipper(__dict_Ord_18)(_456.value1)(new Two(new Two(_457, _456.value0.value0, _456.value0.value1, _456.value0.value2.value0), _456.value0.value2.value1, _456.value0.value2.value2, new Two(_456.value0.value2.value3, _456.value0.value2.value4, _456.value0.value2.value5, _456.value0.value2.value6)));
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof TwoRight && _456.value0.value0 instanceof Three)) {
                        return fromZipper(__dict_Ord_18)(_456.value1)(new Two(new Two(_456.value0.value0.value0, _456.value0.value0.value1, _456.value0.value0.value2, _456.value0.value0.value3), _456.value0.value0.value4, _456.value0.value0.value5, new Two(_456.value0.value0.value6, _456.value0.value1, _456.value0.value2, _457)));
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof ThreeLeft && (_456.value0.value2 instanceof Leaf && (_456.value0.value5 instanceof Leaf && _457 instanceof Leaf)))) {
                        return fromZipper(__dict_Ord_18)(_456.value1)(new Three(Leaf.value, _456.value0.value0, _456.value0.value1, Leaf.value, _456.value0.value3, _456.value0.value4, Leaf.value));
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof ThreeMiddle && (_456.value0.value0 instanceof Leaf && (_456.value0.value5 instanceof Leaf && _457 instanceof Leaf)))) {
                        return fromZipper(__dict_Ord_18)(_456.value1)(new Three(Leaf.value, _456.value0.value1, _456.value0.value2, Leaf.value, _456.value0.value3, _456.value0.value4, Leaf.value));
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof ThreeRight && (_456.value0.value0 instanceof Leaf && (_456.value0.value3 instanceof Leaf && _457 instanceof Leaf)))) {
                        return fromZipper(__dict_Ord_18)(_456.value1)(new Three(Leaf.value, _456.value0.value1, _456.value0.value2, Leaf.value, _456.value0.value4, _456.value0.value5, Leaf.value));
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof ThreeLeft && _456.value0.value2 instanceof Two)) {
                        return fromZipper(__dict_Ord_18)(_456.value1)(new Two(new Three(_457, _456.value0.value0, _456.value0.value1, _456.value0.value2.value0, _456.value0.value2.value1, _456.value0.value2.value2, _456.value0.value2.value3), _456.value0.value3, _456.value0.value4, _456.value0.value5));
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof ThreeMiddle && _456.value0.value0 instanceof Two)) {
                        return fromZipper(__dict_Ord_18)(_456.value1)(new Two(new Three(_456.value0.value0.value0, _456.value0.value0.value1, _456.value0.value0.value2, _456.value0.value0.value3, _456.value0.value1, _456.value0.value2, _457), _456.value0.value3, _456.value0.value4, _456.value0.value5));
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof ThreeMiddle && _456.value0.value5 instanceof Two)) {
                        return fromZipper(__dict_Ord_18)(_456.value1)(new Two(_456.value0.value0, _456.value0.value1, _456.value0.value2, new Three(_457, _456.value0.value3, _456.value0.value4, _456.value0.value5.value0, _456.value0.value5.value1, _456.value0.value5.value2, _456.value0.value5.value3)));
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof ThreeRight && _456.value0.value3 instanceof Two)) {
                        return fromZipper(__dict_Ord_18)(_456.value1)(new Two(_456.value0.value0, _456.value0.value1, _456.value0.value2, new Three(_456.value0.value3.value0, _456.value0.value3.value1, _456.value0.value3.value2, _456.value0.value3.value3, _456.value0.value4, _456.value0.value5, _457)));
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof ThreeLeft && _456.value0.value2 instanceof Three)) {
                        return fromZipper(__dict_Ord_18)(_456.value1)(new Three(new Two(_457, _456.value0.value0, _456.value0.value1, _456.value0.value2.value0), _456.value0.value2.value1, _456.value0.value2.value2, new Two(_456.value0.value2.value3, _456.value0.value2.value4, _456.value0.value2.value5, _456.value0.value2.value6), _456.value0.value3, _456.value0.value4, _456.value0.value5));
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof ThreeMiddle && _456.value0.value0 instanceof Three)) {
                        return fromZipper(__dict_Ord_18)(_456.value1)(new Three(new Two(_456.value0.value0.value0, _456.value0.value0.value1, _456.value0.value0.value2, _456.value0.value0.value3), _456.value0.value0.value4, _456.value0.value0.value5, new Two(_456.value0.value0.value6, _456.value0.value1, _456.value0.value2, _457), _456.value0.value3, _456.value0.value4, _456.value0.value5));
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof ThreeMiddle && _456.value0.value5 instanceof Three)) {
                        return fromZipper(__dict_Ord_18)(_456.value1)(new Three(_456.value0.value0, _456.value0.value1, _456.value0.value2, new Two(_457, _456.value0.value3, _456.value0.value4, _456.value0.value5.value0), _456.value0.value5.value1, _456.value0.value5.value2, new Two(_456.value0.value5.value3, _456.value0.value5.value4, _456.value0.value5.value5, _456.value0.value5.value6)));
                    };
                    if (_456 instanceof Data_List.Cons && (_456.value0 instanceof ThreeRight && _456.value0.value3 instanceof Three)) {
                        return fromZipper(__dict_Ord_18)(_456.value1)(new Three(_456.value0.value0, _456.value0.value1, _456.value0.value2, new Two(_456.value0.value3.value0, _456.value0.value3.value1, _456.value0.value3.value2, _456.value0.value3.value3), _456.value0.value3.value4, _456.value0.value3.value5, new Two(_456.value0.value3.value6, _456.value0.value4, _456.value0.value5, _457)));
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maps/src/Data/Map.purs line 170, column 1 - line 171, column 1: " + [ _456.constructor.name, _457.constructor.name ]);
                };
            };
        };
    };
    var removeMaxNode = function (__copy___dict_Ord_19) {
        return function (__copy_ctx) {
            return function (__copy__459) {
                var __dict_Ord_19 = __copy___dict_Ord_19;
                var ctx = __copy_ctx;
                var _459 = __copy__459;
                tco: while (true) {
                    var ctx_1 = ctx;
                    if (_459 instanceof Two && (_459.value0 instanceof Leaf && _459.value3 instanceof Leaf)) {
                        return up(__dict_Ord_19)(ctx_1)(Leaf.value);
                    };
                    var ctx_1 = ctx;
                    if (_459 instanceof Two) {
                        var __tco___dict_Ord_19 = __dict_Ord_19;
                        var __tco_ctx = new Data_List.Cons(new TwoRight(_459.value0, _459.value1, _459.value2), ctx_1);
                        var __tco__459 = _459.value3;
                        __dict_Ord_19 = __tco___dict_Ord_19;
                        ctx = __tco_ctx;
                        _459 = __tco__459;
                        continue tco;
                    };
                    var ctx_1 = ctx;
                    if (_459 instanceof Three && (_459.value0 instanceof Leaf && (_459.value3 instanceof Leaf && _459.value6 instanceof Leaf))) {
                        return up(__dict_Ord_19)(new Data_List.Cons(new TwoRight(Leaf.value, _459.value1, _459.value2), ctx_1))(Leaf.value);
                    };
                    if (_459 instanceof Three) {
                        var __tco___dict_Ord_19 = __dict_Ord_19;
                        var __tco_ctx = new Data_List.Cons(new ThreeRight(_459.value0, _459.value1, _459.value2, _459.value3, _459.value4, _459.value5), ctx);
                        var __tco__459 = _459.value6;
                        __dict_Ord_19 = __tco___dict_Ord_19;
                        ctx = __tco_ctx;
                        _459 = __tco__459;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maps/src/Data/Map.purs line 170, column 1 - line 171, column 1: " + [ ctx.constructor.name, _459.constructor.name ]);
                };
            };
        };
    };
    var maxNode = function (__copy___dict_Ord_20) {
        return function (__copy__458) {
            var __dict_Ord_20 = __copy___dict_Ord_20;
            var _458 = __copy__458;
            tco: while (true) {
                if (_458 instanceof Two && _458.value3 instanceof Leaf) {
                    return {
                        key: _458.value1, 
                        value: _458.value2
                    };
                };
                if (_458 instanceof Two) {
                    var __tco___dict_Ord_20 = __dict_Ord_20;
                    var __tco__458 = _458.value3;
                    __dict_Ord_20 = __tco___dict_Ord_20;
                    _458 = __tco__458;
                    continue tco;
                };
                if (_458 instanceof Three && _458.value6 instanceof Leaf) {
                    return {
                        key: _458.value4, 
                        value: _458.value5
                    };
                };
                if (_458 instanceof Three) {
                    var __tco___dict_Ord_20 = __dict_Ord_20;
                    var __tco__458 = _458.value6;
                    __dict_Ord_20 = __tco___dict_Ord_20;
                    _458 = __tco__458;
                    continue tco;
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maps/src/Data/Map.purs line 170, column 1 - line 171, column 1: " + [ _458.constructor.name ]);
            };
        };
    };
    var down = function (__copy___dict_Ord_21) {
        return function (__copy_ctx) {
            return function (__copy_k) {
                return function (__copy__455) {
                    var __dict_Ord_21 = __copy___dict_Ord_21;
                    var ctx = __copy_ctx;
                    var k = __copy_k;
                    var _455 = __copy__455;
                    tco: while (true) {
                        var ctx_1 = ctx;
                        if (_455 instanceof Leaf) {
                            return fromZipper(__dict_Ord_21)(ctx_1)(Leaf.value);
                        };
                        var ctx_1 = ctx;
                        var k_1 = k;
                        if (_455 instanceof Two && (_455.value0 instanceof Leaf && (_455.value3 instanceof Leaf && Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k_1)(_455.value1)))) {
                            return up(__dict_Ord_21)(ctx_1)(Leaf.value);
                        };
                        var ctx_1 = ctx;
                        var k_1 = k;
                        if (_455 instanceof Two) {
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k_1)(_455.value1)) {
                                var max = maxNode(__dict_Ord_21)(_455.value0);
                                return removeMaxNode(__dict_Ord_21)(new Data_List.Cons(new TwoLeft(max.key, max.value, _455.value3), ctx_1))(_455.value0);
                            };
                            if (Prelude["<"](__dict_Ord_21)(k_1)(_455.value1)) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = new Data_List.Cons(new TwoLeft(_455.value1, _455.value2, _455.value3), ctx_1);
                                var __tco__455 = _455.value0;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = k_1;
                                _455 = __tco__455;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = new Data_List.Cons(new TwoRight(_455.value0, _455.value1, _455.value2), ctx_1);
                                var __tco__455 = _455.value3;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = k_1;
                                _455 = __tco__455;
                                continue tco;
                            };
                        };
                        var ctx_1 = ctx;
                        var k_1 = k;
                        if (_455 instanceof Three && (_455.value0 instanceof Leaf && (_455.value3 instanceof Leaf && _455.value6 instanceof Leaf))) {
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k_1)(_455.value1)) {
                                return fromZipper(__dict_Ord_21)(ctx_1)(new Two(Leaf.value, _455.value4, _455.value5, Leaf.value));
                            };
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k_1)(_455.value4)) {
                                return fromZipper(__dict_Ord_21)(ctx_1)(new Two(Leaf.value, _455.value1, _455.value2, Leaf.value));
                            };
                        };
                        if (_455 instanceof Three) {
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_455.value1)) {
                                var max = maxNode(__dict_Ord_21)(_455.value0);
                                return removeMaxNode(__dict_Ord_21)(new Data_List.Cons(new ThreeLeft(max.key, max.value, _455.value3, _455.value4, _455.value5, _455.value6), ctx))(_455.value0);
                            };
                            if (Prelude["=="](__dict_Ord_21["__superclass_Prelude.Eq_0"]())(k)(_455.value4)) {
                                var max = maxNode(__dict_Ord_21)(_455.value3);
                                return removeMaxNode(__dict_Ord_21)(new Data_List.Cons(new ThreeMiddle(_455.value0, _455.value1, _455.value2, max.key, max.value, _455.value6), ctx))(_455.value3);
                            };
                            if (Prelude["<"](__dict_Ord_21)(k)(_455.value1)) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = new Data_List.Cons(new ThreeLeft(_455.value1, _455.value2, _455.value3, _455.value4, _455.value5, _455.value6), ctx);
                                var __tco_k = k;
                                var __tco__455 = _455.value0;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _455 = __tco__455;
                                continue tco;
                            };
                            if (Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["<"](__dict_Ord_21)(_455.value1)(k))(Prelude["<"](__dict_Ord_21)(k)(_455.value4))) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = new Data_List.Cons(new ThreeMiddle(_455.value0, _455.value1, _455.value2, _455.value4, _455.value5, _455.value6), ctx);
                                var __tco_k = k;
                                var __tco__455 = _455.value3;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _455 = __tco__455;
                                continue tco;
                            };
                            if (Prelude.otherwise) {
                                var __tco___dict_Ord_21 = __dict_Ord_21;
                                var __tco_ctx = new Data_List.Cons(new ThreeRight(_455.value0, _455.value1, _455.value2, _455.value3, _455.value4, _455.value5), ctx);
                                var __tco_k = k;
                                var __tco__455 = _455.value6;
                                __dict_Ord_21 = __tco___dict_Ord_21;
                                ctx = __tco_ctx;
                                k = __tco_k;
                                _455 = __tco__455;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maps/src/Data/Map.purs line 170, column 1 - line 171, column 1: " + [ ctx.constructor.name, k.constructor.name, _455.constructor.name ]);
                    };
                };
            };
        };
    };
    return down(__dict_Ord_17)(Data_List.Nil.value);
};
var checkValid = function (tree) {
    var allHeights = function (_451) {
        if (_451 instanceof Leaf) {
            return Prelude.pure(Data_List.applicativeList)(Prelude.zero(Prelude.semiringInt));
        };
        if (_451 instanceof Two) {
            return Prelude.map(Data_List.functorList)(function (n) {
                return Prelude["+"](Prelude.semiringInt)(n)(Prelude.one(Prelude.semiringInt));
            })(Prelude["++"](Data_List.semigroupList)(allHeights(_451.value0))(allHeights(_451.value3)));
        };
        if (_451 instanceof Three) {
            return Prelude.map(Data_List.functorList)(function (n) {
                return Prelude["+"](Prelude.semiringInt)(n)(Prelude.one(Prelude.semiringInt));
            })(Prelude["++"](Data_List.semigroupList)(allHeights(_451.value0))(Prelude["++"](Data_List.semigroupList)(allHeights(_451.value3))(allHeights(_451.value6))));
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maps/src/Data/Map.purs line 105, column 1 - line 106, column 1: " + [ _451.constructor.name ]);
    };
    return Prelude["=="](Prelude.eqInt)(Data_List.length(Data_List.nub(Prelude.eqInt)(allHeights(tree))))(Prelude.one(Prelude.semiringInt));
};
var alter = function (__dict_Ord_22) {
    return function (f) {
        return function (k) {
            return function (m) {
                var _1295 = f(lookup(__dict_Ord_22)(k)(m));
                if (_1295 instanceof Data_Maybe.Nothing) {
                    return $$delete(__dict_Ord_22)(k)(m);
                };
                if (_1295 instanceof Data_Maybe.Just) {
                    return insert(__dict_Ord_22)(k)(_1295.value0)(m);
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maps/src/Data/Map.purs line 227, column 1 - line 228, column 1: " + [ _1295.constructor.name ]);
            };
        };
    };
};
var fromListWith = function (__dict_Ord_23) {
    return function (f) {
        var combine = function (v) {
            return function (_460) {
                if (_460 instanceof Data_Maybe.Just) {
                    return Data_Maybe.Just.create(f(v)(_460.value0));
                };
                if (_460 instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v);
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maps/src/Data/Map.purs line 250, column 3 - line 251, column 3: " + [ v.constructor.name, _460.constructor.name ]);
            };
        };
        return Data_Foldable.foldl(Data_List.foldableList)(function (m) {
            return function (_441) {
                return alter(__dict_Ord_23)(combine(_441.value1))(_441.value0)(m);
            };
        })(empty);
    };
};
var unionWith = function (__dict_Ord_24) {
    return function (f) {
        return function (m1) {
            return function (m2) {
                var go = function (m) {
                    return function (_461) {
                        return alter(__dict_Ord_24)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Maybe.maybe(_461.value1)(f(_461.value1))))(_461.value0)(m);
                    };
                };
                return Data_Foldable.foldl(Data_List.foldableList)(go)(m2)(toList(m1));
            };
        };
    };
};
var union = function (__dict_Ord_25) {
    return unionWith(__dict_Ord_25)(Prelude["const"]);
};
var semigroupMap = function (__dict_Ord_26) {
    return new Prelude.Semigroup(union(__dict_Ord_26));
};
var monoidMap = function (__dict_Ord_16) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMap(__dict_Ord_16);
    }, empty);
};
var traversableMap = function (__dict_Ord_27) {
    return new Data_Traversable.Traversable(function () {
        return foldableMap;
    }, function () {
        return functorMap;
    }, function (__dict_Applicative_29) {
        return Data_Traversable.traverse(traversableMap(__dict_Ord_27))(__dict_Applicative_29)(Prelude.id(Prelude.categoryFn));
    }, function (__dict_Applicative_28) {
        return function (f) {
            return function (ms) {
                return Data_Foldable.foldr(Data_List.foldableList)(function (x) {
                    return function (acc) {
                        return Prelude["<*>"](__dict_Applicative_28["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_28["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union(__dict_Ord_27))(x))(acc);
                    };
                })(Prelude.pure(__dict_Applicative_28)(empty))(Prelude["<$>"](Data_List.functorList)(Prelude["<$>"]((__dict_Applicative_28["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_List.functorList)(Data_Traversable.traverse(Data_Tuple.traversableTuple)(__dict_Applicative_28)(f))(toList(ms))));
            };
        };
    });
};
var unions = function (__dict_Ord_30) {
    return function (__dict_Foldable_31) {
        return Data_Foldable.foldl(__dict_Foldable_31)(union(__dict_Ord_30))(empty);
    };
};
var update = function (__dict_Ord_32) {
    return function (f) {
        return function (k) {
            return function (m) {
                return alter(__dict_Ord_32)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
};
module.exports = {
    size: size, 
    unions: unions, 
    unionWith: unionWith, 
    union: union, 
    values: values, 
    keys: keys, 
    update: update, 
    alter: alter, 
    member: member, 
    "delete": $$delete, 
    fromListWith: fromListWith, 
    fromList: fromList, 
    toList: toList, 
    lookup: lookup, 
    insert: insert, 
    checkValid: checkValid, 
    singleton: singleton, 
    isEmpty: isEmpty, 
    empty: empty, 
    showTree: showTree, 
    eqMap: eqMap, 
    showMap: showMap, 
    ordMap: ordMap, 
    semigroupMap: semigroupMap, 
    monoidMap: monoidMap, 
    functorMap: functorMap, 
    foldableMap: foldableMap, 
    traversableMap: traversableMap
};

},{"Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe.First/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Control_Comonad = require("Control.Comonad");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var First = function (x) {
    return x;
};
var showFirst = function (__dict_Show_0) {
    return new Prelude.Show(function (_384) {
        return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_0))(_384) + ")");
    });
};
var semigroupFirst = new Prelude.Semigroup(function (_385) {
    return function (second) {
        if (_385 instanceof Data_Maybe.Just) {
            return _385;
        };
        return second;
    };
});
var runFirst = function (_374) {
    return _374;
};
var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var functorFirst = new Prelude.Functor(function (f) {
    return function (_379) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(f)(_379);
    };
});
var invariantFirst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorFirst));
var extendFirst = new Control_Extend.Extend(function () {
    return functorFirst;
}, function (f) {
    return function (_383) {
        return Control_Extend.extend(Data_Maybe.extendMaybe)(Prelude["<<<"](Prelude.semigroupoidFn)(f)(First))(_383);
    };
});
var eqFirst = function (__dict_Eq_2) {
    return new Prelude.Eq(function (_375) {
        return function (_376) {
            return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_2))(_375)(_376);
        };
    });
};
var ordFirst = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqFirst(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, function (_377) {
        return function (_378) {
            return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1))(_377)(_378);
        };
    });
};
var boundedFirst = function (__dict_Bounded_3) {
    return new Prelude.Bounded(Prelude.bottom(Data_Maybe.boundedMaybe(__dict_Bounded_3)), Prelude.top(Data_Maybe.boundedMaybe(__dict_Bounded_3)));
};
var applyFirst = new Prelude.Apply(function () {
    return functorFirst;
}, function (_380) {
    return function (_381) {
        return Prelude["<*>"](Data_Maybe.applyMaybe)(_380)(_381);
    };
});
var bindFirst = new Prelude.Bind(function () {
    return applyFirst;
}, function (_382) {
    return function (f) {
        return Prelude.bind(Data_Maybe.bindMaybe)(_382)(Prelude["<<<"](Prelude.semigroupoidFn)(runFirst)(f));
    };
});
var applicativeFirst = new Prelude.Applicative(function () {
    return applyFirst;
}, Prelude["<<<"](Prelude.semigroupoidFn)(First)(Prelude.pure(Data_Maybe.applicativeMaybe)));
var monadFirst = new Prelude.Monad(function () {
    return applicativeFirst;
}, function () {
    return bindFirst;
});
module.exports = {
    First: First, 
    runFirst: runFirst, 
    eqFirst: eqFirst, 
    ordFirst: ordFirst, 
    boundedFirst: boundedFirst, 
    functorFirst: functorFirst, 
    applyFirst: applyFirst, 
    applicativeFirst: applicativeFirst, 
    bindFirst: bindFirst, 
    monadFirst: monadFirst, 
    extendFirst: extendFirst, 
    invariantFirst: invariantFirst, 
    showFirst: showFirst, 
    semigroupFirst: semigroupFirst, 
    monoidFirst: monoidFirst
};

},{"Control.Comonad":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Comonad/index.js","Control.Extend":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe.Last/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Control_Comonad = require("Control.Comonad");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Last = function (x) {
    return x;
};
var showLast = function (__dict_Show_0) {
    return new Prelude.Show(function (_396) {
        return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_0))(_396) + ")");
    });
};
var semigroupLast = new Prelude.Semigroup(function (last) {
    return function (_397) {
        if (_397 instanceof Data_Maybe.Just) {
            return _397;
        };
        if (_397 instanceof Data_Maybe.Nothing) {
            return last;
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maybe/src/Data/Maybe/Last.purs line 57, column 1 - line 61, column 1: " + [ last.constructor.name, _397.constructor.name ]);
    };
});
var runLast = function (_386) {
    return _386;
};
var monoidLast = new Data_Monoid.Monoid(function () {
    return semigroupLast;
}, Data_Maybe.Nothing.value);
var functorLast = new Prelude.Functor(function (f) {
    return function (_391) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(f)(_391);
    };
});
var invariantLast = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorLast));
var extendLast = new Control_Extend.Extend(function () {
    return functorLast;
}, function (f) {
    return function (_395) {
        return Control_Extend.extend(Data_Maybe.extendMaybe)(Prelude["<<<"](Prelude.semigroupoidFn)(f)(Last))(_395);
    };
});
var eqLast = function (__dict_Eq_2) {
    return new Prelude.Eq(function (_387) {
        return function (_388) {
            return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_2))(_387)(_388);
        };
    });
};
var ordLast = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqLast(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, function (_389) {
        return function (_390) {
            return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1))(_389)(_390);
        };
    });
};
var boundedLast = function (__dict_Bounded_3) {
    return new Prelude.Bounded(Prelude.bottom(Data_Maybe.boundedMaybe(__dict_Bounded_3)), Prelude.top(Data_Maybe.boundedMaybe(__dict_Bounded_3)));
};
var applyLast = new Prelude.Apply(function () {
    return functorLast;
}, function (_392) {
    return function (_393) {
        return Prelude["<*>"](Data_Maybe.applyMaybe)(_392)(_393);
    };
});
var bindLast = new Prelude.Bind(function () {
    return applyLast;
}, function (_394) {
    return function (f) {
        return Prelude.bind(Data_Maybe.bindMaybe)(_394)(Prelude["<<<"](Prelude.semigroupoidFn)(runLast)(f));
    };
});
var applicativeLast = new Prelude.Applicative(function () {
    return applyLast;
}, Prelude["<<<"](Prelude.semigroupoidFn)(Last)(Prelude.pure(Data_Maybe.applicativeMaybe)));
var monadLast = new Prelude.Monad(function () {
    return applicativeLast;
}, function () {
    return bindLast;
});
module.exports = {
    Last: Last, 
    runLast: runLast, 
    eqLast: eqLast, 
    ordLast: ordLast, 
    boundedLast: boundedLast, 
    functorLast: functorLast, 
    applyLast: applyLast, 
    applicativeLast: applicativeLast, 
    bindLast: bindLast, 
    monadLast: monadLast, 
    extendLast: extendLast, 
    invariantLast: invariantLast, 
    showLast: showLast, 
    semigroupLast: semigroupLast, 
    monoidLast: monoidLast
};

},{"Control.Comonad":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Comonad/index.js","Control.Extend":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe.Unsafe/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Maybe.Unsafe

exports.unsafeThrow = function (msg) {
  throw new Error(msg);
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var fromJust = function (_423) {
    if (_423 instanceof Data_Maybe.Just) {
        return _423.value0;
    };
    if (_423 instanceof Data_Maybe.Nothing) {
        return $foreign.unsafeThrow("Data.Maybe.Unsafe.fromJust called on Nothing");
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maybe/src/Data/Maybe/Unsafe.purs line 10, column 1 - line 11, column 1: " + [ _423.constructor.name ]);
};
module.exports = {
    fromJust: fromJust, 
    unsafeThrow: $foreign.unsafeThrow
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe.Unsafe/foreign.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Extend = require("Control.Extend");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Monoid = require("Data.Monoid");
var Nothing = (function () {
    function Nothing() {

    };
    Nothing.value = new Nothing();
    return Nothing;
})();
var Just = (function () {
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    return Just;
})();
var showMaybe = function (__dict_Show_0) {
    return new Prelude.Show(function (_373) {
        if (_373 instanceof Just) {
            return "Just (" + (Prelude.show(__dict_Show_0)(_373.value0) + ")");
        };
        if (_373 instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maybe/src/Data/Maybe.purs line 289, column 1 - line 291, column 19: " + [ _373.constructor.name ]);
    });
};
var semigroupMaybe = function (__dict_Semigroup_2) {
    return new Prelude.Semigroup(function (_367) {
        return function (_368) {
            if (_367 instanceof Nothing) {
                return _368;
            };
            if (_368 instanceof Nothing) {
                return _367;
            };
            if (_367 instanceof Just && _368 instanceof Just) {
                return new Just(Prelude["<>"](__dict_Semigroup_2)(_367.value0)(_368.value0));
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maybe/src/Data/Maybe.purs line 231, column 1 - line 236, column 1: " + [ _367.constructor.name, _368.constructor.name ]);
        };
    });
};
var monoidMaybe = function (__dict_Semigroup_6) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMaybe(__dict_Semigroup_6);
    }, Nothing.value);
};
var maybe$prime = function (g) {
    return function (f) {
        return function (_361) {
            if (_361 instanceof Nothing) {
                return g(Prelude.unit);
            };
            if (_361 instanceof Just) {
                return f(_361.value0);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maybe/src/Data/Maybe.purs line 39, column 1 - line 40, column 1: " + [ g.constructor.name, f.constructor.name, _361.constructor.name ]);
        };
    };
};
var maybe = function (b) {
    return function (f) {
        return function (_360) {
            if (_360 instanceof Nothing) {
                return b;
            };
            if (_360 instanceof Just) {
                return f(_360.value0);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maybe/src/Data/Maybe.purs line 26, column 1 - line 27, column 1: " + [ b.constructor.name, f.constructor.name, _360.constructor.name ]);
        };
    };
};
var isNothing = maybe(true)(Prelude["const"](false));
var isJust = maybe(false)(Prelude["const"](true));
var functorMaybe = new Prelude.Functor(function (fn) {
    return function (_362) {
        if (_362 instanceof Just) {
            return new Just(fn(_362.value0));
        };
        return Nothing.value;
    };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
var fromMaybe$prime = function (a) {
    return maybe$prime(a)(Prelude.id(Prelude.categoryFn));
};
var fromMaybe = function (a) {
    return maybe(a)(Prelude.id(Prelude.categoryFn));
};
var extendMaybe = new Control_Extend.Extend(function () {
    return functorMaybe;
}, function (f) {
    return function (_366) {
        if (_366 instanceof Nothing) {
            return Nothing.value;
        };
        return new Just(f(_366));
    };
});
var eqMaybe = function (__dict_Eq_8) {
    return new Prelude.Eq(function (_369) {
        return function (_370) {
            if (_369 instanceof Nothing && _370 instanceof Nothing) {
                return true;
            };
            if (_369 instanceof Just && _370 instanceof Just) {
                return Prelude["=="](__dict_Eq_8)(_369.value0)(_370.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function (__dict_Ord_4) {
    return new Prelude.Ord(function () {
        return eqMaybe(__dict_Ord_4["__superclass_Prelude.Eq_0"]());
    }, function (_371) {
        return function (_372) {
            if (_371 instanceof Just && _372 instanceof Just) {
                return Prelude.compare(__dict_Ord_4)(_371.value0)(_372.value0);
            };
            if (_371 instanceof Nothing && _372 instanceof Nothing) {
                return Prelude.EQ.value;
            };
            if (_371 instanceof Nothing) {
                return Prelude.LT.value;
            };
            if (_372 instanceof Nothing) {
                return Prelude.GT.value;
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maybe/src/Data/Maybe.purs line 269, column 1 - line 275, column 1: " + [ _371.constructor.name, _372.constructor.name ]);
        };
    });
};
var boundedMaybe = function (__dict_Bounded_11) {
    return new Prelude.Bounded(Nothing.value, new Just(Prelude.top(__dict_Bounded_11)));
};
var boundedOrdMaybe = function (__dict_BoundedOrd_10) {
    return new Prelude.BoundedOrd(function () {
        return boundedMaybe(__dict_BoundedOrd_10["__superclass_Prelude.Bounded_0"]());
    }, function () {
        return ordMaybe(__dict_BoundedOrd_10["__superclass_Prelude.Ord_1"]());
    });
};
var applyMaybe = new Prelude.Apply(function () {
    return functorMaybe;
}, function (_363) {
    return function (x) {
        if (_363 instanceof Just) {
            return Prelude["<$>"](functorMaybe)(_363.value0)(x);
        };
        if (_363 instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maybe/src/Data/Maybe.purs line 121, column 1 - line 145, column 1: " + [ _363.constructor.name, x.constructor.name ]);
    };
});
var bindMaybe = new Prelude.Bind(function () {
    return applyMaybe;
}, function (_365) {
    return function (k) {
        if (_365 instanceof Just) {
            return k(_365.value0);
        };
        if (_365 instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maybe/src/Data/Maybe.purs line 180, column 1 - line 199, column 1: " + [ _365.constructor.name, k.constructor.name ]);
    };
});
var booleanAlgebraMaybe = function (__dict_BooleanAlgebra_12) {
    return new Prelude.BooleanAlgebra(function () {
        return boundedMaybe(__dict_BooleanAlgebra_12["__superclass_Prelude.Bounded_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.conj(__dict_BooleanAlgebra_12))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.disj(__dict_BooleanAlgebra_12))(x))(y);
        };
    }, Prelude.map(functorMaybe)(Prelude.not(__dict_BooleanAlgebra_12)));
};
var semiringMaybe = function (__dict_Semiring_1) {
    return new Prelude.Semiring(function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.add(__dict_Semiring_1))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.mul(__dict_Semiring_1))(x))(y);
        };
    }, new Just(Prelude.one(__dict_Semiring_1)), new Just(Prelude.zero(__dict_Semiring_1)));
};
var moduloSemiringMaybe = function (__dict_ModuloSemiring_7) {
    return new Prelude.ModuloSemiring(function () {
        return semiringMaybe(__dict_ModuloSemiring_7["__superclass_Prelude.Semiring_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.div(__dict_ModuloSemiring_7))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.mod(__dict_ModuloSemiring_7))(x))(y);
        };
    });
};
var ringMaybe = function (__dict_Ring_3) {
    return new Prelude.Ring(function () {
        return semiringMaybe(__dict_Ring_3["__superclass_Prelude.Semiring_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.sub(__dict_Ring_3))(x))(y);
        };
    });
};
var divisionRingMaybe = function (__dict_DivisionRing_9) {
    return new Prelude.DivisionRing(function () {
        return moduloSemiringMaybe(__dict_DivisionRing_9["__superclass_Prelude.ModuloSemiring_1"]());
    }, function () {
        return ringMaybe(__dict_DivisionRing_9["__superclass_Prelude.Ring_0"]());
    });
};
var numMaybe = function (__dict_Num_5) {
    return new Prelude.Num(function () {
        return divisionRingMaybe(__dict_Num_5["__superclass_Prelude.DivisionRing_0"]());
    });
};
var applicativeMaybe = new Prelude.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Prelude.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
    return functorMaybe;
}, function (_364) {
    return function (r) {
        if (_364 instanceof Nothing) {
            return r;
        };
        return _364;
    };
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return plusMaybe;
}, function () {
    return applicativeMaybe;
});
var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Nothing: Nothing, 
    Just: Just, 
    isNothing: isNothing, 
    isJust: isJust, 
    "fromMaybe'": fromMaybe$prime, 
    fromMaybe: fromMaybe, 
    "maybe'": maybe$prime, 
    maybe: maybe, 
    functorMaybe: functorMaybe, 
    applyMaybe: applyMaybe, 
    applicativeMaybe: applicativeMaybe, 
    altMaybe: altMaybe, 
    plusMaybe: plusMaybe, 
    alternativeMaybe: alternativeMaybe, 
    bindMaybe: bindMaybe, 
    monadMaybe: monadMaybe, 
    monadPlusMaybe: monadPlusMaybe, 
    extendMaybe: extendMaybe, 
    invariantMaybe: invariantMaybe, 
    semigroupMaybe: semigroupMaybe, 
    monoidMaybe: monoidMaybe, 
    semiringMaybe: semiringMaybe, 
    moduloSemiringMaybe: moduloSemiringMaybe, 
    ringMaybe: ringMaybe, 
    divisionRingMaybe: divisionRingMaybe, 
    numMaybe: numMaybe, 
    eqMaybe: eqMaybe, 
    ordMaybe: ordMaybe, 
    boundedMaybe: boundedMaybe, 
    boundedOrdMaybe: boundedOrdMaybe, 
    booleanAlgebraMaybe: booleanAlgebraMaybe, 
    showMaybe: showMaybe
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Alternative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alternative/index.js","Control.Extend":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Extend/index.js","Control.MonadPlus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.MonadPlus/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Data.Functor.Invariant":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Additive/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Additive = function (x) {
    return x;
};
var showAdditive = function (__dict_Show_0) {
    return new Prelude.Show(function (_275) {
        return "Additive (" + (Prelude.show(__dict_Show_0)(_275) + ")");
    });
};
var semigroupAdditive = function (__dict_Semiring_1) {
    return new Prelude.Semigroup(function (_276) {
        return function (_277) {
            return Prelude["+"](__dict_Semiring_1)(_276)(_277);
        };
    });
};
var runAdditive = function (_264) {
    return _264;
};
var monoidAdditive = function (__dict_Semiring_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAdditive(__dict_Semiring_3);
    }, Prelude.zero(__dict_Semiring_3));
};
var invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {
    return function (_273) {
        return function (_274) {
            return f(_274);
        };
    };
});
var functorAdditive = new Prelude.Functor(function (f) {
    return function (_269) {
        return f(_269);
    };
});
var extendAdditive = new Control_Extend.Extend(function () {
    return functorAdditive;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqAdditive = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_265) {
        return function (_266) {
            return Prelude["=="](__dict_Eq_4)(_265)(_266);
        };
    });
};
var ordAdditive = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqAdditive(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_267) {
        return function (_268) {
            return Prelude.compare(__dict_Ord_2)(_267)(_268);
        };
    });
};
var comonadAdditive = new Control_Comonad.Comonad(function () {
    return extendAdditive;
}, runAdditive);
var applyAdditive = new Prelude.Apply(function () {
    return functorAdditive;
}, function (_270) {
    return function (_271) {
        return _270(_271);
    };
});
var bindAdditive = new Prelude.Bind(function () {
    return applyAdditive;
}, function (_272) {
    return function (f) {
        return f(_272);
    };
});
var applicativeAdditive = new Prelude.Applicative(function () {
    return applyAdditive;
}, Additive);
var monadAdditive = new Prelude.Monad(function () {
    return applicativeAdditive;
}, function () {
    return bindAdditive;
});
module.exports = {
    Additive: Additive, 
    runAdditive: runAdditive, 
    eqAdditive: eqAdditive, 
    ordAdditive: ordAdditive, 
    functorAdditive: functorAdditive, 
    applyAdditive: applyAdditive, 
    applicativeAdditive: applicativeAdditive, 
    bindAdditive: bindAdditive, 
    monadAdditive: monadAdditive, 
    extendAdditive: extendAdditive, 
    comonadAdditive: comonadAdditive, 
    invariantAdditive: invariantAdditive, 
    showAdditive: showAdditive, 
    semigroupAdditive: semigroupAdditive, 
    monoidAdditive: monoidAdditive
};

},{"Control.Comonad":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Comonad/index.js","Control.Extend":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Conj/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Monoid = require("Data.Monoid");
var Conj = function (x) {
    return x;
};
var showConj = function (__dict_Show_0) {
    return new Prelude.Show(function (_287) {
        return "Conj (" + (Prelude.show(__dict_Show_0)(_287) + ")");
    });
};
var semigroupConj = function (__dict_BooleanAlgebra_1) {
    return new Prelude.Semigroup(function (_288) {
        return function (_289) {
            return Prelude.conj(__dict_BooleanAlgebra_1)(_288)(_289);
        };
    });
};
var runConj = function (_278) {
    return _278;
};
var monoidConj = function (__dict_BooleanAlgebra_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConj(__dict_BooleanAlgebra_3);
    }, Prelude.top(__dict_BooleanAlgebra_3["__superclass_Prelude.Bounded_0"]()));
};
var functorConj = new Prelude.Functor(function (f) {
    return function (_283) {
        return f(_283);
    };
});
var extendConj = new Control_Extend.Extend(function () {
    return functorConj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqConj = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_279) {
        return function (_280) {
            return Prelude["=="](__dict_Eq_4)(_279)(_280);
        };
    });
};
var ordConj = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqConj(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_281) {
        return function (_282) {
            return Prelude.compare(__dict_Ord_2)(_281)(_282);
        };
    });
};
var comonadConj = new Control_Comonad.Comonad(function () {
    return extendConj;
}, runConj);
var boundedConj = function (__dict_Bounded_5) {
    return new Prelude.Bounded(Prelude.bottom(__dict_Bounded_5), Prelude.top(__dict_Bounded_5));
};
var applyConj = new Prelude.Apply(function () {
    return functorConj;
}, function (_284) {
    return function (_285) {
        return _284(_285);
    };
});
var bindConj = new Prelude.Bind(function () {
    return applyConj;
}, function (_286) {
    return function (f) {
        return f(_286);
    };
});
var applicativeConj = new Prelude.Applicative(function () {
    return applyConj;
}, Conj);
var monadConj = new Prelude.Monad(function () {
    return applicativeConj;
}, function () {
    return bindConj;
});
module.exports = {
    Conj: Conj, 
    runConj: runConj, 
    eqConj: eqConj, 
    ordConj: ordConj, 
    boundedConj: boundedConj, 
    functorConj: functorConj, 
    applyConj: applyConj, 
    applicativeConj: applicativeConj, 
    bindConj: bindConj, 
    monadConj: monadConj, 
    extendConj: extendConj, 
    comonadConj: comonadConj, 
    showConj: showConj, 
    semigroupConj: semigroupConj, 
    monoidConj: monoidConj
};

},{"Control.Comonad":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Comonad/index.js","Control.Extend":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Extend/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Disj/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Monoid = require("Data.Monoid");
var Disj = function (x) {
    return x;
};
var showDisj = function (__dict_Show_0) {
    return new Prelude.Show(function (_299) {
        return "Disj (" + (Prelude.show(__dict_Show_0)(_299) + ")");
    });
};
var semigroupDisj = function (__dict_BooleanAlgebra_1) {
    return new Prelude.Semigroup(function (_300) {
        return function (_301) {
            return Prelude.disj(__dict_BooleanAlgebra_1)(_300)(_301);
        };
    });
};
var runDisj = function (_290) {
    return _290;
};
var monoidDisj = function (__dict_BooleanAlgebra_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDisj(__dict_BooleanAlgebra_3);
    }, Prelude.bottom(__dict_BooleanAlgebra_3["__superclass_Prelude.Bounded_0"]()));
};
var functorDisj = new Prelude.Functor(function (f) {
    return function (_295) {
        return f(_295);
    };
});
var extendDisj = new Control_Extend.Extend(function () {
    return functorDisj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDisj = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_291) {
        return function (_292) {
            return Prelude["=="](__dict_Eq_4)(_291)(_292);
        };
    });
};
var ordDisj = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqDisj(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_293) {
        return function (_294) {
            return Prelude.compare(__dict_Ord_2)(_293)(_294);
        };
    });
};
var comonadDisj = new Control_Comonad.Comonad(function () {
    return extendDisj;
}, runDisj);
var boundedDisj = function (__dict_Bounded_5) {
    return new Prelude.Bounded(Prelude.bottom(__dict_Bounded_5), Prelude.top(__dict_Bounded_5));
};
var applyDisj = new Prelude.Apply(function () {
    return functorDisj;
}, function (_296) {
    return function (_297) {
        return _296(_297);
    };
});
var bindDisj = new Prelude.Bind(function () {
    return applyDisj;
}, function (_298) {
    return function (f) {
        return f(_298);
    };
});
var applicativeDisj = new Prelude.Applicative(function () {
    return applyDisj;
}, Disj);
var monadDisj = new Prelude.Monad(function () {
    return applicativeDisj;
}, function () {
    return bindDisj;
});
module.exports = {
    Disj: Disj, 
    runDisj: runDisj, 
    eqDisj: eqDisj, 
    ordDisj: ordDisj, 
    boundedDisj: boundedDisj, 
    functorDisj: functorDisj, 
    applyDisj: applyDisj, 
    applicativeDisj: applicativeDisj, 
    bindDisj: bindDisj, 
    monadDisj: monadDisj, 
    extendDisj: extendDisj, 
    comonadDisj: comonadDisj, 
    showDisj: showDisj, 
    semigroupDisj: semigroupDisj, 
    monoidDisj: monoidDisj
};

},{"Control.Comonad":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Comonad/index.js","Control.Extend":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Extend/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Dual/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Dual = function (x) {
    return x;
};
var showDual = function (__dict_Show_0) {
    return new Prelude.Show(function (_313) {
        return "Dual (" + (Prelude.show(__dict_Show_0)(_313) + ")");
    });
};
var semigroupDual = function (__dict_Semigroup_1) {
    return new Prelude.Semigroup(function (_314) {
        return function (_315) {
            return Prelude["<>"](__dict_Semigroup_1)(_315)(_314);
        };
    });
};
var runDual = function (_302) {
    return _302;
};
var monoidDual = function (__dict_Monoid_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDual(__dict_Monoid_3["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(__dict_Monoid_3));
};
var invariantDual = new Data_Functor_Invariant.Invariant(function (f) {
    return function (_311) {
        return function (_312) {
            return f(_312);
        };
    };
});
var functorDual = new Prelude.Functor(function (f) {
    return function (_307) {
        return f(_307);
    };
});
var extendDual = new Control_Extend.Extend(function () {
    return functorDual;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDual = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_303) {
        return function (_304) {
            return Prelude["=="](__dict_Eq_4)(_303)(_304);
        };
    });
};
var ordDual = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqDual(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_305) {
        return function (_306) {
            return Prelude.compare(__dict_Ord_2)(_305)(_306);
        };
    });
};
var comonadDual = new Control_Comonad.Comonad(function () {
    return extendDual;
}, runDual);
var applyDual = new Prelude.Apply(function () {
    return functorDual;
}, function (_308) {
    return function (_309) {
        return _308(_309);
    };
});
var bindDual = new Prelude.Bind(function () {
    return applyDual;
}, function (_310) {
    return function (f) {
        return f(_310);
    };
});
var applicativeDual = new Prelude.Applicative(function () {
    return applyDual;
}, Dual);
var monadDual = new Prelude.Monad(function () {
    return applicativeDual;
}, function () {
    return bindDual;
});
module.exports = {
    Dual: Dual, 
    runDual: runDual, 
    eqDual: eqDual, 
    ordDual: ordDual, 
    functorDual: functorDual, 
    applyDual: applyDual, 
    applicativeDual: applicativeDual, 
    bindDual: bindDual, 
    monadDual: monadDual, 
    extendDual: extendDual, 
    comonadDual: comonadDual, 
    invariantDual: invariantDual, 
    showDual: showDual, 
    semigroupDual: semigroupDual, 
    monoidDual: monoidDual
};

},{"Control.Comonad":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Comonad/index.js","Control.Extend":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Multiplicative/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Multiplicative = function (x) {
    return x;
};
var showMultiplicative = function (__dict_Show_0) {
    return new Prelude.Show(function (_327) {
        return "Multiplicative (" + (Prelude.show(__dict_Show_0)(_327) + ")");
    });
};
var semigroupMultiplicative = function (__dict_Semiring_1) {
    return new Prelude.Semigroup(function (_328) {
        return function (_329) {
            return Prelude["*"](__dict_Semiring_1)(_328)(_329);
        };
    });
};
var runMultiplicative = function (_316) {
    return _316;
};
var monoidMultiplicative = function (__dict_Semiring_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMultiplicative(__dict_Semiring_3);
    }, Prelude.one(__dict_Semiring_3));
};
var invariantMultiplicative = new Data_Functor_Invariant.Invariant(function (f) {
    return function (_325) {
        return function (_326) {
            return f(_326);
        };
    };
});
var functorMultiplicative = new Prelude.Functor(function (f) {
    return function (_321) {
        return f(_321);
    };
});
var extendMultiplicative = new Control_Extend.Extend(function () {
    return functorMultiplicative;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqMultiplicative = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_317) {
        return function (_318) {
            return Prelude["=="](__dict_Eq_4)(_317)(_318);
        };
    });
};
var ordMultiplicative = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqMultiplicative(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_319) {
        return function (_320) {
            return Prelude.compare(__dict_Ord_2)(_319)(_320);
        };
    });
};
var comonadMultiplicative = new Control_Comonad.Comonad(function () {
    return extendMultiplicative;
}, runMultiplicative);
var applyMultiplicative = new Prelude.Apply(function () {
    return functorMultiplicative;
}, function (_322) {
    return function (_323) {
        return _322(_323);
    };
});
var bindMultiplicative = new Prelude.Bind(function () {
    return applyMultiplicative;
}, function (_324) {
    return function (f) {
        return f(_324);
    };
});
var applicativeMultiplicative = new Prelude.Applicative(function () {
    return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Prelude.Monad(function () {
    return applicativeMultiplicative;
}, function () {
    return bindMultiplicative;
});
module.exports = {
    Multiplicative: Multiplicative, 
    runMultiplicative: runMultiplicative, 
    eqMultiplicative: eqMultiplicative, 
    ordMultiplicative: ordMultiplicative, 
    functorMultiplicative: functorMultiplicative, 
    applyMultiplicative: applyMultiplicative, 
    applicativeMultiplicative: applicativeMultiplicative, 
    bindMultiplicative: bindMultiplicative, 
    monadMultiplicative: monadMultiplicative, 
    extendMultiplicative: extendMultiplicative, 
    comonadMultiplicative: comonadMultiplicative, 
    invariantMultiplicative: invariantMultiplicative, 
    showMultiplicative: showMultiplicative, 
    semigroupMultiplicative: semigroupMultiplicative, 
    monoidMultiplicative: monoidMultiplicative
};

},{"Control.Comonad":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Comonad/index.js","Control.Extend":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
    this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
    this.mempty = mempty;
};
var monoidUnit = new Monoid(function () {
    return Prelude.semigroupUnit;
}, Prelude.unit);
var monoidString = new Monoid(function () {
    return Prelude.semigroupString;
}, "");
var monoidArray = new Monoid(function () {
    return Prelude.semigroupArray;
}, [  ]);
var mempty = function (dict) {
    return dict.mempty;
};
var monoidFn = function (__dict_Monoid_0) {
    return new Monoid(function () {
        return Prelude.semigroupFn(__dict_Monoid_0["__superclass_Prelude.Semigroup_0"]());
    }, Prelude["const"](mempty(__dict_Monoid_0)));
};
module.exports = {
    Monoid: Monoid, 
    mempty: mempty, 
    monoidUnit: monoidUnit, 
    monoidFn: monoidFn, 
    monoidString: monoidString, 
    monoidArray: monoidArray
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.NaturalTransformation/index.js":[function(require,module,exports){
arguments[4]["/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.ArrayBuffer.Types/index.js"][0].apply(exports,arguments)
},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Nullable/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Nullable

exports["null"] = null;

exports.nullable = function(a, r, f) {
    return a == null ? r : f(a);
};

exports.notNull = function(x) {
    return x;
}; 

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Nullable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Maybe = require("Data.Maybe");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
var toMaybe = function (n) {
    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
};
var showNullable = function (__dict_Show_0) {
    return new Prelude.Show(function (n) {
        var _1227 = toMaybe(n);
        if (_1227 instanceof Data_Maybe.Nothing) {
            return "null";
        };
        if (_1227 instanceof Data_Maybe.Just) {
            return Prelude.show(__dict_Show_0)(_1227.value0);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-nullable/src/Data/Nullable.purs line 37, column 1 - line 42, column 1: " + [ _1227.constructor.name ]);
    });
};
var eqNullable = function (__dict_Eq_2) {
    return new Prelude.Eq(Data_Function.on(Prelude.eq(Data_Maybe.eqMaybe(__dict_Eq_2)))(toMaybe));
};
var ordNullable = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqNullable(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, Data_Function.on(Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1)))(toMaybe));
};
module.exports = {
    toNullable: toNullable, 
    toMaybe: toMaybe, 
    showNullable: showNullable, 
    eqNullable: eqNullable, 
    ordNullable: ordNullable
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Nullable/foreign.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Profunctor/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Profunctor = function (dimap) {
    this.dimap = dimap;
};
var profunctorFn = new Profunctor(function (a2b) {
    return function (c2d) {
        return function (b2c) {
            return Prelude[">>>"](Prelude.semigroupoidFn)(a2b)(Prelude[">>>"](Prelude.semigroupoidFn)(b2c)(c2d));
        };
    };
});
var dimap = function (dict) {
    return dict.dimap;
};
var lmap = function (__dict_Profunctor_0) {
    return function (a2b) {
        return dimap(__dict_Profunctor_0)(a2b)(Prelude.id(Prelude.categoryFn));
    };
};
var rmap = function (__dict_Profunctor_1) {
    return function (b2c) {
        return dimap(__dict_Profunctor_1)(Prelude.id(Prelude.categoryFn))(b2c);
    };
};
var arr = function (__dict_Category_2) {
    return function (__dict_Profunctor_3) {
        return function (f) {
            return rmap(__dict_Profunctor_3)(f)(Prelude.id(__dict_Category_2));
        };
    };
};
module.exports = {
    Profunctor: Profunctor, 
    arr: arr, 
    rmap: rmap, 
    lmap: lmap, 
    dimap: dimap, 
    profunctorFn: profunctorFn
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Semiring.Free/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_List = require("Data.List");
var Data_Foldable = require("Data.Foldable");
var Prelude = require("Prelude");
var Data_Traversable = require("Data.Traversable");
var Free = function (x) {
    return x;
};
var showFree = function (__dict_Show_2) {
    return new Prelude.Show(function (_464) {
        return "Free (" + (Prelude.show(Data_List.showList(Data_List.showList(__dict_Show_2)))(_464) + ")");
    });
};
var semiringFree = new Prelude.Semiring(function (_469) {
    return function (_470) {
        return Prelude["<>"](Data_List.semigroupList)(_469)(_470);
    };
}, function (_471) {
    return function (_472) {
        return Prelude.bind(Data_List.bindList)(_471)(function (_80) {
            return Prelude.bind(Data_List.bindList)(_472)(function (_79) {
                return Prelude["return"](Data_List.applicativeList)(Prelude["<>"](Data_List.semigroupList)(_80)(_79));
            });
        });
    };
}, Data_List.singleton(Data_List.Nil.value), Data_List.Nil.value);
var runFree = function (_462) {
    return _462;
};
var liftFree = function (__dict_Semiring_4) {
    return function (f) {
        return function (_463) {
            return Data_Foldable.sum(Data_List.foldableList)(__dict_Semiring_4)(Prelude.map(Data_List.functorList)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Foldable.product(Data_List.foldableList)(__dict_Semiring_4))(Prelude.map(Data_List.functorList)(f)))(_463));
        };
    };
};
var functorFree = new Prelude.Functor(function (fn) {
    return function (_473) {
        return Free(Prelude["<$>"](Data_List.functorList)(Prelude.map(Data_List.functorList)(fn))(_473));
    };
});
var free = function (a) {
    return Data_List.singleton(Data_List.singleton(a));
};
var lowerFree = function (__dict_Semiring_5) {
    return function (f) {
        return function (a) {
            return f(free(a));
        };
    };
};
var foldableFree = new Data_Foldable.Foldable(function (__dict_Monoid_6) {
    return function (fn) {
        return function (_478) {
            return Data_Foldable.fold(Data_List.foldableList)(__dict_Monoid_6)(Data_Foldable.foldMap(Data_List.foldableList)(Data_List.monoidList)(Prelude["<$>"](Data_List.functorList)(fn))(_478));
        };
    };
}, function (fn) {
    return function (accum) {
        return function (_476) {
            return Data_Foldable.foldl(Data_List.foldableList)(Data_Foldable.foldl(Data_List.foldableList)(fn))(accum)(_476);
        };
    };
}, function (fn) {
    return function (accum) {
        return function (_477) {
            return Data_Foldable.foldr(Data_List.foldableList)(Prelude.flip(Data_Foldable.foldr(Data_List.foldableList)(fn)))(accum)(_477);
        };
    };
});
var traversableFree = new Data_Traversable.Traversable(function () {
    return foldableFree;
}, function () {
    return functorFree;
}, function (__dict_Applicative_0) {
    return function (_479) {
        return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Free)(Data_Traversable.sequence(Data_List.traversableList)(__dict_Applicative_0)(Prelude["<$>"](Data_List.functorList)(Data_Traversable.sequence(Data_List.traversableList)(__dict_Applicative_0))(_479)));
    };
}, function (__dict_Applicative_1) {
    return function (fn) {
        return function (freeA) {
            return Data_Traversable.sequence(traversableFree)(__dict_Applicative_1)(Prelude["<$>"](functorFree)(fn)(freeA));
        };
    };
});
var eqFree = function (__dict_Eq_7) {
    return new Prelude.Eq(function (_465) {
        return function (_466) {
            return Prelude["=="](Data_List.eqList(Data_List.eqList(__dict_Eq_7)))(_465)(_466);
        };
    });
};
var ordFree = function (__dict_Ord_3) {
    return new Prelude.Ord(function () {
        return eqFree(__dict_Ord_3["__superclass_Prelude.Eq_0"]());
    }, function (_467) {
        return function (_468) {
            return Prelude.compare(Data_List.ordList(Data_List.ordList(__dict_Ord_3)))(_467)(_468);
        };
    });
};
var applyFree = new Prelude.Apply(function () {
    return functorFree;
}, function (_474) {
    return function (_475) {
        return Free(Prelude.bind(Data_List.bindList)(_474)(function (_82) {
            return Prelude.bind(Data_List.bindList)(_475)(function (_81) {
                return Prelude.pure(Data_List.applicativeList)(Prelude.apply(Data_List.applyList)(_82)(_81));
            });
        }));
    };
});
var applicativeFree = new Prelude.Applicative(function () {
    return applyFree;
}, free);
module.exports = {
    lowerFree: lowerFree, 
    liftFree: liftFree, 
    free: free, 
    runFree: runFree, 
    showFree: showFree, 
    eqFree: eqFree, 
    ordFree: ordFree, 
    semiringFree: semiringFree, 
    functorFree: functorFree, 
    applyFree: applyFree, 
    applicativeFree: applicativeFree, 
    foldableFree: foldableFree, 
    traversableFree: traversableFree
};

},{"Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Set/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Map = require("Data.Map");
var Data_Tuple = require("Data.Tuple");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Data_List = require("Data.List");
var Set = (function () {
    function Set(value0) {
        this.value0 = value0;
    };
    Set.create = function (value0) {
        return new Set(value0);
    };
    return Set;
})();
var union = function (__dict_Ord_0) {
    return function (_487) {
        return function (_488) {
            return new Set(Data_Map.union(__dict_Ord_0)(_487.value0)(_488.value0));
        };
    };
};
var toList = function (_485) {
    return Prelude.map(Data_List.functorList)(Data_Tuple.fst)(Data_Map.toList(_485.value0));
};
var size = function (_486) {
    return Data_Map.size(_486.value0);
};
var singleton = function (a) {
    return new Set(Data_Map.singleton(a)(Prelude.unit));
};
var showSet = function (__dict_Show_1) {
    return new Prelude.Show(function (s) {
        return "fromList " + Prelude.show(Data_List.showList(__dict_Show_1))(toList(s));
    });
};
var monoidSemigroup = function (__dict_Ord_3) {
    return new Prelude.Semigroup(union(__dict_Ord_3));
};
var member = function (__dict_Ord_4) {
    return function (a) {
        return function (_482) {
            return Data_Map.member(__dict_Ord_4)(a)(_482.value0);
        };
    };
};
var isEmpty = function (_480) {
    return Data_Map.isEmpty(_480.value0);
};
var insert = function (__dict_Ord_5) {
    return function (a) {
        return function (_483) {
            return new Set(Data_Map.insert(__dict_Ord_5)(a)(Prelude.unit)(_483.value0));
        };
    };
};
var foldableSet = new Data_Foldable.Foldable(function (__dict_Monoid_6) {
    return function (f) {
        return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Foldable.foldMap(Data_List.foldableList)(__dict_Monoid_6)(f))(toList);
    };
}, function (f) {
    return function (x) {
        return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Foldable.foldl(Data_List.foldableList)(f)(x))(toList);
    };
}, function (f) {
    return function (x) {
        return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Foldable.foldr(Data_List.foldableList)(f)(x))(toList);
    };
});
var eqSet = function (__dict_Eq_7) {
    return new Prelude.Eq(function (_489) {
        return function (_490) {
            return Prelude["=="](Data_Map.eqMap(__dict_Eq_7)(Prelude.eqUnit))(_489.value0)(_490.value0);
        };
    });
};
var ordSet = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqSet(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (s1) {
        return function (s2) {
            return Prelude.compare(Data_List.ordList(__dict_Ord_2))(toList(s1))(toList(s2));
        };
    });
};
var empty = new Set(Data_Map.empty);
var fromList = function (__dict_Ord_8) {
    return Data_Foldable.foldl(Data_List.foldableList)(function (m) {
        return function (a) {
            return insert(__dict_Ord_8)(a)(m);
        };
    })(empty);
};
var monoidSet = function (__dict_Ord_9) {
    return new Data_Monoid.Monoid(function () {
        return monoidSemigroup(__dict_Ord_9);
    }, empty);
};
var unions = function (__dict_Ord_10) {
    return Data_Foldable.foldl(Data_List.foldableList)(union(__dict_Ord_10))(empty);
};
var $$delete = function (__dict_Ord_11) {
    return function (a) {
        return function (_484) {
            return new Set(Data_Map["delete"](__dict_Ord_11)(a)(_484.value0));
        };
    };
};
var difference = function (__dict_Ord_12) {
    return function (s1) {
        return function (s2) {
            return Data_Foldable.foldl(Data_List.foldableList)(Prelude.flip($$delete(__dict_Ord_12)))(s1)(toList(s2));
        };
    };
};
var checkValid = function (_481) {
    return Data_Map.checkValid(_481.value0);
};
module.exports = {
    difference: difference, 
    unions: unions, 
    union: union, 
    size: size, 
    fromList: fromList, 
    toList: toList, 
    "delete": $$delete, 
    member: member, 
    insert: insert, 
    checkValid: checkValid, 
    singleton: singleton, 
    isEmpty: isEmpty, 
    empty: empty, 
    eqSet: eqSet, 
    showSet: showSet, 
    ordSet: ordSet, 
    monoidSet: monoidSet, 
    monoidSemigroup: monoidSemigroup, 
    foldableSet: foldableSet
};

},{"Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Map":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Map/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap.ST/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.StrMap.ST

exports["new"] = function () {
  return {};
};

exports.peek = function (m) {
  return function (k) {
    return function () {
      return m[k];
    };
  };
};

exports.poke = function (m) {
  return function (k) {
    return function (v) {
      return function () {
        m[k] = v;
        return m;
      };
    };
  };
};

exports["delete"] = function (m) {
  return function (k) {
    return function () {
      delete m[k];
      return m;
    };
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap.ST/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_ST = require("Control.Monad.ST");
module.exports = {
    "delete": $foreign["delete"], 
    poke: $foreign.poke, 
    peek: $foreign.peek, 
    "new": $foreign["new"]
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap.ST/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Control.Monad.ST":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.ST/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.StrMap

exports._copy = function (m) {
  var r = {};
  for (var k in m) {
    if (m.hasOwnProperty(k)) {
      r[k] = m[k];
    }
  }
  return r;
};

exports._copyEff = function (m) {
  return function () {
    var r = {};
    for (var k in m) {
      if (m.hasOwnProperty(k)) {
        r[k] = m[k];
      }
    }
    return r;
  };
};

exports.empty = {};

exports.runST = function (f) {
  return f;
};

// jshint maxparams: 2
exports._fmapStrMap = function (m0, f) {
  var m = {};
  for (var k in m0) {
    if (m0.hasOwnProperty(k)) {
      m[k] = f(m0[k]);
    }
  }
  return m;
};

// jshint maxparams: 1
exports._foldM = function (bind) {
  return function (f) {
    return function (mz) {
      return function (m) {
        function g (k) {
          return function (z) {
            return f(z)(k)(m[k]);
          };
        }
        for (var k in m) {
          if (m.hasOwnProperty(k)) {
            mz = bind(mz)(g(k));
          }
        }
        return mz;
      };
    };
  };
};

// jshint maxparams: 4
exports._foldSCStrMap = function (m, z, f, fromMaybe) {
  for (var k in m) {
    if (m.hasOwnProperty(k)) {
      var maybeR = f(z)(k)(m[k]);
      var r = fromMaybe(null)(maybeR);
      if (r === null) return z;
      else z = r;
    }
  }
  return z;
};

// jshint maxparams: 1
exports.all = function (f) {
  return function (m) {
    for (var k in m) {
      if (m.hasOwnProperty(k) && !f(k)(m[k])) return false;
    }
    return true;
  };
};

exports.size = function (m) {
  var s = 0;
  for (var k in m) {
    if (m.hasOwnProperty(k)) {
      ++s;
    }
  }
  return s;
};

// jshint maxparams: 4
exports._lookup = function (no, yes, k, m) {
  return k in m ? yes(m[k]) : no;
};

// jshint maxparams: 2
exports._unsafeDeleteStrMap = function (m, k) {
  delete m[k];
  return m;
};

// jshint maxparams: 4
exports._lookupST = function (no, yes, k, m) {
  return function () {
    return k in m ? yes(m[k]) : no;
  };
};

function _collect (f) {
  return function (m) {
    var r = [];
    for (var k in m) {
      if (m.hasOwnProperty(k)) {
        r.push(f(k)(m[k]));
      }
    }
    return r;
  };
}

exports._collect = _collect;

exports.keys = Object.keys || _collect(function (k) {
  return function () { return k; };
});

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Prelude = require("Prelude");
var Data_Function = require("Data.Function");
var Data_Monoid = require("Data.Monoid");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var Data_Traversable = require("Data.Traversable");
var Data_Maybe = require("Data.Maybe");
var Data_StrMap_ST = require("Data.StrMap.ST");
var Data_List = require("Data.List");
var Control_Monad_ST = require("Control.Monad.ST");
var values = Prelude["<<<"](Prelude.semigroupoidFn)(Data_List.toList(Data_Foldable.foldableArray))($foreign._collect(function (_514) {
    return function (v) {
        return v;
    };
}));
var toList = Prelude["<<<"](Prelude.semigroupoidFn)(Data_List.toList(Data_Foldable.foldableArray))($foreign._collect(Data_Tuple.Tuple.create));
var thawST = $foreign._copyEff;
var showStrMap = function (__dict_Show_0) {
    return new Prelude.Show(function (m) {
        return "fromList " + Prelude.show(Data_List.showList(Data_Tuple.showTuple(Prelude.showString)(__dict_Show_0)))(toList(m));
    });
};
var pureST = function (f) {
    return Control_Monad_Eff.runPure($foreign.runST(f));
};
var singleton = function (k) {
    return function (v) {
        return pureST(function __do() {
            var _85 = Data_StrMap_ST["new"]();
            Data_StrMap_ST.poke(_85)(k)(v)();
            return Prelude["return"](Control_Monad_Eff.applicativeEff)(_85)();
        });
    };
};
var mutate = function (f) {
    return function (m) {
        return pureST(function __do() {
            var _84 = thawST(m)();
            f(_84)();
            return Prelude["return"](Control_Monad_Eff.applicativeEff)(_84)();
        });
    };
};
var member = Data_Function.runFn4($foreign._lookup)(false)(Prelude["const"](true));
var lookup = Data_Function.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var isSubmap = function (__dict_Eq_2) {
    return function (m1) {
        return function (m2) {
            var f = function (k) {
                return function (v) {
                    return $foreign._lookup(false, Prelude["=="](__dict_Eq_2)(v), k, m2);
                };
            };
            return $foreign.all(f)(m1);
        };
    };
};
var isEmpty = $foreign.all(function (_511) {
    return function (_510) {
        return false;
    };
});
var insert = function (k) {
    return function (v) {
        return mutate(function (s) {
            return Data_StrMap_ST.poke(s)(k)(v);
        });
    };
};
var functorStrMap = new Prelude.Functor(function (f) {
    return function (m) {
        return $foreign._fmapStrMap(m, f);
    };
});
var fromListWith = function (f) {
    return function (l) {
        return pureST(function __do() {
            var _87 = Data_StrMap_ST["new"]();
            Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_List.foldableList)(l)(function (_513) {
                return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign._lookupST(_513.value1, f(_513.value1), _513.value0, _87))(Data_StrMap_ST.poke(_87)(_513.value0));
            })();
            return Prelude["return"](Control_Monad_Eff.applicativeEff)(_87)();
        });
    };
};
var fromList = function (l) {
    return pureST(function __do() {
        var _86 = Data_StrMap_ST["new"]();
        Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_List.foldableList)(l)(function (_512) {
            return Data_StrMap_ST.poke(_86)(_512.value0)(_512.value1);
        })();
        return Prelude["return"](Control_Monad_Eff.applicativeEff)(_86)();
    });
};
var freezeST = $foreign._copyEff;
var foldMaybe = function (f) {
    return function (z) {
        return function (m) {
            return $foreign._foldSCStrMap(m, z, f, Data_Maybe.fromMaybe);
        };
    };
};
var foldM = function (__dict_Monad_3) {
    return function (f) {
        return function (z) {
            return $foreign._foldM(Prelude[">>="](__dict_Monad_3["__superclass_Prelude.Bind_1"]()))(f)(Prelude.pure(__dict_Monad_3["__superclass_Prelude.Applicative_0"]())(z));
        };
    };
};
var semigroupStrMap = function (__dict_Semigroup_4) {
    return new Prelude.Semigroup(function (m1) {
        return function (m2) {
            return mutate(function (s1) {
                return foldM(Control_Monad_Eff.monadEff)(function (s2) {
                    return function (k) {
                        return function (v2) {
                            return Data_StrMap_ST.poke(s2)(k)($foreign._lookup(v2, function (v1) {
                                return Prelude["<>"](__dict_Semigroup_4)(v1)(v2);
                            }, k, m2));
                        };
                    };
                })(s1)(m1);
            })(m2);
        };
    });
};
var monoidStrMap = function (__dict_Semigroup_1) {
    return new Data_Monoid.Monoid(function () {
        return semigroupStrMap(__dict_Semigroup_1);
    }, $foreign.empty);
};
var union = function (m) {
    return mutate(function (s) {
        return foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m);
    });
};
var unions = Data_Foldable.foldl(Data_List.foldableList)(union)($foreign.empty);
var fold = $foreign._foldM(Prelude["#"]);
var foldMap = function (__dict_Monoid_7) {
    return function (f) {
        return fold(function (acc) {
            return function (k) {
                return function (v) {
                    return Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(acc)(f(k)(v));
                };
            };
        })(Data_Monoid.mempty(__dict_Monoid_7));
    };
};
var foldableStrMap = new Data_Foldable.Foldable(function (__dict_Monoid_8) {
    return function (f) {
        return foldMap(__dict_Monoid_8)(Prelude["const"](f));
    };
}, function (f) {
    return fold(function (z) {
        return function (_509) {
            return f(z);
        };
    });
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_List.foldableList)(f)(z)(values(m));
        };
    };
});
var traversableStrMap = new Data_Traversable.Traversable(function () {
    return foldableStrMap;
}, function () {
    return functorStrMap;
}, function (__dict_Applicative_6) {
    return Data_Traversable.traverse(traversableStrMap)(__dict_Applicative_6)(Prelude.id(Prelude.categoryFn));
}, function (__dict_Applicative_5) {
    return function (f) {
        return function (ms) {
            return Data_Foldable.foldr(Data_List.foldableList)(function (x) {
                return function (acc) {
                    return Prelude["<*>"](__dict_Applicative_5["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_5["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union)(x))(acc);
                };
            })(Prelude.pure(__dict_Applicative_5)($foreign.empty))(Prelude["<$>"](Data_List.functorList)(Prelude.map((__dict_Applicative_5["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_List.functorList)(Data_Traversable.traverse(Data_Tuple.traversableTuple)(__dict_Applicative_5)(f))(toList(ms))));
        };
    };
});
var eqStrMap = function (__dict_Eq_9) {
    return new Prelude.Eq(function (m1) {
        return function (m2) {
            return Prelude["&&"](Prelude.booleanAlgebraBoolean)(isSubmap(__dict_Eq_9)(m1)(m2))(isSubmap(__dict_Eq_9)(m2)(m1));
        };
    });
};
var $$delete = function (k) {
    return mutate(function (s) {
        return Data_StrMap_ST["delete"](s)(k);
    });
};
var alter = function (f) {
    return function (k) {
        return function (m) {
            var _782 = f(lookup(k)(m));
            if (_782 instanceof Data_Maybe.Nothing) {
                return $$delete(k)(m);
            };
            if (_782 instanceof Data_Maybe.Just) {
                return insert(k)(_782.value0)(m);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-maps/src/Data/StrMap.purs line 175, column 1 - line 176, column 1: " + [ _782.constructor.name ]);
        };
    };
};
var update = function (f) {
    return function (k) {
        return function (m) {
            return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
        };
    };
};
module.exports = {
    freezeST: freezeST, 
    thawST: thawST, 
    foldMaybe: foldMaybe, 
    foldM: foldM, 
    foldMap: foldMap, 
    fold: fold, 
    isSubmap: isSubmap, 
    unions: unions, 
    union: union, 
    values: values, 
    update: update, 
    alter: alter, 
    member: member, 
    "delete": $$delete, 
    fromListWith: fromListWith, 
    fromList: fromList, 
    toList: toList, 
    lookup: lookup, 
    insert: insert, 
    singleton: singleton, 
    isEmpty: isEmpty, 
    functorStrMap: functorStrMap, 
    foldableStrMap: foldableStrMap, 
    traversableStrMap: traversableStrMap, 
    eqStrMap: eqStrMap, 
    showStrMap: showStrMap, 
    semigroupStrMap: semigroupStrMap, 
    monoidStrMap: monoidStrMap, 
    runST: $foreign.runST, 
    all: $foreign.all, 
    keys: $foreign.keys, 
    size: $foreign.size, 
    empty: $foreign.empty
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Control.Monad.ST":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.ST/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.StrMap.ST":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap.ST/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String.Regex/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.String.Regex

exports["showRegex'"] = function (r) {
  return "" + r;
};

exports["regex'"] = function (s1) {
  return function (s2) {
    return new RegExp(s1, s2);
  };
};

exports.source = function (r) {
  return r.source;
};

exports.flags = function (r) {
  return {
    multiline: r.multiline,
    ignoreCase: r.ignoreCase,
    global: r.global,
    sticky: !!r.sticky,
    unicode: !!r.unicode
  };
};

exports.test = function (r) {
  return function (s) {
    return r.test(s);
  };
};

exports._match = function (just) {
  return function (nothing) {
    return function (r) {
      return function (s) {
        var m = s.match(r);
        if (m == null) {
          return nothing;
        } else {
          var list = [];
          for (var i = 0; i < m.length; i++) {
            list.push(m[i] == null ? nothing : just(m[i]));
          }
          return just(list);
        }
      };
    };
  };
};

exports.replace = function (r) {
  return function (s1) {
    return function (s2) {
      return s2.replace(r, s1);
    };
  };
};

exports["replace'"] = function (r) {
  return function (f) {
    return function (s2) {
      return s2.replace(r, function (match) {
        return f(match)(Array.prototype.splice.call(arguments, 1, arguments.length - 3));
      });
    };
  };
};

exports._search = function (just) {
  return function (nothing) {
    return function (r) {
      return function (s) {
        var result = s.search(r);
        return result === -1 ? nothing : just(result);
      };
    };
  };
};

exports.split = function (r) {
  return function (s) {
    return s.split(r);
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String.Regex/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_String = require("Data.String");
var Data_Maybe = require("Data.Maybe");
var showRegex = new Prelude.Show($foreign["showRegex'"]);
var search = $foreign._search(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var renderFlags = function (f) {
    return (function () {
        if (f.global) {
            return "g";
        };
        if (!f.global) {
            return "";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-strings/src/Data/String/Regex.purs line 63, column 1 - line 64, column 1: " + [ f.global.constructor.name ]);
    })() + ((function () {
        if (f.ignoreCase) {
            return "i";
        };
        if (!f.ignoreCase) {
            return "";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-strings/src/Data/String/Regex.purs line 63, column 1 - line 64, column 1: " + [ f.ignoreCase.constructor.name ]);
    })() + ((function () {
        if (f.multiline) {
            return "m";
        };
        if (!f.multiline) {
            return "";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-strings/src/Data/String/Regex.purs line 63, column 1 - line 64, column 1: " + [ f.multiline.constructor.name ]);
    })() + ((function () {
        if (f.sticky) {
            return "y";
        };
        if (!f.sticky) {
            return "";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-strings/src/Data/String/Regex.purs line 63, column 1 - line 64, column 1: " + [ f.sticky.constructor.name ]);
    })() + (function () {
        if (f.unicode) {
            return "u";
        };
        if (!f.unicode) {
            return "";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-strings/src/Data/String/Regex.purs line 63, column 1 - line 64, column 1: " + [ f.unicode.constructor.name ]);
    })())));
};
var regex = function (s) {
    return function (f) {
        return $foreign["regex'"](s)(renderFlags(f));
    };
};
var parseFlags = function (s) {
    return {
        global: Data_String.contains("g")(s), 
        ignoreCase: Data_String.contains("i")(s), 
        multiline: Data_String.contains("m")(s), 
        sticky: Data_String.contains("y")(s), 
        unicode: Data_String.contains("u")(s)
    };
};
var noFlags = {
    global: false, 
    ignoreCase: false, 
    multiline: false, 
    sticky: false, 
    unicode: false
};
var match = $foreign._match(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    noFlags: noFlags, 
    search: search, 
    match: match, 
    parseFlags: parseFlags, 
    renderFlags: renderFlags, 
    regex: regex, 
    showRegex: showRegex, 
    split: $foreign.split, 
    "replace'": $foreign["replace'"], 
    replace: $foreign.replace, 
    test: $foreign.test, 
    flags: $foreign.flags, 
    source: $foreign.source
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String.Regex/foreign.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.String":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String.Unsafe/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.String.Unsafe

exports.charCodeAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charCodeAt(i);
    throw new Error("Data.String.Unsafe.charCodeAt: Invalid index.");
  };
};

exports.charAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

exports.char = function (s) {
  if (s.length === 1) return s.charAt(0);
  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Char = require("Data.Char");
module.exports = {
    charCodeAt: $foreign.charCodeAt, 
    charAt: $foreign.charAt, 
    "char": $foreign["char"]
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String.Unsafe/foreign.js","Data.Char":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Char/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.String

exports._charAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};

exports._charCodeAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charCodeAt(i)) : nothing;
      };
    };
  };
};

exports._toChar = function (just) {
  return function (nothing) {
    return function (s) {
      return s.length === 1 ? just(s) : nothing;
    };
  };
};

exports.fromCharArray = function (a) {
  return a.join("");
};

exports._indexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.indexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_indexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports._lastIndexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_lastIndexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.lastIndexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports.length = function (s) {
  return s.length;
};

exports._localeCompare = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (s1) {
        return function (s2) {
          var result = s1.localeCompare(s2);
          return result < 0 ? lt : result > 0 ? gt : eq;
        };
      };
    };
  };
};

exports.replace = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(s1, s2);
    };
  };
};

exports.take = function (n) {
  return function (s) {
    return s.substr(0, n);
  };
};

exports.drop = function (n) {
  return function (s) {
    return s.substr(n);
  };
};

exports.count = function (p) {
  return function (s) {
    for (var i = 0; i < s.length && p(s.charAt(i)); i++); {}
    return i;
  };
};

exports.split = function (sep) {
  return function (s) {
    return s.split(sep);
  };
};

exports.toCharArray = function (s) {
  return s.split("");
};

exports.toLower = function (s) {
  return s.toLowerCase();
};

exports.toUpper = function (s) {
  return s.toUpperCase();
};

exports.trim = function (s) {
  return s.trim();
};

exports.joinWith = function (s) {
  return function (xs) {
    return xs.join(s);
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Char = require("Data.Char");
var Prelude = require("Prelude");
var Data_String_Unsafe = require("Data.String.Unsafe");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var uncons = function (_427) {
    if (_427 === "") {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just({
        head: Data_String_Unsafe.charAt(Prelude.zero(Prelude.semiringInt))(_427), 
        tail: $foreign.drop(Prelude.one(Prelude.semiringInt))(_427)
    });
};
var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var takeWhile = function (p) {
    return function (s) {
        return $foreign.take($foreign.count(p)(s))(s);
    };
};
var $$null = function (s) {
    return Prelude["=="](Prelude.eqInt)($foreign.length(s))(Prelude.zero(Prelude.semiringInt));
};
var localeCompare = $foreign._localeCompare(Prelude.LT.value)(Prelude.EQ.value)(Prelude.GT.value);
var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripSuffix = function (suffix) {
    return function (str) {
        var _1229 = lastIndexOf(suffix)(str);
        if (_1229 instanceof Data_Maybe.Just && Prelude["=="](Prelude.eqInt)(_1229.value0)(Prelude["-"](Prelude.ringInt)($foreign.length(str))($foreign.length(suffix)))) {
            return Data_Maybe.Just.create($foreign.take(_1229.value0)(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripPrefix = function (prefix) {
    return function (str) {
        var _1231 = indexOf(prefix)(str);
        if (_1231 instanceof Data_Maybe.Just && _1231.value0 === 0) {
            return Data_Maybe.Just.create($foreign.drop($foreign.length(prefix))(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var fromChar = Data_Char.toString;
var singleton = fromChar;
var dropWhile = function (p) {
    return function (s) {
        return $foreign.drop($foreign.count(p)(s))(s);
    };
};
var contains = function (x) {
    return function (s) {
        return Data_Maybe.isJust(indexOf(x)(s));
    };
};
var charCodeAt = $foreign._charCodeAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    stripSuffix: stripSuffix, 
    stripPrefix: stripPrefix, 
    dropWhile: dropWhile, 
    takeWhile: takeWhile, 
    localeCompare: localeCompare, 
    singleton: singleton, 
    uncons: uncons, 
    "null": $$null, 
    "lastIndexOf'": lastIndexOf$prime, 
    lastIndexOf: lastIndexOf, 
    "indexOf'": indexOf$prime, 
    indexOf: indexOf, 
    contains: contains, 
    toChar: toChar, 
    fromChar: fromChar, 
    charCodeAt: charCodeAt, 
    charAt: charAt, 
    joinWith: $foreign.joinWith, 
    trim: $foreign.trim, 
    toUpper: $foreign.toUpper, 
    toLower: $foreign.toLower, 
    toCharArray: $foreign.toCharArray, 
    split: $foreign.split, 
    drop: $foreign.drop, 
    take: $foreign.take, 
    count: $foreign.count, 
    replace: $foreign.replace, 
    length: $foreign.length, 
    fromCharArray: $foreign.fromCharArray
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String/foreign.js","Data.Char":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Char/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.String.Unsafe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String.Unsafe/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Time/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Seconds = function (x) {
    return x;
};
var SecondOfMinute = function (x) {
    return x;
};
var Minutes = function (x) {
    return x;
};
var MinuteOfHour = function (x) {
    return x;
};
var Milliseconds = function (x) {
    return x;
};
var MillisecondOfSecond = function (x) {
    return x;
};
var Hours = function (x) {
    return x;
};
var HourOfDay = function (x) {
    return x;
};
var TimeValue = function (fromHours, fromMilliseconds, fromMinutes, fromSeconds, toHours, toMilliseconds, toMinutes, toSeconds) {
    this.fromHours = fromHours;
    this.fromMilliseconds = fromMilliseconds;
    this.fromMinutes = fromMinutes;
    this.fromSeconds = fromSeconds;
    this.toHours = toHours;
    this.toMilliseconds = toMilliseconds;
    this.toMinutes = toMinutes;
    this.toSeconds = toSeconds;
};
var toSeconds = function (dict) {
    return dict.toSeconds;
};
var toMinutes = function (dict) {
    return dict.toMinutes;
};
var toMilliseconds = function (dict) {
    return dict.toMilliseconds;
};
var toHours = function (dict) {
    return dict.toHours;
};
var timeValueSeconds = new TimeValue(function (_828) {
    return _828 * 3600.0;
}, function (_830) {
    return _830 / 1000.0;
}, function (_829) {
    return _829 * 60.0;
}, function (n) {
    return n;
}, function (_825) {
    return _825 / 3600.0;
}, function (_827) {
    return _827 * 1000.0;
}, function (_826) {
    return _826 / 60.0;
}, function (n) {
    return n;
});
var timeValueMinutes = new TimeValue(function (_822) {
    return _822 * 60.0;
}, function (_824) {
    return _824 / 60000.0;
}, function (n) {
    return n;
}, function (_823) {
    return _823 / 60.0;
}, function (_819) {
    return _819 / 60.0;
}, function (_821) {
    return _821 * 60000.0;
}, function (n) {
    return n;
}, function (_820) {
    return _820 * 60.0;
});
var timeValueMilliseconds = new TimeValue(function (_834) {
    return _834 * 3600000.0;
}, function (n) {
    return n;
}, function (_835) {
    return _835 * 60000.0;
}, function (_836) {
    return _836 * 1000.0;
}, function (_831) {
    return _831 / 3600000.0;
}, function (n) {
    return n;
}, function (_832) {
    return _832 / 60000.0;
}, function (_833) {
    return _833 / 1000.0;
});
var timeValueHours = new TimeValue(function (n) {
    return n;
}, function (_818) {
    return _818 / 3600000.0;
}, function (_816) {
    return _816 / 60.0;
}, function (_817) {
    return _817 / 3600.0;
}, function (n) {
    return n;
}, function (_815) {
    return _815 * 3600000.0;
}, function (_813) {
    return _813 * 60.0;
}, function (_814) {
    return _814 * 3600.0;
});
var showSeconds = new Prelude.Show(function (_793) {
    return "(Seconds " + (Prelude.show(Prelude.showNumber)(_793) + ")");
});
var showMinutes = new Prelude.Show(function (_774) {
    return "(Minutes " + (Prelude.show(Prelude.showNumber)(_774) + ")");
});
var showMilliseconds = new Prelude.Show(function (_812) {
    return "(Milliseconds " + (Prelude.show(Prelude.showNumber)(_812) + ")");
});
var showHours = new Prelude.Show(function (_755) {
    return "(Hours " + (Prelude.show(Prelude.showNumber)(_755) + ")");
});
var semiringSeconds = new Prelude.Semiring(function (_783) {
    return function (_784) {
        return _783 + _784;
    };
}, function (_785) {
    return function (_786) {
        return _785 * _786;
    };
}, 1.0, 0.0);
var semiringMinutes = new Prelude.Semiring(function (_764) {
    return function (_765) {
        return _764 + _765;
    };
}, function (_766) {
    return function (_767) {
        return _766 * _767;
    };
}, 1.0, 0.0);
var semiringMilliseconds = new Prelude.Semiring(function (_802) {
    return function (_803) {
        return _802 + _803;
    };
}, function (_804) {
    return function (_805) {
        return _804 * _805;
    };
}, 1.0, 0.0);
var semiringHours = new Prelude.Semiring(function (_745) {
    return function (_746) {
        return _745 + _746;
    };
}, function (_747) {
    return function (_748) {
        return _747 * _748;
    };
}, 1.0, 0.0);
var ringSeconds = new Prelude.Ring(function () {
    return semiringSeconds;
}, function (_787) {
    return function (_788) {
        return _787 - _788;
    };
});
var ringMinutes = new Prelude.Ring(function () {
    return semiringMinutes;
}, function (_768) {
    return function (_769) {
        return _768 - _769;
    };
});
var ringMilliseconds = new Prelude.Ring(function () {
    return semiringMilliseconds;
}, function (_806) {
    return function (_807) {
        return _806 - _807;
    };
});
var ringHours = new Prelude.Ring(function () {
    return semiringHours;
}, function (_749) {
    return function (_750) {
        return _749 - _750;
    };
});
var moduloSemiringSeconds = new Prelude.ModuloSemiring(function () {
    return semiringSeconds;
}, function (_789) {
    return function (_790) {
        return _789 / _790;
    };
}, function (_791) {
    return function (_792) {
        return 0.0;
    };
});
var moduloSemiringMinutes = new Prelude.ModuloSemiring(function () {
    return semiringMinutes;
}, function (_770) {
    return function (_771) {
        return _770 / _771;
    };
}, function (_772) {
    return function (_773) {
        return 0.0;
    };
});
var moduloSemiringMilliseconds = new Prelude.ModuloSemiring(function () {
    return semiringMilliseconds;
}, function (_808) {
    return function (_809) {
        return _808 / _809;
    };
}, function (_810) {
    return function (_811) {
        return 0.0;
    };
});
var moduloSemiringHours = new Prelude.ModuloSemiring(function () {
    return semiringHours;
}, function (_751) {
    return function (_752) {
        return _751 / _752;
    };
}, function (_753) {
    return function (_754) {
        return 0.0;
    };
});
var fromSeconds = function (dict) {
    return dict.fromSeconds;
};
var fromMinutes = function (dict) {
    return dict.fromMinutes;
};
var fromMilliseconds = function (dict) {
    return dict.fromMilliseconds;
};
var fromHours = function (dict) {
    return dict.fromHours;
};
var eqSeconds = new Prelude.Eq(function (_779) {
    return function (_780) {
        return _779 === _780;
    };
});
var ordSeconds = new Prelude.Ord(function () {
    return eqSeconds;
}, function (_781) {
    return function (_782) {
        return Prelude.compare(Prelude.ordNumber)(_781)(_782);
    };
});
var eqSecondOfMinute = new Prelude.Eq(function (_775) {
    return function (_776) {
        return Prelude["=="](Prelude.eqInt)(_775)(_776);
    };
});
var ordSecondOfMinute = new Prelude.Ord(function () {
    return eqSecondOfMinute;
}, function (_777) {
    return function (_778) {
        return Prelude.compare(Prelude.ordInt)(_777)(_778);
    };
});
var eqMinutes = new Prelude.Eq(function (_760) {
    return function (_761) {
        return _760 === _761;
    };
});
var ordMinutes = new Prelude.Ord(function () {
    return eqMinutes;
}, function (_762) {
    return function (_763) {
        return Prelude.compare(Prelude.ordNumber)(_762)(_763);
    };
});
var eqMinuteOfHour = new Prelude.Eq(function (_756) {
    return function (_757) {
        return Prelude["=="](Prelude.eqInt)(_756)(_757);
    };
});
var ordMinuteOfHour = new Prelude.Ord(function () {
    return eqMinuteOfHour;
}, function (_758) {
    return function (_759) {
        return Prelude.compare(Prelude.ordInt)(_758)(_759);
    };
});
var eqMilliseconds = new Prelude.Eq(function (_798) {
    return function (_799) {
        return _798 === _799;
    };
});
var ordMilliseconds = new Prelude.Ord(function () {
    return eqMilliseconds;
}, function (_800) {
    return function (_801) {
        return Prelude.compare(Prelude.ordNumber)(_800)(_801);
    };
});
var eqMillisecondOfSecond = new Prelude.Eq(function (_794) {
    return function (_795) {
        return Prelude["=="](Prelude.eqInt)(_794)(_795);
    };
});
var ordMillisecondOfSecond = new Prelude.Ord(function () {
    return eqMillisecondOfSecond;
}, function (_796) {
    return function (_797) {
        return Prelude.compare(Prelude.ordInt)(_796)(_797);
    };
});
var eqHours = new Prelude.Eq(function (_741) {
    return function (_742) {
        return _741 === _742;
    };
});
var ordHours = new Prelude.Ord(function () {
    return eqHours;
}, function (_743) {
    return function (_744) {
        return Prelude.compare(Prelude.ordNumber)(_743)(_744);
    };
});
var eqHourOfDay = new Prelude.Eq(function (_737) {
    return function (_738) {
        return Prelude["=="](Prelude.eqInt)(_737)(_738);
    };
});
var ordHourOfDay = new Prelude.Ord(function () {
    return eqHourOfDay;
}, function (_739) {
    return function (_740) {
        return Prelude.compare(Prelude.ordInt)(_739)(_740);
    };
});
var divisionRingSeconds = new Prelude.DivisionRing(function () {
    return moduloSemiringSeconds;
}, function () {
    return ringSeconds;
});
var numSeconds = new Prelude.Num(function () {
    return divisionRingSeconds;
});
var divisionRingMinutes = new Prelude.DivisionRing(function () {
    return moduloSemiringMinutes;
}, function () {
    return ringMinutes;
});
var numMinutes = new Prelude.Num(function () {
    return divisionRingMinutes;
});
var divisionRingMilliseconds = new Prelude.DivisionRing(function () {
    return moduloSemiringMilliseconds;
}, function () {
    return ringMilliseconds;
});
var numMilliseconds = new Prelude.Num(function () {
    return divisionRingMilliseconds;
});
var divisionRingHours = new Prelude.DivisionRing(function () {
    return moduloSemiringHours;
}, function () {
    return ringHours;
});
var numHours = new Prelude.Num(function () {
    return divisionRingHours;
});
module.exports = {
    Milliseconds: Milliseconds, 
    MillisecondOfSecond: MillisecondOfSecond, 
    Seconds: Seconds, 
    SecondOfMinute: SecondOfMinute, 
    Minutes: Minutes, 
    MinuteOfHour: MinuteOfHour, 
    Hours: Hours, 
    HourOfDay: HourOfDay, 
    TimeValue: TimeValue, 
    fromMilliseconds: fromMilliseconds, 
    fromSeconds: fromSeconds, 
    fromMinutes: fromMinutes, 
    fromHours: fromHours, 
    toMilliseconds: toMilliseconds, 
    toSeconds: toSeconds, 
    toMinutes: toMinutes, 
    toHours: toHours, 
    eqHourOfDay: eqHourOfDay, 
    ordHourOfDay: ordHourOfDay, 
    eqHours: eqHours, 
    ordHours: ordHours, 
    semiringHours: semiringHours, 
    ringHours: ringHours, 
    moduloSemiringHours: moduloSemiringHours, 
    divisionRingHours: divisionRingHours, 
    numHours: numHours, 
    showHours: showHours, 
    eqMinuteOfHour: eqMinuteOfHour, 
    ordMinuteOfHour: ordMinuteOfHour, 
    eqMinutes: eqMinutes, 
    ordMinutes: ordMinutes, 
    semiringMinutes: semiringMinutes, 
    ringMinutes: ringMinutes, 
    moduloSemiringMinutes: moduloSemiringMinutes, 
    divisionRingMinutes: divisionRingMinutes, 
    numMinutes: numMinutes, 
    showMinutes: showMinutes, 
    eqSecondOfMinute: eqSecondOfMinute, 
    ordSecondOfMinute: ordSecondOfMinute, 
    eqSeconds: eqSeconds, 
    ordSeconds: ordSeconds, 
    semiringSeconds: semiringSeconds, 
    ringSeconds: ringSeconds, 
    moduloSemiringSeconds: moduloSemiringSeconds, 
    divisionRingSeconds: divisionRingSeconds, 
    numSeconds: numSeconds, 
    showSeconds: showSeconds, 
    eqMillisecondOfSecond: eqMillisecondOfSecond, 
    ordMillisecondOfSecond: ordMillisecondOfSecond, 
    eqMilliseconds: eqMilliseconds, 
    ordMilliseconds: ordMilliseconds, 
    semiringMilliseconds: semiringMilliseconds, 
    ringMilliseconds: ringMilliseconds, 
    moduloSemiringMilliseconds: moduloSemiringMilliseconds, 
    divisionRingMilliseconds: divisionRingMilliseconds, 
    numMilliseconds: numMilliseconds, 
    showMilliseconds: showMilliseconds, 
    timeValueHours: timeValueHours, 
    timeValueMinutes: timeValueMinutes, 
    timeValueSeconds: timeValueSeconds, 
    timeValueMilliseconds: timeValueMilliseconds
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Traversable

// jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function Cont (fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function (head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function consList (x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray (list) {
    var arr = [];
    while (list !== emptyList) {
      arr.push(list.head);
      list = list.tail;
    }
    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          var buildFrom = function (x, ys) {
            return apply(map(consList)(f(x)))(ys);
          };

          var go = function (acc, currentLen, xs) {
            if (currentLen === 0) {
              return acc;
            } else {
              var last = xs[currentLen - 1];
              return new Cont(function () {
                return go(buildFrom(last, acc), currentLen - 1, xs);
              });
            }
          };

          return function (array) {
            var result = go(pure(emptyList), array.length, array);
            while (result instanceof Cont) {
              result = result.fn();
            }

            return map(listToArray)(result);
          };
        };
      };
    };
  };
}();

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Maybe_Last = require("Data.Maybe.Last");
var Data_Monoid_Additive = require("Data.Monoid.Additive");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("Data.Monoid.Multiplicative");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var StateL = function (x) {
    return x;
};
var StateR = function (x) {
    return x;
};
var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
    this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.sequence = sequence;
    this.traverse = traverse;
};
var traverse = function (dict) {
    return dict.traverse;
};
var traversableMultiplicative = new Traversable(function () {
    return Data_Foldable.foldableMultiplicative;
}, function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (__dict_Applicative_1) {
    return function (_445) {
        return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(_445);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_444) {
            return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(f(_444));
        };
    };
});
var traversableMaybe = new Traversable(function () {
    return Data_Foldable.foldableMaybe;
}, function () {
    return Data_Maybe.functorMaybe;
}, function (__dict_Applicative_3) {
    return function (_431) {
        if (_431 instanceof Data_Maybe.Nothing) {
            return Prelude.pure(__dict_Applicative_3)(Data_Maybe.Nothing.value);
        };
        if (_431 instanceof Data_Maybe.Just) {
            return Prelude["<$>"]((__dict_Applicative_3["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_431.value0);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-foldable-traversable/src/Data/Traversable.purs line 59, column 1 - line 65, column 1: " + [ _431.constructor.name ]);
    };
}, function (__dict_Applicative_2) {
    return function (f) {
        return function (_430) {
            if (_430 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(__dict_Applicative_2)(Data_Maybe.Nothing.value);
            };
            if (_430 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((__dict_Applicative_2["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(f(_430.value0));
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-foldable-traversable/src/Data/Traversable.purs line 59, column 1 - line 65, column 1: " + [ f.constructor.name, _430.constructor.name ]);
        };
    };
});
var traversableDual = new Traversable(function () {
    return Data_Foldable.foldableDual;
}, function () {
    return Data_Monoid_Dual.functorDual;
}, function (__dict_Applicative_5) {
    return function (_439) {
        return Prelude["<$>"]((__dict_Applicative_5["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Dual.Dual)(_439);
    };
}, function (__dict_Applicative_4) {
    return function (f) {
        return function (_438) {
            return Prelude["<$>"]((__dict_Applicative_4["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Dual.Dual)(f(_438));
        };
    };
});
var traversableDisj = new Traversable(function () {
    return Data_Foldable.foldableDisj;
}, function () {
    return Data_Monoid_Disj.functorDisj;
}, function (__dict_Applicative_7) {
    return function (_443) {
        return Prelude["<$>"]((__dict_Applicative_7["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Disj.Disj)(_443);
    };
}, function (__dict_Applicative_6) {
    return function (f) {
        return function (_442) {
            return Prelude["<$>"]((__dict_Applicative_6["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Disj.Disj)(f(_442));
        };
    };
});
var traversableConj = new Traversable(function () {
    return Data_Foldable.foldableConj;
}, function () {
    return Data_Monoid_Conj.functorConj;
}, function (__dict_Applicative_9) {
    return function (_441) {
        return Prelude["<$>"]((__dict_Applicative_9["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Conj.Conj)(_441);
    };
}, function (__dict_Applicative_8) {
    return function (f) {
        return function (_440) {
            return Prelude["<$>"]((__dict_Applicative_8["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Conj.Conj)(f(_440));
        };
    };
});
var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
}, function () {
    return Prelude.functorArray;
}, function (__dict_Applicative_11) {
    return traverse(traversableArray)(__dict_Applicative_11)(Prelude.id(Prelude.categoryFn));
}, function (__dict_Applicative_10) {
    return $foreign.traverseArrayImpl(Prelude.apply(__dict_Applicative_10["__superclass_Prelude.Apply_0"]()))(Prelude.map((__dict_Applicative_10["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(__dict_Applicative_10));
});
var traversableAdditive = new Traversable(function () {
    return Data_Foldable.foldableAdditive;
}, function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (__dict_Applicative_13) {
    return function (_437) {
        return Prelude["<$>"]((__dict_Applicative_13["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Additive.Additive)(_437);
    };
}, function (__dict_Applicative_12) {
    return function (f) {
        return function (_436) {
            return Prelude["<$>"]((__dict_Applicative_12["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Additive.Additive)(f(_436));
        };
    };
});
var stateR = function (_429) {
    return _429;
};
var stateL = function (_428) {
    return _428;
};
var sequence = function (dict) {
    return dict.sequence;
};
var traversableFirst = new Traversable(function () {
    return Data_Foldable.foldableFirst;
}, function () {
    return Data_Maybe_First.functorFirst;
}, function (__dict_Applicative_15) {
    return function (_433) {
        return Prelude["<$>"]((__dict_Applicative_15["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_First.First)(sequence(traversableMaybe)(__dict_Applicative_15)(_433));
    };
}, function (__dict_Applicative_14) {
    return function (f) {
        return function (_432) {
            return Prelude["<$>"]((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_First.First)(traverse(traversableMaybe)(__dict_Applicative_14)(f)(_432));
        };
    };
});
var traversableLast = new Traversable(function () {
    return Data_Foldable.foldableLast;
}, function () {
    return Data_Maybe_Last.functorLast;
}, function (__dict_Applicative_17) {
    return function (_435) {
        return Prelude["<$>"]((__dict_Applicative_17["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(__dict_Applicative_17)(_435));
    };
}, function (__dict_Applicative_16) {
    return function (f) {
        return function (_434) {
            return Prelude["<$>"]((__dict_Applicative_16["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(__dict_Applicative_16)(f)(_434));
        };
    };
});
var functorStateR = new Prelude.Functor(function (f) {
    return function (k) {
        return function (s) {
            var _1258 = stateR(k)(s);
            return {
                accum: _1258.accum, 
                value: f(_1258.value)
            };
        };
    };
});
var functorStateL = new Prelude.Functor(function (f) {
    return function (k) {
        return function (s) {
            var _1261 = stateL(k)(s);
            return {
                accum: _1261.accum, 
                value: f(_1261.value)
            };
        };
    };
});
var $$for = function (__dict_Applicative_22) {
    return function (__dict_Traversable_23) {
        return function (x) {
            return function (f) {
                return traverse(__dict_Traversable_23)(__dict_Applicative_22)(f)(x);
            };
        };
    };
};
var applyStateR = new Prelude.Apply(function () {
    return functorStateR;
}, function (f) {
    return function (x) {
        return function (s) {
            var _1264 = stateR(x)(s);
            var _1265 = stateR(f)(_1264.accum);
            return {
                accum: _1265.accum, 
                value: _1265.value(_1264.value)
            };
        };
    };
});
var applyStateL = new Prelude.Apply(function () {
    return functorStateL;
}, function (f) {
    return function (x) {
        return function (s) {
            var _1270 = stateL(f)(s);
            var _1271 = stateL(x)(_1270.accum);
            return {
                accum: _1271.accum, 
                value: _1270.value(_1271.value)
            };
        };
    };
});
var applicativeStateR = new Prelude.Applicative(function () {
    return applyStateR;
}, function (a) {
    return function (s) {
        return {
            accum: s, 
            value: a
        };
    };
});
var mapAccumR = function (__dict_Traversable_18) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateR(traverse(__dict_Traversable_18)(applicativeStateR)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanr = function (__dict_Traversable_19) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumR(__dict_Traversable_19)(function (b) {
                    return function (a) {
                        var b$prime = f(a)(b);
                        return {
                            accum: b$prime, 
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var applicativeStateL = new Prelude.Applicative(function () {
    return applyStateL;
}, function (a) {
    return function (s) {
        return {
            accum: s, 
            value: a
        };
    };
});
var mapAccumL = function (__dict_Traversable_20) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateL(traverse(__dict_Traversable_20)(applicativeStateL)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanl = function (__dict_Traversable_21) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumL(__dict_Traversable_21)(function (b) {
                    return function (a) {
                        var b$prime = f(b)(a);
                        return {
                            accum: b$prime, 
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
module.exports = {
    Traversable: Traversable, 
    mapAccumR: mapAccumR, 
    mapAccumL: mapAccumL, 
    scanr: scanr, 
    scanl: scanl, 
    "for": $$for, 
    sequence: sequence, 
    traverse: traverse, 
    traversableArray: traversableArray, 
    traversableMaybe: traversableMaybe, 
    traversableFirst: traversableFirst, 
    traversableLast: traversableLast, 
    traversableAdditive: traversableAdditive, 
    traversableDual: traversableDual, 
    traversableConj: traversableConj, 
    traversableDisj: traversableDisj, 
    traversableMultiplicative: traversableMultiplicative
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/foreign.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Maybe.First":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe.First/index.js","Data.Maybe.Last":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe.Last/index.js","Data.Monoid.Additive":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Additive/index.js","Data.Monoid.Conj":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Conj/index.js","Data.Monoid.Disj":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Disj/index.js","Data.Monoid.Dual":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Dual/index.js","Data.Monoid.Multiplicative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid.Multiplicative/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple.Nested/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Tuple = require("Data.Tuple");
var $div$bslash = function (a) {
    return function (b) {
        return new Data_Tuple.Tuple(a, b);
    };
};
var uncurry9 = function (f$prime) {
    return function (_737) {
        return f$prime(_737.value0.value0.value0.value0.value0.value0.value0.value0)(_737.value0.value0.value0.value0.value0.value0.value0.value1)(_737.value0.value0.value0.value0.value0.value0.value1)(_737.value0.value0.value0.value0.value0.value1)(_737.value0.value0.value0.value0.value1)(_737.value0.value0.value0.value1)(_737.value0.value0.value1)(_737.value0.value1)(_737.value1);
    };
};
var uncurry8 = function (f$prime) {
    return function (_736) {
        return f$prime(_736.value0.value0.value0.value0.value0.value0.value0)(_736.value0.value0.value0.value0.value0.value0.value1)(_736.value0.value0.value0.value0.value0.value1)(_736.value0.value0.value0.value0.value1)(_736.value0.value0.value0.value1)(_736.value0.value0.value1)(_736.value0.value1)(_736.value1);
    };
};
var uncurry7 = function (f$prime) {
    return function (_735) {
        return f$prime(_735.value0.value0.value0.value0.value0.value0)(_735.value0.value0.value0.value0.value0.value1)(_735.value0.value0.value0.value0.value1)(_735.value0.value0.value0.value1)(_735.value0.value0.value1)(_735.value0.value1)(_735.value1);
    };
};
var uncurry6 = function (f$prime) {
    return function (_734) {
        return f$prime(_734.value0.value0.value0.value0.value0)(_734.value0.value0.value0.value0.value1)(_734.value0.value0.value0.value1)(_734.value0.value0.value1)(_734.value0.value1)(_734.value1);
    };
};
var uncurry5 = function (f) {
    return function (_733) {
        return f(_733.value0.value0.value0.value0)(_733.value0.value0.value0.value1)(_733.value0.value0.value1)(_733.value0.value1)(_733.value1);
    };
};
var uncurry4 = function (f) {
    return function (_732) {
        return f(_732.value0.value0.value0)(_732.value0.value0.value1)(_732.value0.value1)(_732.value1);
    };
};
var uncurry3 = function (f) {
    return function (_731) {
        return f(_731.value0.value0)(_731.value0.value1)(_731.value1);
    };
};
var uncurry2 = function (f) {
    return function (_730) {
        return f(_730.value0)(_730.value1);
    };
};
var uncurry10 = function (f$prime) {
    return function (_738) {
        return f$prime(_738.value0.value0.value0.value0.value0.value0.value0.value0.value0)(_738.value0.value0.value0.value0.value0.value0.value0.value0.value1)(_738.value0.value0.value0.value0.value0.value0.value0.value1)(_738.value0.value0.value0.value0.value0.value0.value1)(_738.value0.value0.value0.value0.value0.value1)(_738.value0.value0.value0.value0.value1)(_738.value0.value0.value0.value1)(_738.value0.value0.value1)(_738.value0.value1)(_738.value1);
    };
};
var tuple9 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d), e), f), g), h), i);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple8 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d), e), f), g), h);
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple7 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d), e), f), g);
                        };
                    };
                };
            };
        };
    };
};
var tuple6 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d), e), f);
                    };
                };
            };
        };
    };
};
var tuple5 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d), e);
                };
            };
        };
    };
};
var tuple4 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d);
            };
        };
    };
};
var tuple3 = function (a) {
    return function (b) {
        return function (c) {
            return new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c);
        };
    };
};
var tuple2 = Data_Tuple.Tuple.create;
var tuple10 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (j) {
                                        return new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d), e), f), g), h), i), j);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry9 = function (f$prime) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return f$prime(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d), e), f), g), h), i));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry8 = function (f$prime) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return f$prime(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d), e), f), g), h));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry7 = function (f$prime) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return f$prime(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d), e), f), g));
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry6 = function (f$prime) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return f$prime(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d), e), f));
                        };
                    };
                };
            };
        };
    };
};
var curry5 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return f(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d), e));
                    };
                };
            };
        };
    };
};
var curry4 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return f(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d));
                };
            };
        };
    };
};
var curry3 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return f(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c));
            };
        };
    };
};
var curry2 = function (f) {
    return function (a) {
        return function (b) {
            return f(new Data_Tuple.Tuple(a, b));
        };
    };
};
var curry10 = function (f$prime) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return function (j) {
                                            return f$prime(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d), e), f), g), h), i), j));
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
module.exports = {
    "/\\": $div$bslash, 
    curry10: curry10, 
    uncurry10: uncurry10, 
    curry9: curry9, 
    uncurry9: uncurry9, 
    curry8: curry8, 
    uncurry8: uncurry8, 
    curry7: curry7, 
    uncurry7: uncurry7, 
    curry6: curry6, 
    uncurry6: uncurry6, 
    curry5: curry5, 
    uncurry5: uncurry5, 
    curry4: curry4, 
    uncurry4: uncurry4, 
    curry3: curry3, 
    uncurry3: uncurry3, 
    curry2: curry2, 
    uncurry2: uncurry2, 
    tuple10: tuple10, 
    tuple9: tuple9, 
    tuple8: tuple8, 
    tuple7: tuple7, 
    tuple6: tuple6, 
    tuple5: tuple5, 
    tuple4: tuple4, 
    tuple3: tuple3, 
    tuple2: tuple2
};

},{"Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Control_Lazy = require("Control.Lazy");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Foldable = require("Data.Foldable");
var Control_Biapplicative = require("Control.Biapplicative");
var Control_Biapply = require("Control.Biapply");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Data_Bitraversable = require("Data.Bitraversable");
var Data_Maybe = require("Data.Maybe");
var Data_Traversable = require("Data.Traversable");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var uncurry = function (f) {
    return function (_550) {
        return f(_550.value0)(_550.value1);
    };
};
var swap = function (_551) {
    return new Tuple(_551.value1, _551.value0);
};
var snd = function (_549) {
    return _549.value1;
};
var showTuple = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (_552) {
            return "Tuple (" + (Prelude.show(__dict_Show_2)(_552.value0) + (") (" + (Prelude.show(__dict_Show_3)(_552.value1) + ")")));
        });
    };
};
var semiringTuple = function (__dict_Semiring_4) {
    return function (__dict_Semiring_5) {
        return new Prelude.Semiring(function (_561) {
            return function (_562) {
                return new Tuple(Prelude.add(__dict_Semiring_4)(_561.value0)(_562.value0), Prelude.add(__dict_Semiring_5)(_561.value1)(_562.value1));
            };
        }, function (_563) {
            return function (_564) {
                return new Tuple(Prelude.mul(__dict_Semiring_4)(_563.value0)(_564.value0), Prelude.mul(__dict_Semiring_5)(_563.value1)(_564.value1));
            };
        }, new Tuple(Prelude.one(__dict_Semiring_4), Prelude.one(__dict_Semiring_5)), new Tuple(Prelude.zero(__dict_Semiring_4), Prelude.zero(__dict_Semiring_5)));
    };
};
var semigroupoidTuple = new Prelude.Semigroupoid(function (_557) {
    return function (_558) {
        return new Tuple(_558.value0, _557.value1);
    };
});
var semigroupTuple = function (__dict_Semigroup_6) {
    return function (__dict_Semigroup_7) {
        return new Prelude.Semigroup(function (_559) {
            return function (_560) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_6)(_559.value0)(_560.value0), Prelude["<>"](__dict_Semigroup_7)(_559.value1)(_560.value1));
            };
        });
    };
};
var ringTuple = function (__dict_Ring_8) {
    return function (__dict_Ring_9) {
        return new Prelude.Ring(function () {
            return semiringTuple(__dict_Ring_8["__superclass_Prelude.Semiring_0"]())(__dict_Ring_9["__superclass_Prelude.Semiring_0"]());
        }, function (_569) {
            return function (_570) {
                return new Tuple(Prelude.sub(__dict_Ring_8)(_569.value0)(_570.value0), Prelude.sub(__dict_Ring_9)(_569.value1)(_570.value1));
            };
        });
    };
};
var monoidTuple = function (__dict_Monoid_14) {
    return function (__dict_Monoid_15) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTuple(__dict_Monoid_14["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_15["__superclass_Prelude.Semigroup_0"]());
        }, new Tuple(Data_Monoid.mempty(__dict_Monoid_14), Data_Monoid.mempty(__dict_Monoid_15)));
    };
};
var moduloSemiringTuple = function (__dict_ModuloSemiring_17) {
    return function (__dict_ModuloSemiring_18) {
        return new Prelude.ModuloSemiring(function () {
            return semiringTuple(__dict_ModuloSemiring_17["__superclass_Prelude.Semiring_0"]())(__dict_ModuloSemiring_18["__superclass_Prelude.Semiring_0"]());
        }, function (_565) {
            return function (_566) {
                return new Tuple(Prelude.div(__dict_ModuloSemiring_17)(_565.value0)(_566.value0), Prelude.div(__dict_ModuloSemiring_18)(_565.value1)(_566.value1));
            };
        }, function (_567) {
            return function (_568) {
                return new Tuple(Prelude.mod(__dict_ModuloSemiring_17)(_567.value0)(_568.value0), Prelude.mod(__dict_ModuloSemiring_18)(_567.value1)(_568.value1));
            };
        });
    };
};
var lookup = function (__dict_Foldable_19) {
    return function (__dict_Eq_20) {
        return function (a) {
            return function (f) {
                return Data_Maybe_First.runFirst(Data_Foldable.foldMap(__dict_Foldable_19)(Data_Maybe_First.monoidFirst)(function (_547) {
                    var _1308 = Prelude["=="](__dict_Eq_20)(a)(_547.value0);
                    if (_1308) {
                        return new Data_Maybe.Just(_547.value1);
                    };
                    if (!_1308) {
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-tuples/src/Data/Tuple.purs line 173, column 1 - line 174, column 1: " + [ _1308.constructor.name ]);
                })(f));
            };
        };
    };
};
var functorTuple = new Prelude.Functor(function (f) {
    return function (_576) {
        return new Tuple(_576.value0, f(_576.value1));
    };
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
var fst = function (_548) {
    return _548.value0;
};
var lazyTuple = function (__dict_Lazy_21) {
    return function (__dict_Lazy_22) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer(__dict_Lazy_21)(function (_545) {
                return fst(f(Prelude.unit));
            }), Control_Lazy.defer(__dict_Lazy_22)(function (_546) {
                return snd(f(Prelude.unit));
            }));
        });
    };
};
var foldableTuple = new Data_Foldable.Foldable(function (__dict_Monoid_23) {
    return function (f) {
        return function (_586) {
            return f(_586.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (_585) {
            return f(z)(_585.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (_584) {
            return f(_584.value1)(z);
        };
    };
});
var traversableTuple = new Data_Traversable.Traversable(function () {
    return foldableTuple;
}, function () {
    return functorTuple;
}, function (__dict_Applicative_1) {
    return function (_591) {
        return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create(_591.value0))(_591.value1);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_590) {
            return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create(_590.value0))(f(_590.value1));
        };
    };
});
var extendTuple = new Control_Extend.Extend(function () {
    return functorTuple;
}, function (f) {
    return function (_583) {
        return new Tuple(_583.value0, f(_583));
    };
});
var eqTuple = function (__dict_Eq_24) {
    return function (__dict_Eq_25) {
        return new Prelude.Eq(function (_553) {
            return function (_554) {
                return Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["=="](__dict_Eq_24)(_553.value0)(_554.value0))(Prelude["=="](__dict_Eq_25)(_553.value1)(_554.value1));
            };
        });
    };
};
var ordTuple = function (__dict_Ord_10) {
    return function (__dict_Ord_11) {
        return new Prelude.Ord(function () {
            return eqTuple(__dict_Ord_10["__superclass_Prelude.Eq_0"]())(__dict_Ord_11["__superclass_Prelude.Eq_0"]());
        }, function (_555) {
            return function (_556) {
                var _1353 = Prelude.compare(__dict_Ord_10)(_555.value0)(_556.value0);
                if (_1353 instanceof Prelude.EQ) {
                    return Prelude.compare(__dict_Ord_11)(_555.value1)(_556.value1);
                };
                return _1353;
            };
        });
    };
};
var divisionRingTuple = function (__dict_DivisionRing_26) {
    return function (__dict_DivisionRing_27) {
        return new Prelude.DivisionRing(function () {
            return moduloSemiringTuple(__dict_DivisionRing_26["__superclass_Prelude.ModuloSemiring_1"]())(__dict_DivisionRing_27["__superclass_Prelude.ModuloSemiring_1"]());
        }, function () {
            return ringTuple(__dict_DivisionRing_26["__superclass_Prelude.Ring_0"]())(__dict_DivisionRing_27["__superclass_Prelude.Ring_0"]());
        });
    };
};
var numTuple = function (__dict_Num_12) {
    return function (__dict_Num_13) {
        return new Prelude.Num(function () {
            return divisionRingTuple(__dict_Num_12["__superclass_Prelude.DivisionRing_0"]())(__dict_Num_13["__superclass_Prelude.DivisionRing_0"]());
        });
    };
};
var curry = function (f) {
    return function (a) {
        return function (b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = new Control_Comonad.Comonad(function () {
    return extendTuple;
}, snd);
var boundedTuple = function (__dict_Bounded_28) {
    return function (__dict_Bounded_29) {
        return new Prelude.Bounded(new Tuple(Prelude.bottom(__dict_Bounded_28), Prelude.bottom(__dict_Bounded_29)), new Tuple(Prelude.top(__dict_Bounded_28), Prelude.top(__dict_Bounded_29)));
    };
};
var boundedOrdTuple = function (__dict_BoundedOrd_30) {
    return function (__dict_BoundedOrd_31) {
        return new Prelude.BoundedOrd(function () {
            return boundedTuple(__dict_BoundedOrd_30["__superclass_Prelude.Bounded_0"]())(__dict_BoundedOrd_31["__superclass_Prelude.Bounded_0"]());
        }, function () {
            return ordTuple(__dict_BoundedOrd_30["__superclass_Prelude.Ord_1"]())(__dict_BoundedOrd_31["__superclass_Prelude.Ord_1"]());
        });
    };
};
var booleanAlgebraTuple = function (__dict_BooleanAlgebra_32) {
    return function (__dict_BooleanAlgebra_33) {
        return new Prelude.BooleanAlgebra(function () {
            return boundedTuple(__dict_BooleanAlgebra_32["__superclass_Prelude.Bounded_0"]())(__dict_BooleanAlgebra_33["__superclass_Prelude.Bounded_0"]());
        }, function (_571) {
            return function (_572) {
                return new Tuple(Prelude.conj(__dict_BooleanAlgebra_32)(_571.value0)(_572.value0), Prelude.conj(__dict_BooleanAlgebra_33)(_571.value1)(_572.value1));
            };
        }, function (_573) {
            return function (_574) {
                return new Tuple(Prelude.disj(__dict_BooleanAlgebra_32)(_573.value0)(_574.value0), Prelude.disj(__dict_BooleanAlgebra_33)(_573.value1)(_574.value1));
            };
        }, function (_575) {
            return new Tuple(Prelude.not(__dict_BooleanAlgebra_32)(_575.value0), Prelude.not(__dict_BooleanAlgebra_33)(_575.value1));
        });
    };
};
var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (_577) {
            return new Tuple(f(_577.value0), g(_577.value1));
        };
    };
});
var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (__dict_Monoid_37) {
    return function (f) {
        return function (g) {
            return function (_587) {
                return Prelude["<>"](__dict_Monoid_37["__superclass_Prelude.Semigroup_0"]())(f(_587.value0))(g(_587.value1));
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (_589) {
                return g(f(z)(_589.value0))(_589.value1);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (_588) {
                return f(_588.value0)(g(_588.value1)(z));
            };
        };
    };
});
var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableTuple;
}, function () {
    return bifunctorTuple;
}, function (__dict_Applicative_35) {
    return function (_593) {
        return Prelude["<*>"](__dict_Applicative_35["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_35["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create)(_593.value0))(_593.value1);
    };
}, function (__dict_Applicative_34) {
    return function (f) {
        return function (g) {
            return function (_592) {
                return Prelude["<*>"](__dict_Applicative_34["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_34["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create)(f(_592.value0)))(g(_592.value1));
            };
        };
    };
});
var biapplyTuple = new Control_Biapply.Biapply(function () {
    return bifunctorTuple;
}, function (_580) {
    return function (_581) {
        return new Tuple(_580.value0(_581.value0), _580.value1(_581.value1));
    };
});
var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
    return biapplyTuple;
}, Tuple.create);
var applyTuple = function (__dict_Semigroup_38) {
    return new Prelude.Apply(function () {
        return functorTuple;
    }, function (_578) {
        return function (_579) {
            return new Tuple(Prelude["<>"](__dict_Semigroup_38)(_578.value0)(_579.value0), _578.value1(_579.value1));
        };
    });
};
var bindTuple = function (__dict_Semigroup_36) {
    return new Prelude.Bind(function () {
        return applyTuple(__dict_Semigroup_36);
    }, function (_582) {
        return function (f) {
            var _1417 = f(_582.value1);
            return new Tuple(Prelude["<>"](__dict_Semigroup_36)(_582.value0)(_1417.value0), _1417.value1);
        };
    });
};
var applicativeTuple = function (__dict_Monoid_39) {
    return new Prelude.Applicative(function () {
        return applyTuple(__dict_Monoid_39["__superclass_Prelude.Semigroup_0"]());
    }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_39)));
};
var monadTuple = function (__dict_Monoid_16) {
    return new Prelude.Monad(function () {
        return applicativeTuple(__dict_Monoid_16);
    }, function () {
        return bindTuple(__dict_Monoid_16["__superclass_Prelude.Semigroup_0"]());
    });
};
module.exports = {
    Tuple: Tuple, 
    lookup: lookup, 
    swap: swap, 
    uncurry: uncurry, 
    curry: curry, 
    snd: snd, 
    fst: fst, 
    showTuple: showTuple, 
    eqTuple: eqTuple, 
    ordTuple: ordTuple, 
    boundedTuple: boundedTuple, 
    boundedOrdTuple: boundedOrdTuple, 
    semigroupoidTuple: semigroupoidTuple, 
    semigroupTuple: semigroupTuple, 
    monoidTuple: monoidTuple, 
    semiringTuple: semiringTuple, 
    moduloSemiringTuple: moduloSemiringTuple, 
    ringTuple: ringTuple, 
    divisionRingTuple: divisionRingTuple, 
    numTuple: numTuple, 
    booleanAlgebraTuple: booleanAlgebraTuple, 
    functorTuple: functorTuple, 
    invariantTuple: invariantTuple, 
    bifunctorTuple: bifunctorTuple, 
    applyTuple: applyTuple, 
    biapplyTuple: biapplyTuple, 
    applicativeTuple: applicativeTuple, 
    biapplicativeTuple: biapplicativeTuple, 
    bindTuple: bindTuple, 
    monadTuple: monadTuple, 
    extendTuple: extendTuple, 
    comonadTuple: comonadTuple, 
    lazyTuple: lazyTuple, 
    foldableTuple: foldableTuple, 
    bifoldableTuple: bifoldableTuple, 
    traversableTuple: traversableTuple, 
    bitraversableTuple: bitraversableTuple
};

},{"Control.Biapplicative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Biapplicative/index.js","Control.Biapply":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Biapply/index.js","Control.Comonad":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Comonad/index.js","Control.Extend":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Extend/index.js","Control.Lazy":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Lazy/index.js","Data.Bifoldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bifoldable/index.js","Data.Bifunctor":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bifunctor/index.js","Data.Bitraversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bitraversable/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Functor.Invariant":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Maybe.First":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe.First/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Unfoldable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Array_ST = require("Data.Array.ST");
var Prelude = require("Prelude");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Unfoldable = function (unfoldr) {
    this.unfoldr = unfoldr;
};
var unfoldr = function (dict) {
    return dict.unfoldr;
};
var unfoldableArray = new Unfoldable(function (f) {
    return function (b) {
        return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
            var _72 = Data_Array_ST.emptySTArray();
            var _71 = Control_Monad_ST.newSTRef(b)();
            (function () {
                while (!(function __do() {
                    var _70 = Control_Monad_ST.readSTRef(_71)();
                    return (function () {
                        var _728 = f(_70);
                        if (_728 instanceof Data_Maybe.Nothing) {
                            return Prelude["return"](Control_Monad_Eff.applicativeEff)(true);
                        };
                        if (_728 instanceof Data_Maybe.Just) {
                            return function __do() {
                                Data_Array_ST.pushSTArray(_72)(_728.value0.value0)();
                                Control_Monad_ST.writeSTRef(_71)(_728.value0.value1)();
                                return Prelude["return"](Control_Monad_Eff.applicativeEff)(false)();
                            };
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-unfoldable/src/Data/Unfoldable.purs line 28, column 1 - line 40, column 16: " + [ _728.constructor.name ]);
                    })()();
                })()) {

                };
                return {};
            })();
            return Prelude["return"](Control_Monad_Eff.applicativeEff)(_72)();
        }));
    };
});
module.exports = {
    Unfoldable: Unfoldable, 
    unfoldr: unfoldr, 
    unfoldableArray: unfoldableArray
};

},{"Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Control.Monad.ST":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.ST/index.js","Data.Array.ST":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array.ST/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Validation.Semiring/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Plus = require("Control.Plus");
var Control_Alternative = require("Control.Alternative");
var Valid = (function () {
    function Valid(value0) {
        this.value0 = value0;
    };
    Valid.create = function (value0) {
        return new Valid(value0);
    };
    return Valid;
})();
var Invalid = (function () {
    function Invalid(value0) {
        this.value0 = value0;
    };
    Invalid.create = function (value0) {
        return new Invalid(value0);
    };
    return Invalid;
})();
var showV = function (__dict_Show_0) {
    return function (__dict_Show_1) {
        return new Prelude.Show(function (_1078) {
            if (_1078 instanceof Invalid) {
                return "Invalid (" + (Prelude.show(__dict_Show_0)(_1078.value0) + ")");
            };
            if (_1078 instanceof Valid) {
                return "Valid (" + (Prelude.show(__dict_Show_1)(_1078.value0) + ")");
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-validation/src/Data/Validation/Semiring.purs line 53, column 1 - line 57, column 1: " + [ _1078.constructor.name ]);
        });
    };
};
var runV = function (f) {
    return function (g) {
        return function (_1076) {
            if (_1076 instanceof Invalid) {
                return f(_1076.value0);
            };
            if (_1076 instanceof Valid) {
                return g(_1076.value0);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-validation/src/Data/Validation/Semiring.purs line 44, column 1 - line 45, column 1: " + [ f.constructor.name, g.constructor.name, _1076.constructor.name ]);
        };
    };
};
var isValid = function (_1077) {
    if (_1077 instanceof Valid) {
        return true;
    };
    return false;
};
var invalid = Invalid.create;
var functorV = new Prelude.Functor(function (f) {
    return function (_1079) {
        if (_1079 instanceof Invalid) {
            return new Invalid(_1079.value0);
        };
        if (_1079 instanceof Valid) {
            return new Valid(f(_1079.value0));
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-validation/src/Data/Validation/Semiring.purs line 57, column 1 - line 61, column 1: " + [ f.constructor.name, _1079.constructor.name ]);
    };
});
var applyV = function (__dict_Semiring_3) {
    return new Prelude.Apply(function () {
        return functorV;
    }, function (_1080) {
        return function (_1081) {
            if (_1080 instanceof Invalid && _1081 instanceof Invalid) {
                return new Invalid(Prelude["*"](__dict_Semiring_3)(_1080.value0)(_1081.value0));
            };
            if (_1080 instanceof Invalid) {
                return new Invalid(_1080.value0);
            };
            if (_1081 instanceof Invalid) {
                return new Invalid(_1081.value0);
            };
            if (_1080 instanceof Valid && _1081 instanceof Valid) {
                return new Valid(_1080.value0(_1081.value0));
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-validation/src/Data/Validation/Semiring.purs line 61, column 1 - line 67, column 1: " + [ _1080.constructor.name, _1081.constructor.name ]);
        };
    });
};
var applicativeV = function (__dict_Semiring_4) {
    return new Prelude.Applicative(function () {
        return applyV(__dict_Semiring_4);
    }, Valid.create);
};
var altV = function (__dict_Semiring_5) {
    return new Control_Alt.Alt(function () {
        return functorV;
    }, function (_1082) {
        return function (_1083) {
            if (_1082 instanceof Invalid && _1083 instanceof Invalid) {
                return new Invalid(Prelude["+"](__dict_Semiring_5)(_1082.value0)(_1083.value0));
            };
            if (_1082 instanceof Invalid) {
                return _1083;
            };
            if (_1082 instanceof Valid) {
                return new Valid(_1082.value0);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-validation/src/Data/Validation/Semiring.purs line 70, column 1 - line 75, column 1: " + [ _1082.constructor.name, _1083.constructor.name ]);
        };
    });
};
var plusV = function (__dict_Semiring_2) {
    return new Control_Plus.Plus(function () {
        return altV(__dict_Semiring_2);
    }, new Invalid(Prelude.zero(__dict_Semiring_2)));
};
var alernativeV = function (__dict_Semiring_6) {
    return new Control_Alternative.Alternative(function () {
        return plusV(__dict_Semiring_6);
    }, function () {
        return applicativeV(__dict_Semiring_6);
    });
};
module.exports = {
    isValid: isValid, 
    runV: runV, 
    invalid: invalid, 
    showV: showV, 
    functorV: functorV, 
    applyV: applyV, 
    applicativeV: applicativeV, 
    altV: altV, 
    plusV: plusV, 
    alernativeV: alernativeV
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Alternative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alternative/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Void/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Functor_Contravariant = require("Data.Functor.Contravariant");
var Void = function (x) {
    return x;
};
var showVoid = new Prelude.Show(function (_138) {
    return "Void";
});
var eqVoid = new Prelude.Eq(function (_136) {
    return function (_137) {
        return true;
    };
});
var absurd = function (a) {
    var spin = function (__copy__139) {
        var _139 = __copy__139;
        tco: while (true) {
            var __tco__139 = _139;
            _139 = __tco__139;
            continue tco;
        };
    };
    return spin(a);
};
var coerce = function (__dict_Contravariant_0) {
    return function (__dict_Functor_1) {
        return function (a) {
            return Prelude["<$>"](__dict_Functor_1)(absurd)(Data_Functor_Contravariant[">$<"](__dict_Contravariant_0)(absurd)(a));
        };
    };
};
module.exports = {
    Void: Void, 
    absurd: absurd, 
    coerce: coerce, 
    eqVoid: eqVoid, 
    showVoid: showVoid
};

},{"Data.Functor.Contravariant":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Contravariant/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.AddData/foreign.js":[function(require,module,exports){
// module ECharts.AddData

exports.addDataImpl = function(data, chart) {
    return function() {
        return chart.addData.apply(chart, data);
    };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.AddData/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Function = require("Data.Function");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Effects = require("ECharts.Effects");
var AdditionalData = function (x) {
    return x;
};
var additionalDataEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_908) {
    return Data_Argonaut_Core.fromArray([ Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(_908.idx), Data_Argonaut_Encode.encodeJson(ECharts_Item_Data.itemDataEncodeJson)(_908.datum), Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(_908.isHead), Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(_908.dataGrow), Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))(_908.additionalData) ]);
});
var addData = function (d) {
    return function (chart) {
        return $foreign.addDataImpl(Data_Argonaut_Encode.encodeJson(additionalDataEncodeJson)(d), chart);
    };
};
module.exports = {
    AdditionalData: AdditionalData, 
    addData: addData, 
    additionalDataEncodeJson: additionalDataEncodeJson
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.AddData/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","ECharts.Chart":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Chart/index.js","ECharts.Effects":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Effects/index.js","ECharts.Item.Data":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Item.Data/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Axis/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Control_Alt = require("Control.Alt");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
var Data_Tuple = require("Data.Tuple");
var Data_Either = require("Data.Either");
var ECharts_Common = require("ECharts.Common");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Color = require("ECharts.Color");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Style_Text = require("ECharts.Style.Text");
var ECharts_Style_Area = require("ECharts.Style.Area");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Formatter = require("ECharts.Formatter");
var Data_Foldable = require("Data.Foldable");
var PolarPolygon = (function () {
    function PolarPolygon() {

    };
    PolarPolygon.value = new PolarPolygon();
    return PolarPolygon;
})();
var PolarCircle = (function () {
    function PolarCircle() {

    };
    PolarCircle.value = new PolarCircle();
    return PolarCircle;
})();
var PolarName = function (x) {
    return x;
};
var CategoryAxis = (function () {
    function CategoryAxis() {

    };
    CategoryAxis.value = new CategoryAxis();
    return CategoryAxis;
})();
var ValueAxis = (function () {
    function ValueAxis() {

    };
    ValueAxis.value = new ValueAxis();
    return ValueAxis;
})();
var TimeAxis = (function () {
    function TimeAxis() {

    };
    TimeAxis.value = new TimeAxis();
    return TimeAxis;
})();
var AxisTick = function (x) {
    return x;
};
var AxisSplitLine = function (x) {
    return x;
};
var AxisSplitArea = function (x) {
    return x;
};
var LeftAxis = (function () {
    function LeftAxis() {

    };
    LeftAxis.value = new LeftAxis();
    return LeftAxis;
})();
var RightAxis = (function () {
    function RightAxis() {

    };
    RightAxis.value = new RightAxis();
    return RightAxis;
})();
var TopAxis = (function () {
    function TopAxis() {

    };
    TopAxis.value = new TopAxis();
    return TopAxis;
})();
var BottomAxis = (function () {
    function BottomAxis() {

    };
    BottomAxis.value = new BottomAxis();
    return BottomAxis;
})();
var Start = (function () {
    function Start() {

    };
    Start.value = new Start();
    return Start;
})();
var End = (function () {
    function End() {

    };
    End.value = new End();
    return End;
})();
var AxisLineStyle = function (x) {
    return x;
};
var AxisLine = function (x) {
    return x;
};
var AxisLabel = function (x) {
    return x;
};
var Indicator = function (x) {
    return x;
};
var Polar = function (x) {
    return x;
};
var CommonAxisData = (function () {
    function CommonAxisData(value0) {
        this.value0 = value0;
    };
    CommonAxisData.create = function (value0) {
        return new CommonAxisData(value0);
    };
    return CommonAxisData;
})();
var CustomAxisData = (function () {
    function CustomAxisData(value0) {
        this.value0 = value0;
    };
    CustomAxisData.create = function (value0) {
        return new CustomAxisData(value0);
    };
    return CustomAxisData;
})();
var CatBoundaryGap = (function () {
    function CatBoundaryGap(value0) {
        this.value0 = value0;
    };
    CatBoundaryGap.create = function (value0) {
        return new CatBoundaryGap(value0);
    };
    return CatBoundaryGap;
})();
var ValueBoundaryGap = (function () {
    function ValueBoundaryGap(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ValueBoundaryGap.create = function (value0) {
        return function (value1) {
            return new ValueBoundaryGap(value0, value1);
        };
    };
    return ValueBoundaryGap;
})();
var Axis = function (x) {
    return x;
};
var OneAxis = (function () {
    function OneAxis(value0) {
        this.value0 = value0;
    };
    OneAxis.create = function (value0) {
        return new OneAxis(value0);
    };
    return OneAxis;
})();
var TwoAxises = (function () {
    function TwoAxises(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TwoAxises.create = function (value0) {
        return function (value1) {
            return new TwoAxises(value0, value1);
        };
    };
    return TwoAxises;
})();
var polarTypeEncode = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof PolarPolygon) {
            return "polygon";
        };
        if (a instanceof PolarCircle) {
            return "circle";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Axis.purs line 519, column 1 - line 524, column 1: " + [ a.constructor.name ]);
    })());
});
var polarTypeDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_686) {
        if (_686 === "polygon") {
            return Prelude.pure(Data_Either.applicativeEither)(PolarPolygon.value);
        };
        if (_686 === "circle") {
            return Prelude.pure(Data_Either.applicativeEither)(PolarCircle.value);
        };
        return new Data_Either.Left("incorrect polar type");
    });
});
var polarNameEncode = new Data_Argonaut_Encode.EncodeJson(function (_919) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_919.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_919.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_919.textStyle) ])));
});
var polarNameDefault = {
    show: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value
};
var polarNameDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_685) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_275) {
            return function (_276) {
                return function (_277) {
                    return {
                        show: _275, 
                        formatter: _276, 
                        textStyle: _277
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_685)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Formatter.formatterDecodeJson))(_685)("formatter")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Text.textStyleDecodeJson))(_685)("textStyle")))(function (_684) {
            return Prelude.pure(Data_Either.applicativeEither)(_684);
        });
    });
});
var polarDefault = {
    center: Data_Maybe.Nothing.value, 
    radius: Data_Maybe.Nothing.value, 
    startAngle: Data_Maybe.Nothing.value, 
    splitNumber: Data_Maybe.Nothing.value, 
    name: Data_Maybe.Nothing.value, 
    boundaryGap: Data_Maybe.Nothing.value, 
    scale: Data_Maybe.Nothing.value, 
    axisLine: Data_Maybe.Nothing.value, 
    axisLabel: Data_Maybe.Nothing.value, 
    splitLine: Data_Maybe.Nothing.value, 
    splitArea: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value, 
    indicator: Data_Maybe.Nothing.value
};
var indicatorDefault = {
    text: Data_Maybe.Nothing.value, 
    min: Data_Maybe.Nothing.value, 
    max: Data_Maybe.Nothing.value, 
    axisLabel: Data_Maybe.Nothing.value
};
var axisTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof CategoryAxis) {
            return "category";
        };
        if (a instanceof ValueAxis) {
            return "value";
        };
        if (a instanceof TimeAxis) {
            return "time";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Axis.purs line 285, column 1 - line 291, column 1: " + [ a.constructor.name ]);
    })());
});
var axisTypeDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_674) {
        if (_674 === "category") {
            return Prelude.pure(Data_Either.applicativeEither)(CategoryAxis.value);
        };
        if (_674 === "value") {
            return Prelude.pure(Data_Either.applicativeEither)(ValueAxis.value);
        };
        if (_674 === "time") {
            return Prelude.pure(Data_Either.applicativeEither)(TimeAxis.value);
        };
        return new Data_Either.Left("incorrect axis type");
    });
});
var axisTickEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_911) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_911.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("splitNumber")(_911.splitNumber), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("length")(_911.length), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_911.lineStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.intervalEncodeJson))("interval")(_911.interval), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("onGap")(_911.onGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("inside")(_911.inside) ])));
});
var axisTickDefault = {
    show: Data_Maybe.Nothing.value, 
    splitNumber: Data_Maybe.Nothing.value, 
    length: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value, 
    interval: Data_Maybe.Nothing.value, 
    onGap: Data_Maybe.Nothing.value, 
    inside: Data_Maybe.Nothing.value
};
var axisTickDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_664) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_236) {
            return function (_237) {
                return function (_238) {
                    return function (_239) {
                        return function (_240) {
                            return function (_241) {
                                return function (_242) {
                                    return {
                                        show: _236, 
                                        splitNumber: _237, 
                                        length: _238, 
                                        lineStyle: _239, 
                                        interval: _240, 
                                        onGap: _241, 
                                        inside: _242
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_664)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_664)("splitNumber")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_664)("length")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Line.lineStyleDecodeJson))(_664)("lineStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.intervalDecodeJson))(_664)("interval")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_664)("onGap")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_664)("interval")))(function (_663) {
            return Prelude.pure(Data_Either.applicativeEither)(_663);
        });
    });
});
var axisSplitLineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_914) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_914.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("onGap")(_914.onGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_914.lineStyle) ])));
});
var axisSplitLineDefault = {
    show: Data_Maybe.Nothing.value, 
    onGap: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value
};
var axisSplitLineDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_671) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_250) {
            return function (_251) {
                return function (_252) {
                    return {
                        show: _250, 
                        onGap: _251, 
                        lineStyle: _252
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_671)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_671)("onGap")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Line.lineStyleDecodeJson))(_671)("lineStyle")))(function (_670) {
            return Prelude.pure(Data_Either.applicativeEither)(_670);
        });
    });
});
var axisSplitAreaEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_915) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_915.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("onGap")(_915.onGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Area.areaStyleEncodeJson))("areaStyle")(_915.areaStyle) ])));
});
var axisSplitAreaDefault = {
    show: Data_Maybe.Nothing.value, 
    onGap: Data_Maybe.Nothing.value, 
    areaStyle: Data_Maybe.Nothing.value
};
var axisSplitAreaDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_673) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_253) {
            return function (_254) {
                return function (_255) {
                    return {
                        show: _253, 
                        onGap: _254, 
                        areaStyle: _255
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_673)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_673)("onGap")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Area.areaStyleDecodeJson))(_673)("areaStyle")))(function (_672) {
            return Prelude.pure(Data_Either.applicativeEither)(_672);
        });
    });
});
var axisPositionEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof LeftAxis) {
            return "left";
        };
        if (a instanceof RightAxis) {
            return "right";
        };
        if (a instanceof TopAxis) {
            return "top";
        };
        if (a instanceof BottomAxis) {
            return "bottom";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Axis.purs line 302, column 1 - line 309, column 1: " + [ a.constructor.name ]);
    })());
});
var axisPositionDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_675) {
        if (_675 === "left") {
            return Prelude.pure(Data_Either.applicativeEither)(LeftAxis.value);
        };
        if (_675 === "right") {
            return Prelude.pure(Data_Either.applicativeEither)(RightAxis.value);
        };
        if (_675 === "top") {
            return Prelude.pure(Data_Either.applicativeEither)(TopAxis.value);
        };
        if (_675 === "bottom") {
            return Prelude.pure(Data_Either.applicativeEither)(BottomAxis.value);
        };
        return new Data_Either.Left("incorrect axis position");
    });
});
var axisNameLocationEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof Start) {
            return "start";
        };
        if (a instanceof End) {
            return "end";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Axis.purs line 321, column 1 - line 326, column 1: " + [ a.constructor.name ]);
    })());
});
var axisNameLocationDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_676) {
        if (_676 === "start") {
            return Prelude.pure(Data_Either.applicativeEither)(Start.value);
        };
        if (_676 === "end") {
            return Prelude.pure(Data_Either.applicativeEither)(End.value);
        };
        return new Data_Either.Left("incorrect axis name location");
    });
});
var axisLineStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_909) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJString))))("color")(_909.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_909.width) ])));
});
var axisLineStyleDefault = {
    color: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value
};
var axisLineStyleDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_660) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_231) {
            return function (_232) {
                return {
                    color: _231, 
                    width: _232
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonTuple(Data_Argonaut_Decode.decodeJsonNumber)(Data_Argonaut_Decode.decodeJsonString))))(_660)("color")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_660)("width")))(function (_659) {
            return Prelude.pure(Data_Either.applicativeEither)(_659);
        });
    });
});
var axisLineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_910) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_910.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLineStyleEncodeJson))("lineStyle")(_910.lineStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("onZero")(_910.onZero) ])));
});
var axisLineDefault = {
    show: Data_Maybe.Nothing.value, 
    onZero: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value
};
var axisLineDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_662) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_233) {
            return function (_234) {
                return function (_235) {
                    return {
                        show: _233, 
                        lineStyle: _234, 
                        onZero: _235
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_662)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(axisLineStyleDecodeJson))(_662)("lineStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_662)("onZero")))(function (_661) {
            return Prelude.pure(Data_Either.applicativeEither)(_661);
        });
    });
});
var axisLabelEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_912) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_912.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_912.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_912.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.intervalEncodeJson))("interval")(_912.interval), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("rotate")(_912.rotate), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("margin")(_912.margin), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("clickable")(_912.clickable) ])));
});
var indicatorEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_920) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("text")(_920.text), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("min")(_920.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("max")(_920.max), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLabelEncodeJson))("axisLabel")(_920.axisLabel) ])));
});
var polarEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_921) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(ECharts_Common.percentOrPixelEncodeJson)(ECharts_Common.percentOrPixelEncodeJson)))("center")(_921.center), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("radius")(_921.radius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("startAngle")(_921.startAngle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("splitNumber")(_921.splitNumber), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(polarNameEncode))("name")(_921.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber)))("boundaryGap")(_921.boundaryGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("scale")(_921.scale), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLineEncodeJson))("axisLine")(_921.axisLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLabelEncodeJson))("axisLabel")(_921.axisLabel), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisSplitLineEncodeJson))("splitLine")(_921.splitLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisSplitAreaEncodeJson))("splitArea")(_921.splitArea), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(polarTypeEncode))("type")(_921.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(indicatorEncodeJson)))("indicator")(_921.indicator) ])));
});
var axisLabelDefault = {
    show: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    interval: Data_Maybe.Nothing.value, 
    rotate: Data_Maybe.Nothing.value, 
    margin: Data_Maybe.Nothing.value, 
    clickable: Data_Maybe.Nothing.value
};
var axisLabelDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_666) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_243) {
            return function (_244) {
                return function (_245) {
                    return function (_246) {
                        return function (_247) {
                            return function (_248) {
                                return function (_249) {
                                    return {
                                        show: _243, 
                                        formatter: _244, 
                                        textStyle: _245, 
                                        interval: _246, 
                                        rotate: _247, 
                                        margin: _248, 
                                        clickable: _249
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_666)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Formatter.formatterDecodeJson))(_666)("formatter")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Text.textStyleDecodeJson))(_666)("textStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.intervalDecodeJson))(_666)("interval")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_666)("rotate")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_666)("margin")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_666)("clickable")))(function (_665) {
            return Prelude.pure(Data_Either.applicativeEither)(_665);
        });
    });
});
var indicatorDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_688) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_278) {
            return function (_279) {
                return function (_280) {
                    return function (_281) {
                        return {
                            text: _278, 
                            min: _279, 
                            max: _280, 
                            axisLabel: _281
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_688)("text")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_688)("min")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_688)("max")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(axisLabelDecodeJson))(_688)("axisLabel")))(function (_687) {
            return Prelude.pure(Data_Either.applicativeEither)(_687);
        });
    });
});
var polarDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_690) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_282) {
            return function (_283) {
                return function (_284) {
                    return function (_285) {
                        return function (_286) {
                            return function (_287) {
                                return function (_288) {
                                    return function (_289) {
                                        return function (_290) {
                                            return function (_291) {
                                                return function (_292) {
                                                    return function (_293) {
                                                        return function (_294) {
                                                            return {
                                                                center: _282, 
                                                                radius: _283, 
                                                                startAngle: _284, 
                                                                splitNumber: _285, 
                                                                name: _286, 
                                                                boundaryGap: _287, 
                                                                scale: _288, 
                                                                axisLine: _289, 
                                                                axisLabel: _290, 
                                                                splitLine: _291, 
                                                                splitArea: _292, 
                                                                type: _293, 
                                                                indicator: _294
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonTuple(ECharts_Common.percentOrPixelDecodeJson)(ECharts_Common.percentOrPixelDecodeJson)))(_690)("center")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(_690)("radius")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_690)("startAngle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_690)("splitNumber")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(polarNameDecodeJson))(_690)("name")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonTuple(Data_Argonaut_Decode.decodeJsonNumber)(Data_Argonaut_Decode.decodeJsonNumber)))(_690)("boundaryGap")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_690)("scale")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(axisLineDecodeJson))(_690)("axisLine")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(axisLabelDecodeJson))(_690)("axisLabel")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(axisSplitLineDecodeJson))(_690)("splitLine")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(axisSplitAreaDecodeJson))(_690)("splitArea")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(polarTypeDecodeJson))(_690)("type")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(indicatorDecodeJson)))(_690)("indicator")))(function (_689) {
            return Prelude.pure(Data_Either.applicativeEither)(_689);
        });
    });
});
var axisDefault = {
    type: Data_Maybe.Nothing.value, 
    show: Data_Maybe.Nothing.value, 
    position: Data_Maybe.Nothing.value, 
    name: Data_Maybe.Nothing.value, 
    nameLocation: Data_Maybe.Nothing.value, 
    nameTextStyle: Data_Maybe.Nothing.value, 
    boundaryGap: Data_Maybe.Nothing.value, 
    min: Data_Maybe.Nothing.value, 
    max: Data_Maybe.Nothing.value, 
    scale: Data_Maybe.Nothing.value, 
    splitNumber: Data_Maybe.Nothing.value, 
    axisLine: Data_Maybe.Nothing.value, 
    axisTick: Data_Maybe.Nothing.value, 
    axisLabel: Data_Maybe.Nothing.value, 
    splitLine: Data_Maybe.Nothing.value, 
    splitArea: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value
};
var axisDataEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_916) {
    if (_916 instanceof CommonAxisData) {
        return Data_Argonaut_Core.fromString(_916.value0);
    };
    if (_916 instanceof CustomAxisData) {
        return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("value")(_916.value0.value), Data_Argonaut_Combinators[":="](ECharts_Style_Text.textStyleEncodeJson)("textStyle")(_916.value0.textStyle) ])));
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Axis.purs line 343, column 1 - line 352, column 1: " + [ _916.constructor.name ]);
});
var axisDataDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(CommonAxisData.create)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j)))(Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_678) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_256) {
            return function (_257) {
                return {
                    value: _256, 
                    textStyle: _257
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(_678)("value")))(Data_Argonaut_Combinators[".?"](ECharts_Style_Text.textStyleDecodeJson)(_678)("textStyle")))(function (_677) {
            return Prelude.pure(Data_Either.applicativeEither)(new CustomAxisData(_677));
        });
    }));
});
var axisBoundaryGapEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_917) {
    if (_917 instanceof CatBoundaryGap) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(_917.value0);
    };
    if (_917 instanceof ValueBoundaryGap) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))([ _917.value0, _917.value1 ]);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Axis.purs line 364, column 1 - line 368, column 1: " + [ _917.constructor.name ]);
});
var axisEncJson = new Data_Argonaut_Encode.EncodeJson(function (_918) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisTypeEncodeJson))("type")(_918.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_918.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisPositionEncodeJson))("position")(_918.position), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_918.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisNameLocationEncodeJson))("nameLocation")(_918.nameLocation), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("nameTextStyle")(_918.nameTextStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisBoundaryGapEncodeJson))("boundaryGap")(_918.boundaryGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("min")(_918.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("max")(_918.max), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("scale")(_918.scale), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("splitNumber")(_918.splitNumber), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLineEncodeJson))("axisLine")(_918.axisLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisTickEncodeJson))("axisTick")(_918.axisTick), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisLabelEncodeJson))("axisLabel")(_918.axisLabel), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisSplitLineEncodeJson))("splitLine")(_918.splitLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(axisSplitAreaEncodeJson))("splitArea")(_918.splitArea), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(axisDataEncodeJson)))("data")(_918.data) ])));
});
var axisesEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_913) {
    if (_913 instanceof OneAxis) {
        return Data_Argonaut_Encode.encodeJson(axisEncJson)(_913.value0);
    };
    if (_913 instanceof TwoAxises) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(axisEncJson))([ _913.value0, _913.value1 ]);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Axis.purs line 197, column 1 - line 201, column 1: " + [ _913.constructor.name ]);
});
var axisBoundaryGapDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(CatBoundaryGap.create)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonBoolean)(j)))(Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonNumber))(j))(function (_681) {
        return Data_Maybe.maybe(new Data_Either.Left("incorrect axis boundary gap"))(Data_Either.Right.create)(Prelude.bind(Data_Maybe.bindMaybe)(Data_Array["!!"](_681)(0))(function (_680) {
            return Prelude.bind(Data_Maybe.bindMaybe)(Data_Array["!!"](_681)(1))(function (_679) {
                return Prelude.pure(Data_Maybe.applicativeMaybe)(new ValueBoundaryGap(_680, _679));
            });
        }));
    }));
});
var axisDecJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_683) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_258) {
            return function (_259) {
                return function (_260) {
                    return function (_261) {
                        return function (_262) {
                            return function (_263) {
                                return function (_264) {
                                    return function (_265) {
                                        return function (_266) {
                                            return function (_267) {
                                                return function (_268) {
                                                    return function (_269) {
                                                        return function (_270) {
                                                            return function (_271) {
                                                                return function (_272) {
                                                                    return function (_273) {
                                                                        return function (_274) {
                                                                            return {
                                                                                type: _258, 
                                                                                show: _259, 
                                                                                position: _260, 
                                                                                name: _261, 
                                                                                nameLocation: _262, 
                                                                                nameTextStyle: _263, 
                                                                                boundaryGap: _264, 
                                                                                min: _265, 
                                                                                max: _266, 
                                                                                scale: _267, 
                                                                                splitNumber: _268, 
                                                                                axisLine: _269, 
                                                                                axisTick: _270, 
                                                                                axisLabel: _271, 
                                                                                splitLine: _272, 
                                                                                splitArea: _273, 
                                                                                data: _274
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(axisTypeDecodeJson))(_683)("type")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_683)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(axisPositionDecodeJson))(_683)("position")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_683)("name")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(axisNameLocationDecodeJson))(_683)("nameLocation")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Text.textStyleDecodeJson))(_683)("nameTextStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(axisBoundaryGapDecodeJson))(_683)("boundaryGap")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_683)("min")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_683)("max")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_683)("scale")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_683)("splitNumber")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(axisLineDecodeJson))(_683)("axisLine")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(axisTickDecodeJson))(_683)("axisTick")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(axisLabelDecodeJson))(_683)("axisLabel")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(axisSplitLineDecodeJson))(_683)("splitLine")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(axisSplitAreaDecodeJson))(_683)("splitArea")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(axisDataDecodeJson)))(_683)("data")))(function (_682) {
            return Prelude.pure(Data_Either.applicativeEither)(_682);
        });
    });
});
var axisesDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Control_Alt["<|>"](Data_Either.altEither)(Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeArray(axisDecJson))(j))(function (_669) {
        return Data_Maybe.maybe(new Data_Either.Left("incorrect axises"))(Data_Either.Right.create)(Prelude.bind(Data_Maybe.bindMaybe)(Data_Array["!!"](_669)(0))(function (_668) {
            return Prelude.bind(Data_Maybe.bindMaybe)(Data_Array["!!"](_669)(1))(function (_667) {
                return Prelude.pure(Data_Maybe.applicativeMaybe)(new TwoAxises(_668, _667));
            });
        }));
    }))(Prelude["<$>"](Data_Either.functorEither)(OneAxis.create)(Data_Argonaut_Decode.decodeJson(axisDecJson)(j)));
});
module.exports = {
    Polar: Polar, 
    Indicator: Indicator, 
    PolarPolygon: PolarPolygon, 
    PolarCircle: PolarCircle, 
    PolarName: PolarName, 
    Axis: Axis, 
    CatBoundaryGap: CatBoundaryGap, 
    ValueBoundaryGap: ValueBoundaryGap, 
    CommonAxisData: CommonAxisData, 
    CustomAxisData: CustomAxisData, 
    Start: Start, 
    End: End, 
    LeftAxis: LeftAxis, 
    RightAxis: RightAxis, 
    TopAxis: TopAxis, 
    BottomAxis: BottomAxis, 
    CategoryAxis: CategoryAxis, 
    ValueAxis: ValueAxis, 
    TimeAxis: TimeAxis, 
    AxisSplitArea: AxisSplitArea, 
    AxisSplitLine: AxisSplitLine, 
    OneAxis: OneAxis, 
    TwoAxises: TwoAxises, 
    AxisLabel: AxisLabel, 
    AxisTick: AxisTick, 
    AxisLine: AxisLine, 
    AxisLineStyle: AxisLineStyle, 
    polarDefault: polarDefault, 
    indicatorDefault: indicatorDefault, 
    polarNameDefault: polarNameDefault, 
    axisDefault: axisDefault, 
    axisSplitAreaDefault: axisSplitAreaDefault, 
    axisSplitLineDefault: axisSplitLineDefault, 
    axisLabelDefault: axisLabelDefault, 
    axisTickDefault: axisTickDefault, 
    axisLineDefault: axisLineDefault, 
    axisLineStyleDefault: axisLineStyleDefault, 
    axisLineStyleEncodeJson: axisLineStyleEncodeJson, 
    axisLineStyleDecodeJson: axisLineStyleDecodeJson, 
    axisLineEncodeJson: axisLineEncodeJson, 
    axisLineDecodeJson: axisLineDecodeJson, 
    axisTickEncodeJson: axisTickEncodeJson, 
    axisTickDecodeJson: axisTickDecodeJson, 
    axisLabelEncodeJson: axisLabelEncodeJson, 
    axisLabelDecodeJson: axisLabelDecodeJson, 
    axisesEncodeJson: axisesEncodeJson, 
    axisesDecodeJson: axisesDecodeJson, 
    axisSplitLineEncodeJson: axisSplitLineEncodeJson, 
    axisSplitLineDecodeJson: axisSplitLineDecodeJson, 
    axisSplitAreaEncodeJson: axisSplitAreaEncodeJson, 
    axisSplitAreaDecodeJson: axisSplitAreaDecodeJson, 
    axisTypeEncodeJson: axisTypeEncodeJson, 
    axisTypeDecodeJson: axisTypeDecodeJson, 
    axisPositionEncodeJson: axisPositionEncodeJson, 
    axisPositionDecodeJson: axisPositionDecodeJson, 
    axisNameLocationEncodeJson: axisNameLocationEncodeJson, 
    axisNameLocationDecodeJson: axisNameLocationDecodeJson, 
    axisDataEncodeJson: axisDataEncodeJson, 
    axisDataDecodeJson: axisDataDecodeJson, 
    axisBoundaryGapEncodeJson: axisBoundaryGapEncodeJson, 
    axisBoundaryGapDecodeJson: axisBoundaryGapDecodeJson, 
    axisEncJson: axisEncJson, 
    axisDecJson: axisDecJson, 
    polarNameEncode: polarNameEncode, 
    polarNameDecodeJson: polarNameDecodeJson, 
    polarTypeEncode: polarTypeEncode, 
    polarTypeDecodeJson: polarTypeDecodeJson, 
    indicatorEncodeJson: indicatorEncodeJson, 
    indicatorDecodeJson: indicatorDecodeJson, 
    polarEncodeJson: polarEncodeJson, 
    polarDecodeJson: polarDecodeJson
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","ECharts.Formatter":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Formatter/index.js","ECharts.Style.Area":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Area/index.js","ECharts.Style.Line":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Line/index.js","ECharts.Style.Text":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Text/index.js","ECharts.Symbol":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Symbol/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Chart/foreign.js":[function(require,module,exports){
// module ECharts.Chart

exports.initImpl = function(node, theme) {
    return function() {
        var chart = echarts.init(node, theme);
        return chart;
    };
};

exports.setThemeImpl = function(args, chart) {
    return function() {
        chart.setTheme.apply(chart, args);
    };
};

exports.getZRender = function(chart) {
    return function() {
        return chart.getZRender();
    };
};

exports.resize = function(chart) {
    return function() {
        return chart.resize();
    };
};

exports.refresh = function(chart) {
    return function() {
        return chart.refresh();
    };
};

exports.clear = function(chart) {
    return function() {
        return chart.clear();
    };
};

exports.dispose = function(chart) {
    return function() {
        return chart.dispose();
    };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Chart/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Function = require("Data.Function");
var DOM = require("DOM");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var DOM_HTML_Types = require("DOM.HTML.Types");
var Control_Monad_Eff = require("Control.Monad.Eff");
var ECharts_Effects = require("ECharts.Effects");
var ThemeName = (function () {
    function ThemeName(value0) {
        this.value0 = value0;
    };
    ThemeName.create = function (value0) {
        return new ThemeName(value0);
    };
    return ThemeName;
})();
var ThemeConfig = (function () {
    function ThemeConfig(value0) {
        this.value0 = value0;
    };
    ThemeConfig.create = function (value0) {
        return new ThemeConfig(value0);
    };
    return ThemeConfig;
})();
var themeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (theme) {
    if (theme instanceof ThemeName) {
        return Data_Argonaut_Core.fromString(theme.value0);
    };
    if (theme instanceof ThemeConfig) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJson)(theme.value0);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Chart.purs line 30, column 1 - line 35, column 1: " + [ theme.constructor.name ]);
});
var setTheme = function (theme) {
    return function (chart) {
        return $foreign.setThemeImpl(Data_Argonaut_Encode.encodeJson(themeEncodeJson)(theme), chart);
    };
};
var init = function (theme) {
    return function (dom) {
        return $foreign.initImpl(dom, Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonMaybe(themeEncodeJson))(theme));
    };
};
module.exports = {
    ThemeName: ThemeName, 
    ThemeConfig: ThemeConfig, 
    setTheme: setTheme, 
    init: init, 
    themeEncodeJson: themeEncodeJson, 
    dispose: $foreign.dispose, 
    clear: $foreign.clear, 
    refresh: $foreign.refresh, 
    resize: $foreign.resize, 
    getZRender: $foreign.getZRender
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Chart/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","DOM.HTML.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Types/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","ECharts.Effects":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Effects/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/foreign.js":[function(require,module,exports){
// module ECharts.Color

exports.func2json = function(fn) {
    return fn;
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Function = require("Data.Function");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var ECharts_Item_Value = require("ECharts.Item.Value");
var ECharts_Utils = require("ECharts.Utils");
var Data_Either = require("Data.Either");
var ColorFuncParam = function (x) {
    return x;
};
var SimpleColor = (function () {
    function SimpleColor(value0) {
        this.value0 = value0;
    };
    SimpleColor.create = function (value0) {
        return new SimpleColor(value0);
    };
    return SimpleColor;
})();
var ColorFunc = (function () {
    function ColorFunc(value0) {
        this.value0 = value0;
    };
    ColorFunc.create = function (value0) {
        return new ColorFunc(value0);
    };
    return ColorFunc;
})();
var calculableColorEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (cc) {
    if (cc instanceof SimpleColor) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(cc.value0);
    };
    if (cc instanceof ColorFunc) {
        return $foreign.func2json(Data_Function.mkFn1(cc.value0));
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Color.purs line 36, column 1 - line 41, column 1: " + [ cc.constructor.name ]);
});
var calculableColorDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude["<$>"](Data_Either.functorEither)(SimpleColor.create)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j));
});
module.exports = {
    SimpleColor: SimpleColor, 
    ColorFunc: ColorFunc, 
    ColorFuncParam: ColorFuncParam, 
    calculableColorEncodeJson: calculableColorEncodeJson, 
    calculableColorDecodeJson: calculableColorDecodeJson
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/foreign.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","ECharts.Item.Value":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Item.Value/index.js","ECharts.Utils":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Utils/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Control_Alt = require("Control.Alt");
var Prelude = require("Prelude");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
var Data_String = require("Data.String");
var Global = require("Global");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Either = require("Data.Either");
var Data_Function = require("Data.Function");
var Data_Tuple = require("Data.Tuple");
var Data_Foldable = require("Data.Foldable");
var NoSort = (function () {
    function NoSort() {

    };
    NoSort.value = new NoSort();
    return NoSort;
})();
var Asc = (function () {
    function Asc() {

    };
    Asc.value = new Asc();
    return Asc;
})();
var Desc = (function () {
    function Desc() {

    };
    Desc.value = new Desc();
    return Desc;
})();
var SelModeSingle = (function () {
    function SelModeSingle() {

    };
    SelModeSingle.value = new SelModeSingle();
    return SelModeSingle;
})();
var SelModeMultiple = (function () {
    function SelModeMultiple() {

    };
    SelModeMultiple.value = new SelModeMultiple();
    return SelModeMultiple;
})();
var SelModeFalse = (function () {
    function SelModeFalse() {

    };
    SelModeFalse.value = new SelModeFalse();
    return SelModeFalse;
})();
var RTRadius = (function () {
    function RTRadius() {

    };
    RTRadius.value = new RTRadius();
    return RTRadius;
})();
var RTArea = (function () {
    function RTArea() {

    };
    RTArea.value = new RTArea();
    return RTArea;
})();
var Enable = (function () {
    function Enable() {

    };
    Enable.value = new Enable();
    return Enable;
})();
var Disable = (function () {
    function Disable() {

    };
    Disable.value = new Disable();
    return Disable;
})();
var Scale = (function () {
    function Scale() {

    };
    Scale.value = new Scale();
    return Scale;
})();
var Move = (function () {
    function Move() {

    };
    Move.value = new Move();
    return Move;
})();
var Percent = (function () {
    function Percent(value0) {
        this.value0 = value0;
    };
    Percent.create = function (value0) {
        return new Percent(value0);
    };
    return Percent;
})();
var Pixel = (function () {
    function Pixel(value0) {
        this.value0 = value0;
    };
    Pixel.create = function (value0) {
        return new Pixel(value0);
    };
    return Pixel;
})();
var R = (function () {
    function R(value0) {
        this.value0 = value0;
    };
    R.create = function (value0) {
        return new R(value0);
    };
    return R;
})();
var Rs = (function () {
    function Rs(value0) {
        this.value0 = value0;
    };
    Rs.create = function (value0) {
        return new Rs(value0);
    };
    return Rs;
})();
var MinMax = function (x) {
    return x;
};
var SumCalculation = (function () {
    function SumCalculation() {

    };
    SumCalculation.value = new SumCalculation();
    return SumCalculation;
})();
var AverageCalculation = (function () {
    function AverageCalculation() {

    };
    AverageCalculation.value = new AverageCalculation();
    return AverageCalculation;
})();
var Auto = (function () {
    function Auto() {

    };
    Auto.value = new Auto();
    return Auto;
})();
var Custom = (function () {
    function Custom(value0) {
        this.value0 = value0;
    };
    Custom.create = function (value0) {
        return new Custom(value0);
    };
    return Custom;
})();
var AllCorners = (function () {
    function AllCorners(value0) {
        this.value0 = value0;
    };
    AllCorners.create = function (value0) {
        return new AllCorners(value0);
    };
    return AllCorners;
})();
var Corners = (function () {
    function Corners(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Corners.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Corners(value0, value1, value2, value3);
                };
            };
        };
    };
    return Corners;
})();
var sortEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof NoSort) {
            return "none";
        };
        if (a instanceof Asc) {
            return "ascending";
        };
        if (a instanceof Desc) {
            return "descending";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Common.purs line 170, column 1 - line 176, column 1: " + [ a.constructor.name ]);
    })());
});
var sortDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_575) {
        if (_575 === "none") {
            return Prelude.pure(Data_Either.applicativeEither)(NoSort.value);
        };
        if (_575 === "ascending") {
            return Prelude.pure(Data_Either.applicativeEither)(Asc.value);
        };
        if (_575 === "descending") {
            return Prelude.pure(Data_Either.applicativeEither)(Desc.value);
        };
        return new Data_Either.Left("incorrect sort");
    });
});
var selModeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    if (a instanceof SelModeSingle) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("single");
    };
    if (a instanceof SelModeMultiple) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("multiple");
    };
    if (a instanceof SelModeFalse) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(false);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Common.purs line 74, column 1 - line 80, column 1: " + [ a.constructor.name ]);
});
var selModeDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (json) {
    return Control_Alt["<|>"](Data_Either.altEither)(Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(json))(function (_565) {
        if (_565 === "single") {
            return Prelude.pure(Data_Either.applicativeEither)(SelModeSingle.value);
        };
        if (_565 === "multiple") {
            return Prelude.pure(Data_Either.applicativeEither)(SelModeMultiple.value);
        };
        return new Data_Either.Left("incorrect select mode");
    }))(Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonBoolean)(json))(function (_566) {
        var _972 = Prelude.not(Prelude.booleanAlgebraBoolean)(_566);
        if (_972) {
            return Prelude.pure(Data_Either.applicativeEither)(SelModeFalse.value);
        };
        if (!_972) {
            return new Data_Either.Left("incorrect select mode");
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Common.purs line 80, column 1 - line 95, column 1: " + [ _972.constructor.name ]);
    }));
});
var roseTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof RTRadius) {
            return "radius";
        };
        if (a instanceof RTArea) {
            return "area";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Common.purs line 59, column 1 - line 64, column 1: " + [ a.constructor.name ]);
    })());
});
var roseTypeDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (json) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(json))(function (_564) {
        if (_564 === "radius") {
            return Prelude.pure(Data_Either.applicativeEither)(RTRadius.value);
        };
        if (_564 === "area") {
            return Prelude.pure(Data_Either.applicativeEither)(RTArea.value);
        };
        return new Data_Either.Left("incorrect rose type");
    });
});
var roamEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_867) {
    if (_867 instanceof Enable) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(true);
    };
    if (_867 instanceof Disable) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(false);
    };
    if (_867 instanceof Scale) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("scale");
    };
    if (_867 instanceof Move) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("move");
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Common.purs line 111, column 1 - line 118, column 1: " + [ _867.constructor.name ]);
});
var roamDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Control_Alt["<|>"](Data_Either.altEither)(Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_568) {
        if (_568 === "scale") {
            return Prelude.pure(Data_Either.applicativeEither)(Scale.value);
        };
        if (_568 === "move") {
            return Prelude.pure(Data_Either.applicativeEither)(Move.value);
        };
        return new Data_Either.Left("incorrect roam");
    }))(Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonBoolean)(j))(function (_569) {
        if (_569) {
            return Prelude.pure(Data_Either.applicativeEither)(Enable.value);
        };
        if (!_569) {
            return Prelude.pure(Data_Either.applicativeEither)(Disable.value);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Common.purs line 118, column 1 - line 132, column 1: " + [ _569.constructor.name ]);
    }));
});
var percentOrPixelEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_866) {
    if (_866 instanceof Percent) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(Prelude.show(Prelude.showNumber)(_866.value0) + "%");
    };
    if (_866 instanceof Pixel) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(_866.value0);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Common.purs line 43, column 1 - line 47, column 1: " + [ _866.constructor.name ]);
});
var radiusEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_869) {
    if (_869 instanceof R) {
        return Data_Argonaut_Encode.encodeJson(percentOrPixelEncodeJson)(_869.value0);
    };
    if (_869 instanceof Rs) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(percentOrPixelEncodeJson))([ _869.value0.inner, _869.value0.outer ]);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Common.purs line 156, column 1 - line 160, column 1: " + [ _869.constructor.name ]);
});
var percentOrPixelDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (json) {
    return Control_Alt["<|>"](Data_Either.altEither)(Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(json))(function (_563) {
        var _990 = Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqInt))(Data_String.lastIndexOf("%")(_563))(Data_Maybe.Just.create(Prelude["-"](Prelude.ringInt)(Data_String.length(_563))(1))))(Prelude.not(Prelude.booleanAlgebraBoolean)(Global.isNaN(Global.readInt(10)(_563))));
        if (_990) {
            return Prelude.pure(Data_Either.applicativeEither)(new Percent(Global.readInt(10)(_563)));
        };
        if (!_990) {
            return new Data_Either.Left("incorrect percent");
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Common.purs line 47, column 1 - line 58, column 1: " + [ _990.constructor.name ]);
    }))(Prelude["<$>"](Data_Either.functorEither)(Pixel.create)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonNumber)(json)));
});
var radiusDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(R.create)(Data_Argonaut_Decode.decodeJson(percentOrPixelDecodeJson)(j)))(Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeArray(percentOrPixelDecodeJson))(j))(function (_574) {
        return Data_Maybe.maybe(new Data_Either.Left("incorrect radius"))(Data_Either.Right.create)(Prelude.bind(Data_Maybe.bindMaybe)(Data_Array["!!"](_574)(0))(function (_573) {
            return Prelude.bind(Data_Maybe.bindMaybe)(Data_Array["!!"](_574)(1))(function (_572) {
                return Prelude.pure(Data_Maybe.applicativeMaybe)(new Rs({
                    inner: _573, 
                    outer: _572
                }));
            });
        }));
    }));
});
var minMaxEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_868) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJNumber)("min")(_868.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJNumber)("max")(_868.max) ])));
});
var minMaxDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_571) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_7) {
            return function (_8) {
                return {
                    min: _7, 
                    max: _8
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonNumber)(_571)("min")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonNumber)(_571)("max")))(function (_570) {
            return Prelude.pure(Data_Either.applicativeEither)(_570);
        });
    });
});
var mapValueCalculationEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof SumCalculation) {
            return "sum";
        };
        if (a instanceof AverageCalculation) {
            return "average";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Common.purs line 96, column 1 - line 101, column 1: " + [ a.constructor.name ]);
    })());
});
var mapValueCalculationDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_567) {
        if (_567 === "sum") {
            return Prelude.pure(Data_Either.applicativeEither)(SumCalculation.value);
        };
        if (_567 === "average") {
            return Prelude.pure(Data_Either.applicativeEither)(AverageCalculation.value);
        };
        return new Data_Either.Left("incorrect map value calculation");
    });
});
var intervalEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_870) {
    if (_870 instanceof Auto) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("auto");
    };
    if (_870 instanceof Custom) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(_870.value0);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Common.purs line 187, column 1 - line 191, column 1: " + [ _870.constructor.name ]);
});
var intervalDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Control_Alt["<|>"](Data_Either.altEither)(Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_576) {
        var _1003 = Prelude["=="](Prelude.eqString)(_576)("auto");
        if (_1003) {
            return Prelude.pure(Data_Either.applicativeEither)(Auto.value);
        };
        if (!_1003) {
            return new Data_Either.Left("incorrect interval");
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Common.purs line 191, column 1 - line 197, column 29: " + [ _1003.constructor.name ]);
    }))(Prelude["<$>"](Data_Either.functorEither)(Custom.create)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonNumber)(j)));
});
var cornerJsonEncode = function (__dict_EncodeJson_0) {
    return new Data_Argonaut_Encode.EncodeJson(function (corners) {
        if (corners instanceof AllCorners) {
            return Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_0)(corners.value0);
        };
        if (corners instanceof Corners) {
            return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(__dict_EncodeJson_0))([ corners.value0, corners.value1, corners.value2, corners.value3 ]);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Common.purs line 24, column 1 - line 29, column 1: " + [ corners.constructor.name ]);
    });
};
var cornerJsonDecode = function (__dict_DecodeJson_1) {
    return new Data_Argonaut_Decode.DecodeJson(function (json) {
        return Control_Alt["<|>"](Data_Either.altEither)(Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeArray(__dict_DecodeJson_1))(json))(function (_562) {
            return Data_Maybe.maybe(new Data_Either.Left("incorrect corners"))(Data_Either.Right.create)(Prelude.bind(Data_Maybe.bindMaybe)(Data_Array["!!"](_562)(0))(function (_561) {
                return Prelude.bind(Data_Maybe.bindMaybe)(Data_Array["!!"](_562)(1))(function (_560) {
                    return Prelude.bind(Data_Maybe.bindMaybe)(Data_Array["!!"](_562)(2))(function (_559) {
                        return Prelude.bind(Data_Maybe.bindMaybe)(Data_Array["!!"](_562)(3))(function (_558) {
                            return Prelude.pure(Data_Maybe.applicativeMaybe)(new Corners(_561, _560, _559, _558));
                        });
                    });
                });
            }));
        }))(Prelude["<$>"](Data_Either.functorEither)(AllCorners.create)(Data_Argonaut_Decode.decodeJson(__dict_DecodeJson_1)(json)));
    });
};
module.exports = {
    Auto: Auto, 
    Custom: Custom, 
    NoSort: NoSort, 
    Asc: Asc, 
    Desc: Desc, 
    R: R, 
    Rs: Rs, 
    MinMax: MinMax, 
    Enable: Enable, 
    Disable: Disable, 
    Scale: Scale, 
    Move: Move, 
    SumCalculation: SumCalculation, 
    AverageCalculation: AverageCalculation, 
    SelModeSingle: SelModeSingle, 
    SelModeMultiple: SelModeMultiple, 
    SelModeFalse: SelModeFalse, 
    RTRadius: RTRadius, 
    RTArea: RTArea, 
    Percent: Percent, 
    Pixel: Pixel, 
    AllCorners: AllCorners, 
    Corners: Corners, 
    cornerJsonEncode: cornerJsonEncode, 
    cornerJsonDecode: cornerJsonDecode, 
    percentOrPixelEncodeJson: percentOrPixelEncodeJson, 
    percentOrPixelDecodeJson: percentOrPixelDecodeJson, 
    roseTypeEncodeJson: roseTypeEncodeJson, 
    roseTypeDecodeJson: roseTypeDecodeJson, 
    selModeEncodeJson: selModeEncodeJson, 
    selModeDecodeJson: selModeDecodeJson, 
    mapValueCalculationEncodeJson: mapValueCalculationEncodeJson, 
    mapValueCalculationDecodeJson: mapValueCalculationDecodeJson, 
    roamEncodeJson: roamEncodeJson, 
    roamDecodeJson: roamDecodeJson, 
    minMaxEncodeJson: minMaxEncodeJson, 
    minMaxDecodeJson: minMaxDecodeJson, 
    radiusEncodeJson: radiusEncodeJson, 
    radiusDecodeJson: radiusDecodeJson, 
    sortEncodeJson: sortEncodeJson, 
    sortDecodeJson: sortDecodeJson, 
    intervalEncodeJson: intervalEncodeJson, 
    intervalDecodeJson: intervalDecodeJson
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.String":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Global":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Global/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Connect/foreign.js":[function(require,module,exports){
// module ECharts.Connect

exports.connectImpl = function(target, source) {
    return function() {
        source.connect(target);
        return function() {
            source.disconnect(target);
        };
    };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Connect/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var ECharts_Chart = require("ECharts.Chart");
var Control_Monad_Eff = require("Control.Monad.Eff");
var ECharts_Effects = require("ECharts.Effects");
var Connection = function (x) {
    return x;
};
var connect = function (target) {
    return function (source) {
        return $foreign.connectImpl(target, source);
    };
};
module.exports = {
    connect: connect
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Connect/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","ECharts.Chart":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Chart/index.js","ECharts.Effects":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Effects/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Control_Alt = require("Control.Alt");
var Prelude = require("Prelude");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Data_Foldable = require("Data.Foldable");
var YTop = (function () {
    function YTop() {

    };
    YTop.value = new YTop();
    return YTop;
})();
var YBottom = (function () {
    function YBottom() {

    };
    YBottom.value = new YBottom();
    return YBottom;
})();
var YCenter = (function () {
    function YCenter() {

    };
    YCenter.value = new YCenter();
    return YCenter;
})();
var Y = (function () {
    function Y(value0) {
        this.value0 = value0;
    };
    Y.create = function (value0) {
        return new Y(value0);
    };
    return Y;
})();
var XLeft = (function () {
    function XLeft() {

    };
    XLeft.value = new XLeft();
    return XLeft;
})();
var XRight = (function () {
    function XRight() {

    };
    XRight.value = new XRight();
    return XRight;
})();
var XCenter = (function () {
    function XCenter() {

    };
    XCenter.value = new XCenter();
    return XCenter;
})();
var X = (function () {
    function X(value0) {
        this.value0 = value0;
    };
    X.create = function (value0) {
        return new X(value0);
    };
    return X;
})();
var Horizontal = (function () {
    function Horizontal() {

    };
    Horizontal.value = new Horizontal();
    return Horizontal;
})();
var Vertical = (function () {
    function Vertical() {

    };
    Vertical.value = new Vertical();
    return Vertical;
})();
var Location = function (x) {
    return x;
};
var LPOuter = (function () {
    function LPOuter() {

    };
    LPOuter.value = new LPOuter();
    return LPOuter;
})();
var LPInner = (function () {
    function LPInner() {

    };
    LPInner.value = new LPInner();
    return LPInner;
})();
var LPTop = (function () {
    function LPTop() {

    };
    LPTop.value = new LPTop();
    return LPTop;
})();
var LPRight = (function () {
    function LPRight() {

    };
    LPRight.value = new LPRight();
    return LPRight;
})();
var LPLeft = (function () {
    function LPLeft() {

    };
    LPLeft.value = new LPLeft();
    return LPLeft;
})();
var LPBottom = (function () {
    function LPBottom() {

    };
    LPBottom.value = new LPBottom();
    return LPBottom;
})();
var LPInside = (function () {
    function LPInside() {

    };
    LPInside.value = new LPInside();
    return LPInside;
})();
var LPInsideLeft = (function () {
    function LPInsideLeft() {

    };
    LPInsideLeft.value = new LPInsideLeft();
    return LPInsideLeft;
})();
var LPInsideRight = (function () {
    function LPInsideRight() {

    };
    LPInsideRight.value = new LPInsideRight();
    return LPInsideRight;
})();
var LPInsideTop = (function () {
    function LPInsideTop() {

    };
    LPInsideTop.value = new LPInsideTop();
    return LPInsideTop;
})();
var LPInsideBottom = (function () {
    function LPInsideBottom() {

    };
    LPInsideBottom.value = new LPInsideBottom();
    return LPInsideBottom;
})();
var HAlignLeft = (function () {
    function HAlignLeft() {

    };
    HAlignLeft.value = new HAlignLeft();
    return HAlignLeft;
})();
var HAlignRight = (function () {
    function HAlignRight() {

    };
    HAlignRight.value = new HAlignRight();
    return HAlignRight;
})();
var HAlignCenter = (function () {
    function HAlignCenter() {

    };
    HAlignCenter.value = new HAlignCenter();
    return HAlignCenter;
})();
var yPosEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (ypos) {
    if (ypos instanceof YTop) {
        return Data_Argonaut_Core.fromString("top");
    };
    if (ypos instanceof YBottom) {
        return Data_Argonaut_Core.fromString("bottom");
    };
    if (ypos instanceof YCenter) {
        return Data_Argonaut_Core.fromString("center");
    };
    if (ypos instanceof Y) {
        return Data_Argonaut_Core.fromNumber(ypos.value0);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Coords.purs line 43, column 1 - line 50, column 1: " + [ ypos.constructor.name ]);
});
var yPosDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Control_Alt["<|>"](Data_Either.altEither)(Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_578) {
        if (_578 === "top") {
            return Prelude.pure(Data_Either.applicativeEither)(YTop.value);
        };
        if (_578 === "bottom") {
            return Prelude.pure(Data_Either.applicativeEither)(YBottom.value);
        };
        if (_578 === "center") {
            return Prelude.pure(Data_Either.applicativeEither)(YCenter.value);
        };
        return new Data_Either.Left("incorrect y pos");
    }))(Prelude["<$>"](Data_Either.functorEither)(Y.create)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonNumber)(j)));
});
var xPosEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_871) {
    if (_871 instanceof XLeft) {
        return Data_Argonaut_Core.fromString("left");
    };
    if (_871 instanceof XRight) {
        return Data_Argonaut_Core.fromString("right");
    };
    if (_871 instanceof XCenter) {
        return Data_Argonaut_Core.fromString("center");
    };
    if (_871 instanceof X) {
        return Data_Argonaut_Core.fromNumber(_871.value0);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Coords.purs line 20, column 1 - line 26, column 1: " + [ _871.constructor.name ]);
});
var xPosDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Control_Alt["<|>"](Data_Either.altEither)(Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_577) {
        if (_577 === "left") {
            return Prelude.pure(Data_Either.applicativeEither)(XLeft.value);
        };
        if (_577 === "right") {
            return Prelude.pure(Data_Either.applicativeEither)(XRight.value);
        };
        if (_577 === "center") {
            return Prelude.pure(Data_Either.applicativeEither)(XCenter.value);
        };
        return new Data_Either.Left("incorrect x pos");
    }))(Prelude["<$>"](Data_Either.functorEither)(X.create)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonNumber)(j)));
});
var textAlignEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof HAlignLeft) {
            return "left";
        };
        if (a instanceof HAlignRight) {
            return "right";
        };
        if (a instanceof HAlignCenter) {
            return "center";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Coords.purs line 99, column 1 - line 106, column 1: " + [ a.constructor.name ]);
    })());
});
var textAlignDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_580) {
        if (_580 === "left") {
            return Prelude.pure(Data_Either.applicativeEither)(HAlignLeft.value);
        };
        if (_580 === "right") {
            return Prelude.pure(Data_Either.applicativeEither)(HAlignRight.value);
        };
        if (_580 === "center") {
            return Prelude.pure(Data_Either.applicativeEither)(HAlignCenter.value);
        };
        return new Data_Either.Left("incorrect text align");
    });
});
var orientEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof Horizontal) {
            return "horizontal";
        };
        if (a instanceof Vertical) {
            return "vertical";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Coords.purs line 136, column 1 - line 141, column 1: " + [ a.constructor.name ]);
    })());
});
var orientDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_583) {
        if (_583 === "horizontal") {
            return Prelude.pure(Data_Either.applicativeEither)(Horizontal.value);
        };
        if (_583 === "vertical") {
            return Prelude.pure(Data_Either.applicativeEither)(Vertical.value);
        };
        return new Data_Either.Left("incorrect orient");
    });
});
var locationEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_872) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(xPosEncodeJson))("x")(_872.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(yPosEncodeJson))("y")(_872.y) ])));
});
var locationDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_582) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_9) {
            return function (_10) {
                return {
                    x: _9, 
                    y: _10
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(xPosDecodeJson))(_582)("x")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(yPosDecodeJson))(_582)("y")))(function (_581) {
            return Prelude.pure(Data_Either.applicativeEither)(_581);
        });
    });
});
var labelPositionEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof LPOuter) {
            return "outer";
        };
        if (a instanceof LPInner) {
            return "inner";
        };
        if (a instanceof LPTop) {
            return "top";
        };
        if (a instanceof LPRight) {
            return "right";
        };
        if (a instanceof LPLeft) {
            return "left";
        };
        if (a instanceof LPBottom) {
            return "bottom";
        };
        if (a instanceof LPInside) {
            return "inside";
        };
        if (a instanceof LPInsideLeft) {
            return "insideLeft";
        };
        if (a instanceof LPInsideRight) {
            return "insideRight";
        };
        if (a instanceof LPInsideTop) {
            return "insideTop";
        };
        if (a instanceof LPInsideBottom) {
            return "insideBottom";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Coords.purs line 64, column 1 - line 78, column 1: " + [ a.constructor.name ]);
    })());
});
var labelPositionDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_579) {
        if (_579 === "outer") {
            return Prelude.pure(Data_Either.applicativeEither)(LPOuter.value);
        };
        if (_579 === "inner") {
            return Prelude.pure(Data_Either.applicativeEither)(LPInner.value);
        };
        if (_579 === "top") {
            return Prelude.pure(Data_Either.applicativeEither)(LPTop.value);
        };
        if (_579 === "right") {
            return Prelude.pure(Data_Either.applicativeEither)(LPRight.value);
        };
        if (_579 === "left") {
            return Prelude.pure(Data_Either.applicativeEither)(LPLeft.value);
        };
        if (_579 === "bottom") {
            return Prelude.pure(Data_Either.applicativeEither)(LPBottom.value);
        };
        if (_579 === "inside") {
            return Prelude.pure(Data_Either.applicativeEither)(LPInside.value);
        };
        if (_579 === "insideLeft") {
            return Prelude.pure(Data_Either.applicativeEither)(LPInsideLeft.value);
        };
        if (_579 === "insideRight") {
            return Prelude.pure(Data_Either.applicativeEither)(LPInsideRight.value);
        };
        if (_579 === "insideTop") {
            return Prelude.pure(Data_Either.applicativeEither)(LPInsideTop.value);
        };
        if (_579 === "insideBottom") {
            return Prelude.pure(Data_Either.applicativeEither)(LPInsideBottom.value);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Coords.purs line 78, column 1 - line 95, column 1: " + [ _579.constructor.name ]);
    });
});
module.exports = {
    Horizontal: Horizontal, 
    Vertical: Vertical, 
    Location: Location, 
    HAlignLeft: HAlignLeft, 
    HAlignRight: HAlignRight, 
    HAlignCenter: HAlignCenter, 
    LPOuter: LPOuter, 
    LPInner: LPInner, 
    LPTop: LPTop, 
    LPRight: LPRight, 
    LPLeft: LPLeft, 
    LPBottom: LPBottom, 
    LPInside: LPInside, 
    LPInsideLeft: LPInsideLeft, 
    LPInsideRight: LPInsideRight, 
    LPInsideTop: LPInsideTop, 
    LPInsideBottom: LPInsideBottom, 
    YTop: YTop, 
    YBottom: YBottom, 
    YCenter: YCenter, 
    Y: Y, 
    XLeft: XLeft, 
    XRight: XRight, 
    XCenter: XCenter, 
    X: X, 
    xPosEncodeJson: xPosEncodeJson, 
    xPosDecodeJson: xPosDecodeJson, 
    yPosEncodeJson: yPosEncodeJson, 
    yPosDecodeJson: yPosDecodeJson, 
    labelPositionEncodeJson: labelPositionEncodeJson, 
    labelPositionDecodeJson: labelPositionDecodeJson, 
    textAlignEncodeJson: textAlignEncodeJson, 
    textAlignDecodeJson: textAlignDecodeJson, 
    locationEncodeJson: locationEncodeJson, 
    locationDecodeJson: locationDecodeJson, 
    orientEncodeJson: orientEncodeJson, 
    orientDecodeJson: orientDecodeJson
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.DataRange/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var ECharts_Color = require("ECharts.Color");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Common = require("ECharts.Common");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Style_Text = require("ECharts.Style.Text");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var DataRange = function (x) {
    return x;
};
var dataRangeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_896) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_896.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.orientEncodeJson))("orient")(_896.orient), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_896.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_896.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_896.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_896.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_896.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_896.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemGap")(_896.itemGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemWidth")(_896.itemWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemHeight")(_896.itemHeight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("min")(_896.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("max")(_896.max), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("precision")(_896.precision), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("splitNumber")(_896.splitNumber), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.selModeEncodeJson))("selectedMode")(_896.selectedMode), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("calculable")(_896.calculable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("hoverLink")(_896.hoverLink), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("realtime")(_896.realtime), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("color")(_896.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_896.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJString)(Data_Argonaut_Encode.encodeJsonJString)))("text")(_896.text), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_896.textStyle) ])));
});
var dataRangeDefault = {
    show: Data_Maybe.Nothing.value, 
    orient: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    itemGap: Data_Maybe.Nothing.value, 
    itemWidth: Data_Maybe.Nothing.value, 
    itemHeight: Data_Maybe.Nothing.value, 
    min: Data_Maybe.Nothing.value, 
    max: Data_Maybe.Nothing.value, 
    precision: Data_Maybe.Nothing.value, 
    splitNumber: Data_Maybe.Nothing.value, 
    selectedMode: Data_Maybe.Nothing.value, 
    calculable: Data_Maybe.Nothing.value, 
    hoverLink: Data_Maybe.Nothing.value, 
    realtime: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    text: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value
};
var dataRangeDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_634) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_142) {
            return function (_143) {
                return function (_144) {
                    return function (_145) {
                        return function (_146) {
                            return function (_147) {
                                return function (_148) {
                                    return function (_149) {
                                        return function (_150) {
                                            return function (_151) {
                                                return function (_152) {
                                                    return function (_153) {
                                                        return function (_154) {
                                                            return function (_155) {
                                                                return function (_156) {
                                                                    return function (_157) {
                                                                        return function (_158) {
                                                                            return function (_159) {
                                                                                return function (_160) {
                                                                                    return function (_161) {
                                                                                        return function (_162) {
                                                                                            return function (_163) {
                                                                                                return function (_164) {
                                                                                                    return {
                                                                                                        show: _142, 
                                                                                                        orient: _143, 
                                                                                                        x: _144, 
                                                                                                        y: _145, 
                                                                                                        backgroundColor: _146, 
                                                                                                        borderColor: _147, 
                                                                                                        borderWidth: _148, 
                                                                                                        padding: _149, 
                                                                                                        itemGap: _150, 
                                                                                                        itemWidth: _151, 
                                                                                                        itemHeight: _152, 
                                                                                                        min: _153, 
                                                                                                        max: _154, 
                                                                                                        precision: _155, 
                                                                                                        splitNumber: _156, 
                                                                                                        selectedMode: _157, 
                                                                                                        calculable: _158, 
                                                                                                        hoverLink: _159, 
                                                                                                        realtime: _160, 
                                                                                                        color: _161, 
                                                                                                        formatter: _162, 
                                                                                                        text: _163, 
                                                                                                        textStyle: _164
                                                                                                    };
                                                                                                };
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_634)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.orientDecodeJson))(_634)("orient")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.xPosDecodeJson))(_634)("x")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.yPosDecodeJson))(_634)("y")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_634)("backgroundColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_634)("borderColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_634)("borderWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.cornerJsonDecode(Data_Argonaut_Decode.decodeJsonNumber)))(_634)("padding")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_634)("itemGap")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_634)("itemWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_634)("itemHeight")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_634)("min")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_634)("max")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_634)("precision")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_634)("splitNumber")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.selModeDecodeJson))(_634)("selectedMode")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_634)("calculable")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_634)("hoverLink")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_634)("realtime")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonString)))(_634)("color")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Formatter.formatterDecodeJson))(_634)("formatter")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonTuple(Data_Argonaut_Decode.decodeJsonString)(Data_Argonaut_Decode.decodeJsonString)))(_634)("text")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Text.textStyleDecodeJson))(_634)("textStyle")))(function (_633) {
            return Prelude.pure(Data_Either.applicativeEither)(_633);
        });
    });
});
module.exports = {
    DataRange: DataRange, 
    dataRangeDefault: dataRangeDefault, 
    dataRangeEncodeJson: dataRangeEncodeJson, 
    dataRangeDecodeJson: dataRangeDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","ECharts.Formatter":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Formatter/index.js","ECharts.Style.Text":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Text/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.DataZoom/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Maybe = require("Data.Maybe");
var ECharts_Color = require("ECharts.Color");
var ECharts_Coords = require("ECharts.Coords");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var DataZoom = function (x) {
    return x;
};
var dataZoomEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_873) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_873.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.orientEncodeJson))("orient")(_873.orient), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_873.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_873.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_873.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("height")(_873.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_873.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("dataBackgroundColor")(_873.dataBackgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("fillerColor")(_873.fillerColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("handleColor")(_873.handleColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber)))("xAxisIndex")(_873.xAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber)))("yAxisIndex")(_873.yAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("start")(_873.start), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("end")(_873.end), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showDetail")(_873.showDetail), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("realtime")(_873.realtime), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("zoomlock")(_873.zoomlock) ])));
});
var dataZoomDefault = {
    show: Data_Maybe.Nothing.value, 
    orient: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    dataBackgroundColor: Data_Maybe.Nothing.value, 
    fillerColor: Data_Maybe.Nothing.value, 
    handleColor: Data_Maybe.Nothing.value, 
    xAxisIndex: Data_Maybe.Nothing.value, 
    yAxisIndex: Data_Maybe.Nothing.value, 
    start: Data_Maybe.Nothing.value, 
    end: Data_Maybe.Nothing.value, 
    showDetail: Data_Maybe.Nothing.value, 
    realtime: Data_Maybe.Nothing.value, 
    zoomlock: Data_Maybe.Nothing.value
};
var dataZoomDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_586) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_11) {
            return function (_12) {
                return function (_13) {
                    return function (_14) {
                        return function (_15) {
                            return function (_16) {
                                return function (_17) {
                                    return function (_18) {
                                        return function (_19) {
                                            return function (_20) {
                                                return function (_21) {
                                                    return function (_22) {
                                                        return function (_23) {
                                                            return function (_24) {
                                                                return function (_25) {
                                                                    return function (_26) {
                                                                        return function (_27) {
                                                                            return {
                                                                                show: _11, 
                                                                                orient: _12, 
                                                                                x: _13, 
                                                                                y: _14, 
                                                                                width: _15, 
                                                                                height: _16, 
                                                                                backgroundColor: _17, 
                                                                                dataBackgroundColor: _18, 
                                                                                fillerColor: _19, 
                                                                                handleColor: _20, 
                                                                                xAxisIndex: _21, 
                                                                                yAxisIndex: _22, 
                                                                                start: _23, 
                                                                                end: _24, 
                                                                                showDetail: _25, 
                                                                                realtime: _26, 
                                                                                zoomlock: _27
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_586)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.orientDecodeJson))(_586)("orient")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.xPosDecodeJson))(_586)("x")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.yPosDecodeJson))(_586)("y")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_586)("width")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_586)("height")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_586)("backgroundColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_586)("dataBackgroundColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_586)("fillerColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_586)("handleColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonNumber)))(_586)("xAxisIndex")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonNumber)))(_586)("yAxisIndex")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_586)("start")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_586)("end")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_586)("showDetail")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_586)("realtime")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_586)("zoomlock")))(function (_585) {
            return Prelude.pure(Data_Either.applicativeEither)(_585);
        });
    });
});
module.exports = {
    DataZoom: DataZoom, 
    dataZoomDefault: dataZoomDefault, 
    dataZoomEncodeJson: dataZoomEncodeJson, 
    dataZoomDecodeJson: dataZoomDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Effects/index.js":[function(require,module,exports){
arguments[4]["/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.NaturalTransformation/index.js"][0].apply(exports,arguments)
},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Events/foreign.js":[function(require,module,exports){
// module ECharts.Events

exports.listenImpl = function(event, effHandler, chart) {
    return function() {
        var handler = function(param) {
            effHandler(param)();
        };
    };
    chart.on(event, handler);
    return function() {
        chart.un(event, handler);
    };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Events/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Effects = require("ECharts.Effects");
var Sub = function (x) {
    return x;
};
var RefreshEvent = (function () {
    function RefreshEvent() {

    };
    RefreshEvent.value = new RefreshEvent();
    return RefreshEvent;
})();
var RestoreEvent = (function () {
    function RestoreEvent() {

    };
    RestoreEvent.value = new RestoreEvent();
    return RestoreEvent;
})();
var ResizeEvent = (function () {
    function ResizeEvent() {

    };
    ResizeEvent.value = new ResizeEvent();
    return ResizeEvent;
})();
var ClickEvent = (function () {
    function ClickEvent() {

    };
    ClickEvent.value = new ClickEvent();
    return ClickEvent;
})();
var DoubleClickEvent = (function () {
    function DoubleClickEvent() {

    };
    DoubleClickEvent.value = new DoubleClickEvent();
    return DoubleClickEvent;
})();
var HoverEvent = (function () {
    function HoverEvent() {

    };
    HoverEvent.value = new HoverEvent();
    return HoverEvent;
})();
var DataChangedEvent = (function () {
    function DataChangedEvent() {

    };
    DataChangedEvent.value = new DataChangedEvent();
    return DataChangedEvent;
})();
var DataZoomEvent = (function () {
    function DataZoomEvent() {

    };
    DataZoomEvent.value = new DataZoomEvent();
    return DataZoomEvent;
})();
var DataRangeEvent = (function () {
    function DataRangeEvent() {

    };
    DataRangeEvent.value = new DataRangeEvent();
    return DataRangeEvent;
})();
var DataRangeHoverLinkEvent = (function () {
    function DataRangeHoverLinkEvent() {

    };
    DataRangeHoverLinkEvent.value = new DataRangeHoverLinkEvent();
    return DataRangeHoverLinkEvent;
})();
var LegendSelectedEvent = (function () {
    function LegendSelectedEvent() {

    };
    LegendSelectedEvent.value = new LegendSelectedEvent();
    return LegendSelectedEvent;
})();
var LegendHoverLinkEvent = (function () {
    function LegendHoverLinkEvent() {

    };
    LegendHoverLinkEvent.value = new LegendHoverLinkEvent();
    return LegendHoverLinkEvent;
})();
var MapSelectedEvent = (function () {
    function MapSelectedEvent() {

    };
    MapSelectedEvent.value = new MapSelectedEvent();
    return MapSelectedEvent;
})();
var PieSelectedEvent = (function () {
    function PieSelectedEvent() {

    };
    PieSelectedEvent.value = new PieSelectedEvent();
    return PieSelectedEvent;
})();
var DataViewChangedEvent = (function () {
    function DataViewChangedEvent() {

    };
    DataViewChangedEvent.value = new DataViewChangedEvent();
    return DataViewChangedEvent;
})();
var MapRoamEvent = (function () {
    function MapRoamEvent() {

    };
    MapRoamEvent.value = new MapRoamEvent();
    return MapRoamEvent;
})();
var MagicTypeChangedEvent = (function () {
    function MagicTypeChangedEvent() {

    };
    MagicTypeChangedEvent.value = new MagicTypeChangedEvent();
    return MagicTypeChangedEvent;
})();
var eventStr = function (event) {
    if (event instanceof RefreshEvent) {
        return "refresh";
    };
    if (event instanceof RestoreEvent) {
        return "restore";
    };
    if (event instanceof ResizeEvent) {
        return "resize";
    };
    if (event instanceof ClickEvent) {
        return "click";
    };
    if (event instanceof DoubleClickEvent) {
        return "dblclick";
    };
    if (event instanceof HoverEvent) {
        return "hover";
    };
    if (event instanceof DataChangedEvent) {
        return "dataChanged";
    };
    if (event instanceof DataZoomEvent) {
        return "dataZoom";
    };
    if (event instanceof DataRangeEvent) {
        return "dataRange";
    };
    if (event instanceof DataRangeHoverLinkEvent) {
        return "dataRangeHoverLink";
    };
    if (event instanceof LegendSelectedEvent) {
        return "legendSelected";
    };
    if (event instanceof LegendHoverLinkEvent) {
        return "legendHoverLink";
    };
    if (event instanceof MapSelectedEvent) {
        return "mapSelected";
    };
    if (event instanceof PieSelectedEvent) {
        return "pieSelected";
    };
    if (event instanceof DataViewChangedEvent) {
        return "dataViewChanged";
    };
    if (event instanceof MapRoamEvent) {
        return "mapRoam";
    };
    if (event instanceof MagicTypeChangedEvent) {
        return "magicTypeChanged";
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Events.purs line 38, column 1 - line 39, column 1: " + [ event.constructor.name ]);
};
var listen = function (eventName) {
    return function (handler) {
        return function (chart) {
            return $foreign.listenImpl(eventStr(eventName), handler, chart);
        };
    };
};
module.exports = {
    RefreshEvent: RefreshEvent, 
    RestoreEvent: RestoreEvent, 
    ResizeEvent: ResizeEvent, 
    ClickEvent: ClickEvent, 
    DoubleClickEvent: DoubleClickEvent, 
    HoverEvent: HoverEvent, 
    DataChangedEvent: DataChangedEvent, 
    DataZoomEvent: DataZoomEvent, 
    DataRangeEvent: DataRangeEvent, 
    DataRangeHoverLinkEvent: DataRangeHoverLinkEvent, 
    LegendSelectedEvent: LegendSelectedEvent, 
    LegendHoverLinkEvent: LegendHoverLinkEvent, 
    MapSelectedEvent: MapSelectedEvent, 
    PieSelectedEvent: PieSelectedEvent, 
    DataViewChangedEvent: DataViewChangedEvent, 
    MapRoamEvent: MapRoamEvent, 
    MagicTypeChangedEvent: MagicTypeChangedEvent, 
    listen: listen
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Events/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","ECharts.Chart":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Chart/index.js","ECharts.Effects":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Effects/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Formatter/foreign.js":[function(require,module,exports){
// module ECharts.Formatter

exports.func2json = function(fn) {
    return fn;
};

exports.effArrToFn = function(arr) {
    return function(x) {
        arr(x)();
    };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Formatter/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Maybe = require("Data.Maybe");
var Data_StrMap = require("Data.StrMap");
var Data_Tuple = require("Data.Tuple");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Function = require("Data.Function");
var Control_Monad_Eff = require("Control.Monad.Eff");
var ECharts_Utils = require("ECharts.Utils");
var ECharts_Common = require("ECharts.Common");
var ECharts_Item_Value = require("ECharts.Item.Value");
var Data_Either = require("Data.Either");
var Template = (function () {
    function Template(value0) {
        this.value0 = value0;
    };
    Template.create = function (value0) {
        return new Template(value0);
    };
    return Template;
})();
var FormatFunc = (function () {
    function FormatFunc(value0) {
        this.value0 = value0;
    };
    FormatFunc.create = function (value0) {
        return new FormatFunc(value0);
    };
    return FormatFunc;
})();
var formatterEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_895) {
    if (_895 instanceof Template) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(_895.value0);
    };
    if (_895 instanceof FormatFunc) {
        return $foreign.func2json($foreign.effArrToFn(_895.value0));
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Formatter.purs line 35, column 1 - line 39, column 1: " + [ _895.constructor.name ]);
});
var formatterDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (json) {
    return Prelude["<$>"](Data_Either.functorEither)(Template.create)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(json));
});
module.exports = {
    Template: Template, 
    FormatFunc: FormatFunc, 
    formatterEncodeJson: formatterEncodeJson, 
    formatterDecodeJson: formatterDecodeJson
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Formatter/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Item.Value":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Item.Value/index.js","ECharts.Utils":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Utils/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Grid/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Common = require("ECharts.Common");
var ECharts_Color = require("ECharts.Color");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var Grid = function (x) {
    return x;
};
var gridEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_874) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x")(_874.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y")(_874.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x2")(_874.x2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y2")(_874.y2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("width")(_874.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("height")(_874.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_874.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_874.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderColor")(_874.borderColor) ])));
});
var gridDefault = {
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    x2: Data_Maybe.Nothing.value, 
    y2: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value
};
var gridDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_588) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_28) {
            return function (_29) {
                return function (_30) {
                    return function (_31) {
                        return function (_32) {
                            return function (_33) {
                                return function (_34) {
                                    return function (_35) {
                                        return function (_36) {
                                            return {
                                                x: _28, 
                                                y: _29, 
                                                x2: _30, 
                                                y2: _31, 
                                                width: _32, 
                                                height: _33, 
                                                backgroundColor: _34, 
                                                borderWidth: _35, 
                                                borderColor: _36
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(_588)("x")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(_588)("y")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(_588)("x2")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(_588)("y2")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(_588)("width")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(_588)("height")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_588)("backgroundColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_588)("borderWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_588)("borderColor")))(function (_587) {
            return Prelude.pure(Data_Either.applicativeEither)(_587);
        });
    });
});
module.exports = {
    Grid: Grid, 
    gridDefault: gridDefault, 
    gridEncodeJson: gridEncodeJson, 
    gridDecodeJson: gridDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Image/foreign.js":[function(require,module,exports){
// module ECharts.Image

exports.getDataURLImpl = function(imgType, chart) {
    return function() {
        return chart.getDataURL(imgType);
    };
};

exports.getImageImpl = function(imgType, chart) {
    return function() {
        return chart.getImage(imgType);
    };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Image/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Function = require("Data.Function");
var DOM = require("DOM");
var DOM_Node_Types = require("DOM.Node.Types");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Either = require("Data.Either");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Effects = require("ECharts.Effects");
var PNG = (function () {
    function PNG() {

    };
    PNG.value = new PNG();
    return PNG;
})();
var JPEG = (function () {
    function JPEG() {

    };
    JPEG.value = new JPEG();
    return JPEG;
})();
var imgStr = function (img) {
    if (img instanceof PNG) {
        return "png";
    };
    if (img instanceof JPEG) {
        return "jpeg";
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Image.purs line 21, column 1 - line 22, column 1: " + [ img.constructor.name ]);
};
var getImage = function (img) {
    return function (chart) {
        return $foreign.getImageImpl(imgStr(img), chart);
    };
};
var getDataURL = function (img) {
    return function (chart) {
        return $foreign.getDataURLImpl(imgStr(img), chart);
    };
};
var encodeImg = new Data_Argonaut_Encode.EncodeJson(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString))(imgStr));
var decodeImg = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_555) {
        if (_555 === "png") {
            return Prelude.pure(Data_Either.applicativeEither)(PNG.value);
        };
        if (_555 === "jpeg") {
            return Prelude.pure(Data_Either.applicativeEither)(JPEG.value);
        };
        return new Data_Either.Left("incorrect img type");
    });
});
module.exports = {
    PNG: PNG, 
    JPEG: JPEG, 
    getImage: getImage, 
    getDataURL: getDataURL, 
    encodeImg: encodeImg, 
    decodeImg: decodeImg
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Image/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","DOM.Node.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.Types/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","ECharts.Chart":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Chart/index.js","ECharts.Effects":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Effects/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Item.Data/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Control_Alt = require("Control.Alt");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Maybe = require("Data.Maybe");
var ECharts_Item_Value = require("ECharts.Item.Value");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Style_Item = require("ECharts.Style.Item");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var Value = (function () {
    function Value(value0) {
        this.value0 = value0;
    };
    Value.create = function (value0) {
        return new Value(value0);
    };
    return Value;
})();
var Dat = (function () {
    function Dat(value0) {
        this.value0 = value0;
    };
    Dat.create = function (value0) {
        return new Dat(value0);
    };
    return Dat;
})();
var Label = (function () {
    function Label(value0) {
        this.value0 = value0;
    };
    Label.create = function (value0) {
        return new Label(value0);
    };
    return Label;
})();
var itemDataEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_907) {
    if (_907 instanceof Value) {
        return Data_Argonaut_Encode.encodeJson(ECharts_Item_Value.itemValueEncodeJson)(_907.value0);
    };
    if (_907 instanceof Dat) {
        return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](ECharts_Item_Value.itemValueEncodeJson)("value")(_907.value0.value), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_907.value0.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Tooltip.tooltipEncodeJson))("tooltip")(_907.value0.tooltip), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(_907.value0.itemStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("selected")(_907.value0.selected) ])));
    };
    if (_907 instanceof Label) {
        return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("name")(_907.value0) ])));
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Item/Data.purs line 30, column 1 - line 45, column 1: " + [ _907.constructor.name ]);
});
var itemDataDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (json) {
    return Control_Alt["<|>"](Data_Either.altEither)(Control_Alt["<|>"](Data_Either.altEither)(Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (_657) {
        return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](ECharts_Item_Value.itemValueDecodeJson)(_657)("value"))(function (_656) {
            return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString)))(_657)("name"))(function (_655) {
                if (_655 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(Data_Either.applicativeEither)(new Value(_656));
                };
                if (_655 instanceof Data_Maybe.Just) {
                    return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_228) {
                        return function (_229) {
                            return function (_230) {
                                return {
                                    value: _656, 
                                    name: _655.value0, 
                                    tooltip: _228, 
                                    itemStyle: _229, 
                                    selected: _230
                                };
                            };
                        };
                    })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Tooltip.tooltipDecodeJson))(_657)("tooltip")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Item.itemStyleDecodeJson))(_657)("itemStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_657)("selected")))(function (_654) {
                        return Prelude.pure(Data_Either.applicativeEither)(new Dat(_654));
                    });
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Item/Data.purs line 45, column 1 - line 69, column 1: " + [ _655.constructor.name ]);
            });
        });
    }))(Prelude["<$>"](Data_Either.functorEither)(Label.create)(Prelude[">>="](Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (_554) {
        return Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(_554)("name");
    }))))(Prelude["<$>"](Data_Either.functorEither)(Value.create)(Data_Argonaut_Decode.decodeJson(ECharts_Item_Value.itemValueDecodeJson)(json)));
});
var dataDefault = function (value) {
    return {
        value: value, 
        name: Data_Maybe.Nothing.value, 
        tooltip: Data_Maybe.Nothing.value, 
        itemStyle: Data_Maybe.Nothing.value, 
        selected: Data_Maybe.Nothing.value
    };
};
module.exports = {
    Value: Value, 
    Dat: Dat, 
    Label: Label, 
    dataDefault: dataDefault, 
    itemDataEncodeJson: itemDataEncodeJson, 
    itemDataDecodeJson: itemDataDecodeJson
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","ECharts.Item.Value":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Item.Value/index.js","ECharts.Style.Item":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Item/index.js","ECharts.Tooltip":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Tooltip/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Item.Value/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Control_Alt = require("Control.Alt");
var Prelude = require("Prelude");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_List = require("Data.List");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
var Data_Either = require("Data.Either");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Foldable = require("Data.Foldable");
var Data_Unfoldable = require("Data.Unfoldable");
var None = (function () {
    function None() {

    };
    None.value = new None();
    return None;
})();
var Simple = (function () {
    function Simple(value0) {
        this.value0 = value0;
    };
    Simple.create = function (value0) {
        return new Simple(value0);
    };
    return Simple;
})();
var Many = (function () {
    function Many(value0) {
        this.value0 = value0;
    };
    Many.create = function (value0) {
        return new Many(value0);
    };
    return Many;
})();
var XYR = (function () {
    function XYR(value0) {
        this.value0 = value0;
    };
    XYR.create = function (value0) {
        return new XYR(value0);
    };
    return XYR;
})();
var HLOC = (function () {
    function HLOC(value0) {
        this.value0 = value0;
    };
    HLOC.create = function (value0) {
        return new HLOC(value0);
    };
    return HLOC;
})();
var itemValueEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (val) {
    if (val instanceof None) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("-");
    };
    if (val instanceof Simple) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(val.value0);
    };
    if (val instanceof Many) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))(val.value0);
    };
    if (val instanceof XYR) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJson))([ Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(val.value0.x), Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(val.value0.y), Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))(val.value0.r) ]);
    };
    if (val instanceof HLOC) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))([ val.value0.o, val.value0.c, val.value0.l, val.value0.h ]);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Item/Value.purs line 23, column 1 - line 33, column 1: " + [ val.constructor.name ]);
});
var itemValueDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (json) {
    return Control_Alt["<|>"](Data_Either.altEither)(Control_Alt["<|>"](Data_Either.altEither)(Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonNumber))(json))(function (_584) {
        var _980 = Data_List.toList(Data_Foldable.foldableArray)(_584);
        if (_980 instanceof Data_List.Cons && (_980.value1 instanceof Data_List.Cons && (_980.value1.value1 instanceof Data_List.Cons && _980.value1.value1.value1 instanceof Data_List.Cons))) {
            return Prelude.pure(Data_Either.applicativeEither)(new HLOC({
                h: _980.value1.value1.value1.value0, 
                l: _980.value1.value1.value0, 
                o: _980.value0, 
                c: _980.value1.value0
            }));
        };
        if (_980 instanceof Data_List.Cons && (_980.value1 instanceof Data_List.Cons && (_980.value1.value1 instanceof Data_List.Cons && _980.value1.value1.value1 instanceof Data_List.Nil))) {
            return Prelude.pure(Data_Either.applicativeEither)(new XYR({
                x: _980.value0, 
                y: _980.value1.value0, 
                r: new Data_Maybe.Just(_980.value1.value1.value0)
            }));
        };
        if (_980 instanceof Data_List.Cons && (_980.value1 instanceof Data_List.Cons && _980.value1.value1 instanceof Data_List.Nil)) {
            return Prelude.pure(Data_Either.applicativeEither)(new XYR({
                x: _980.value0, 
                y: _980.value1.value0, 
                r: Data_Maybe.Nothing.value
            }));
        };
        return Prelude.pure(Data_Either.applicativeEither)(new Many(Data_List.fromList(Data_Unfoldable.unfoldableArray)(_980)));
    }))(Prelude["<$>"](Data_Either.functorEither)(Simple.create)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonNumber)(json))))((function () {
        var _999 = Prelude["=="](Data_Either.eqEither(Prelude.eqString)(Prelude.eqString))(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(json))(new Data_Either.Right("-"));
        if (_999) {
            return Prelude.pure(Data_Either.applicativeEither)(None.value);
        };
        if (!_999) {
            return new Data_Either.Left("Incorrect ItemValue");
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Item/Value.purs line 33, column 1 - line 45, column 37: " + [ _999.constructor.name ]);
    })());
});
module.exports = {
    None: None, 
    Simple: Simple, 
    Many: Many, 
    XYR: XYR, 
    HLOC: HLOC, 
    itemValueEncodeJson: itemValueEncodeJson, 
    itemValueDecodeJson: itemValueDecodeJson
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Unfoldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Unfoldable/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Legend/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Color = require("ECharts.Color");
var ECharts_Common = require("ECharts.Common");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Style_Text = require("ECharts.Style.Text");
var ECharts_Formatter = require("ECharts.Formatter");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var LegendItem = (function () {
    function LegendItem(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    LegendItem.create = function (value0) {
        return function (value1) {
            return new LegendItem(value0, value1);
        };
    };
    return LegendItem;
})();
var Legend = function (x) {
    return x;
};
var legendItemEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_897) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("name")(_897.value0), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("icon")(_897.value1.icon), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_897.value1.textStyle) ])));
});
var legendItemDefault = function (name) {
    return new LegendItem(name, {
        icon: Data_Maybe.Nothing.value, 
        textStyle: Data_Maybe.Nothing.value
    });
};
var legendItemDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_637) {
        return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(_637)("name"))(function (_636) {
            return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_165) {
                return function (_166) {
                    return {
                        icon: _165, 
                        textStyle: _166
                    };
                };
            })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_637)("icon")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Text.textStyleDecodeJson))(_637)("textStyle")))(function (_635) {
                return Prelude.pure(Data_Either.applicativeEither)(new LegendItem(_636, _635));
            });
        });
    });
});
var legendEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_898) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_898.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.orientEncodeJson))("orient")(_898.orient), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_898.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_898.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_898.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_898.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_898.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_898.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemGap")(_898.itemGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemHeight")(_898.itemHeight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemWidth")(_898.itemWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_898.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_898.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.selModeEncodeJson))("selectedMode")(_898.selectedMode), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonJBoolean)))("selected")(_898.selected), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(legendItemEncodeJson)))("data")(_898.data) ])));
});
var legendDefault = {
    show: Data_Maybe.Nothing.value, 
    orient: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    itemGap: Data_Maybe.Nothing.value, 
    itemHeight: Data_Maybe.Nothing.value, 
    itemWidth: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    selectedMode: Data_Maybe.Nothing.value, 
    selected: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value
};
var legendDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_639) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_167) {
            return function (_168) {
                return function (_169) {
                    return function (_170) {
                        return function (_171) {
                            return function (_172) {
                                return function (_173) {
                                    return function (_174) {
                                        return function (_175) {
                                            return function (_176) {
                                                return function (_177) {
                                                    return function (_178) {
                                                        return function (_179) {
                                                            return function (_180) {
                                                                return function (_181) {
                                                                    return function (_182) {
                                                                        return {
                                                                            show: _167, 
                                                                            orient: _168, 
                                                                            x: _169, 
                                                                            y: _170, 
                                                                            backgroundColor: _171, 
                                                                            borderColor: _172, 
                                                                            borderWidth: _173, 
                                                                            padding: _174, 
                                                                            itemGap: _175, 
                                                                            itemHeight: _176, 
                                                                            itemWidth: _177, 
                                                                            textStyle: _178, 
                                                                            formatter: _179, 
                                                                            selectedMode: _180, 
                                                                            selected: _181, 
                                                                            data: _182
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_639)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.orientDecodeJson))(_639)("orient")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.xPosDecodeJson))(_639)("x")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.yPosDecodeJson))(_639)("y")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_639)("backgroundColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_639)("borderColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_639)("borderWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.cornerJsonDecode(Data_Argonaut_Decode.decodeJsonNumber)))(_639)("padding")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_639)("itemGap")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_639)("itemHeight")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_639)("itemWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Text.textStyleDecodeJson))(_639)("textStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Formatter.formatterDecodeJson))(_639)("formatter")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.selModeDecodeJson))(_639)("selectedMode")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonBoolean)))(_639)("selected")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(legendItemDecodeJson)))(_639)("data")))(function (_638) {
            return Prelude.pure(Data_Either.applicativeEither)(_638);
        });
    });
});
module.exports = {
    Legend: Legend, 
    LegendItem: LegendItem, 
    legendDefault: legendDefault, 
    legendItemDefault: legendItemDefault, 
    legendItemEncodeJson: legendItemEncodeJson, 
    legendItemDecodeJson: legendItemDecodeJson, 
    legendEncodeJson: legendEncodeJson, 
    legendDecodeJson: legendDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","ECharts.Formatter":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Formatter/index.js","ECharts.Style.Text":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Text/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Loading/foreign.js":[function(require,module,exports){
// module ECharts.Loading

exports.showLoadingImpl = function(json, chart) {
    return function() {
        chart.showLoading(json);
        return chart;
    };
};

exports.hideLoading = function(chart) {
    return function() {
        chart.hideLoading();
        return chart;
    };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Loading/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Function = require("Data.Function");
var ECharts_Utils = require("ECharts.Utils");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Common = require("ECharts.Common");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Style_Text = require("ECharts.Style.Text");
var ECharts_Effects = require("ECharts.Effects");
var Data_Array = require("Data.Array");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple_Nested = require("Data.Tuple.Nested");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Foldable = require("Data.Foldable");
var Spin = (function () {
    function Spin() {

    };
    Spin.value = new Spin();
    return Spin;
})();
var Bar = (function () {
    function Bar() {

    };
    Bar.value = new Bar();
    return Bar;
})();
var Ring = (function () {
    function Ring() {

    };
    Ring.value = new Ring();
    return Ring;
})();
var Whirling = (function () {
    function Whirling() {

    };
    Whirling.value = new Whirling();
    return Whirling;
})();
var DynamicLine = (function () {
    function DynamicLine() {

    };
    DynamicLine.value = new DynamicLine();
    return DynamicLine;
})();
var Bubble = (function () {
    function Bubble() {

    };
    Bubble.value = new Bubble();
    return Bubble;
})();
var LoadingOption = function (x) {
    return x;
};
var loadingOptionDefault = {
    text: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    effect: Data_Maybe.Nothing.value, 
    effectOption: Data_Maybe.Nothing.value, 
    progress: Data_Maybe.Nothing.value
};
var loadingEffectEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof Spin) {
            return "spin";
        };
        if (a instanceof Bar) {
            return "bar";
        };
        if (a instanceof Ring) {
            return "ring";
        };
        if (a instanceof Whirling) {
            return "whirling";
        };
        if (a instanceof DynamicLine) {
            return "dynamicLine";
        };
        if (a instanceof Bubble) {
            return "bubble";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Loading.purs line 33, column 1 - line 42, column 1: " + [ a.constructor.name ]);
    })());
});
var showLoadingOptions = new Data_Argonaut_Encode.EncodeJson(function (_883) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("text")(_883.text), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_883.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_883.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_883.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(loadingEffectEncodeJson))("effect")(_883.effect), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJson))("effectOption")(_883.effectOption), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("progress")(_883.progress) ])));
});
var showLoading = function (opts) {
    return function (chart) {
        return $foreign.showLoadingImpl(ECharts_Utils.unnull(Data_Argonaut_Encode.encodeJson(showLoadingOptions)(opts)), chart);
    };
};
module.exports = {
    LoadingOption: LoadingOption, 
    Spin: Spin, 
    Bar: Bar, 
    Ring: Ring, 
    Whirling: Whirling, 
    DynamicLine: DynamicLine, 
    Bubble: Bubble, 
    showLoading: showLoading, 
    loadingOptionDefault: loadingOptionDefault, 
    loadingEffectEncodeJson: loadingEffectEncodeJson, 
    showLoadingOptions: showLoadingOptions, 
    hideLoading: $foreign.hideLoading
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Loading/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple.Nested":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple.Nested/index.js","ECharts.Chart":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Chart/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","ECharts.Effects":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Effects/index.js","ECharts.Style.Text":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Text/index.js","ECharts.Utils":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Utils/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Data/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var MarkPointData = function (x) {
    return x;
};
var mpDataEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_865) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_865.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("value")(_865.value), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("x")(_865.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("y")(_865.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("xAxis")(_865.xAxis), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("yAxis")(_865.yAxis), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("type")(_865.type) ])));
});
var mpDataDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_557) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_0) {
            return function (_1) {
                return function (_2) {
                    return function (_3) {
                        return function (_4) {
                            return function (_5) {
                                return function (_6) {
                                    return {
                                        name: _0, 
                                        value: _1, 
                                        x: _2, 
                                        y: _3, 
                                        xAxis: _4, 
                                        yAxis: _5, 
                                        type: _6
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_557)("name")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_557)("value")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_557)("x")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_557)("y")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_557)("xAxis")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_557)("yAxis")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_557)("type")))(function (_556) {
            return Prelude.pure(Data_Either.applicativeEither)(_556);
        });
    });
});
var markPointDataDefault = {
    name: Data_Maybe.Nothing.value, 
    value: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    xAxis: Data_Maybe.Nothing.value, 
    yAxis: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value
};
module.exports = {
    MarkPointData: MarkPointData, 
    markPointDataDefault: markPointDataDefault, 
    mpDataEncodeJson: mpDataEncodeJson, 
    mpDataDecodeJson: mpDataDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Effect/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Common = require("ECharts.Common");
var ECharts_Color = require("ECharts.Color");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var MarkPointEffect = function (x) {
    return x;
};
var mpEffectEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_875) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_875.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("loop")(_875.loop), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("period")(_875.period), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("scaleSize")(_875.scaleSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_875.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("shadowBlur")(_875.shadowBlur) ])));
});
var mpEffectDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_590) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_37) {
            return function (_38) {
                return function (_39) {
                    return function (_40) {
                        return function (_41) {
                            return function (_42) {
                                return {
                                    show: _37, 
                                    loop: _38, 
                                    period: _39, 
                                    scaleSize: _40, 
                                    color: _41, 
                                    shadowBlur: _42
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_590)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_590)("loop")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_590)("period")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_590)("scaleSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_590)("color")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_590)("shoadowBlur")))(function (_589) {
            return Prelude.pure(Data_Either.applicativeEither)(_589);
        });
    });
});
var markPointEffectDefault = {
    show: Data_Maybe.Nothing.value, 
    loop: Data_Maybe.Nothing.value, 
    period: Data_Maybe.Nothing.value, 
    scaleSize: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    shadowBlur: Data_Maybe.Nothing.value
};
module.exports = {
    MarkPointEffect: MarkPointEffect, 
    markPointEffectDefault: markPointEffectDefault, 
    mpEffectEncodeJson: mpEffectEncodeJson, 
    mpEffectDecodeJson: mpEffectDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Line/foreign.js":[function(require,module,exports){
// module ECharts.Mark.Line

exports.addMarkLineImpl = function(ml, chart) {
    return function() {
        return chart.addMarkLine(ml);
    };
};

exports.delMarkLineImpl = function(idx, name, chart) {
    return function() {
        return chart.delMarkLine(idx, name);
    };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Line/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Function = require("Data.Function");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Common = require("ECharts.Common");
var ECharts_Mark_Effect = require("ECharts.Mark.Effect");
var ECharts_Mark_Data = require("ECharts.Mark.Data");
var ECharts_Style_Item = require("ECharts.Style.Item");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Effects = require("ECharts.Effects");
var Data_Maybe = require("Data.Maybe");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Tuple = require("Data.Tuple");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var MarkLine = function (x) {
    return x;
};
var mlEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_922) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(ECharts_Symbol.encodeJsonSymbol)(ECharts_Symbol.encodeJsonSymbol)))("symbol")(_922.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.dblSymbolSizeEncodeJson))("symbolSize")(_922.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber)))("symbolRotate")(_922.symbolRotate), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Mark_Effect.mpEffectEncodeJson))("effect")(_922.effect), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber)))))("geoCoord")(_922.geoCoord), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonTuple(ECharts_Mark_Data.mpDataEncodeJson)(ECharts_Mark_Data.mpDataEncodeJson))))("data")(_922.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(_922.itemStyle) ])));
});
var mlDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_692) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_295) {
            return function (_296) {
                return function (_297) {
                    return function (_298) {
                        return function (_299) {
                            return function (_300) {
                                return function (_301) {
                                    return {
                                        symbol: _295, 
                                        symbolSize: _296, 
                                        symbolRotate: _297, 
                                        effect: _298, 
                                        geoCoord: _299, 
                                        data: _300, 
                                        itemStyle: _301
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonTuple(ECharts_Symbol.symbolDecodeJson)(ECharts_Symbol.symbolDecodeJson)))(_692)("symbol")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.dblSymbolSizeDecodeJson))(_692)("symbolSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonTuple(Data_Argonaut_Decode.decodeJsonNumber)(Data_Argonaut_Decode.decodeJsonNumber)))(_692)("symbolRotate")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Mark_Effect.mpEffectDecodeJson))(_692)("effect")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonTuple(Data_Argonaut_Decode.decodeJsonNumber)(Data_Argonaut_Decode.decodeJsonNumber)))))(_692)("geoCoord")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonTuple(ECharts_Mark_Data.mpDataDecodeJson)(ECharts_Mark_Data.mpDataDecodeJson))))(_692)("data")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Item.itemStyleDecodeJson))(_692)("itemStyle")))(function (_691) {
            return Prelude.pure(Data_Either.applicativeEither)(_691);
        });
    });
});
var markLineDefault = {
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    symbolRotate: Data_Maybe.Nothing.value, 
    effect: Data_Maybe.Nothing.value, 
    geoCoord: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value, 
    itemStyle: Data_Maybe.Nothing.value
};
var delMarkLine = function (idx) {
    return function (name) {
        return function (chart) {
            return $foreign.delMarkLineImpl(idx, name, chart);
        };
    };
};
var addMarkLine = function (ml) {
    return function (chart) {
        return $foreign.addMarkLineImpl(Data_Argonaut_Encode.encodeJson(mlEncodeJson)(ml), chart);
    };
};
module.exports = {
    MarkLine: MarkLine, 
    delMarkLine: delMarkLine, 
    addMarkLine: addMarkLine, 
    markLineDefault: markLineDefault, 
    mlEncodeJson: mlEncodeJson, 
    mlDecodeJson: mlDecodeJson
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Line/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Chart":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Chart/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Effects":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Effects/index.js","ECharts.Mark.Data":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Data/index.js","ECharts.Mark.Effect":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Effect/index.js","ECharts.Style.Item":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Item/index.js","ECharts.Symbol":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Symbol/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Point/foreign.js":[function(require,module,exports){
// module ECharts.Mark.Point

exports.addMarkPointImpl = function(mp, chart) {
    return function() {
        return chart.addMarkPoint(mp);
    };
};

exports.delMarkPointImpl = function(idx, name, chart) {
    return function() {
        return chart.delMarkPoint(idx, name);
    };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Point/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Function = require("Data.Function");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Common = require("ECharts.Common");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Mark_Effect = require("ECharts.Mark.Effect");
var ECharts_Mark_Data = require("ECharts.Mark.Data");
var ECharts_Effects = require("ECharts.Effects");
var Data_Maybe = require("Data.Maybe");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Tuple = require("Data.Tuple");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var MarkPoint = function (x) {
    return x;
};
var markPointEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_923) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(_923.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(_923.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("large")(_923.large), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Mark_Effect.mpEffectEncodeJson))("effect")(_923.effect), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Mark_Data.mpDataEncodeJson)))("data")(_923.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber))))("geoCoord")(_923.geoCoord) ])));
});
var markPointDefault = {
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    large: Data_Maybe.Nothing.value, 
    effect: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value, 
    geoCoord: Data_Maybe.Nothing.value
};
var markPointDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_694) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_302) {
            return function (_303) {
                return function (_304) {
                    return function (_305) {
                        return function (_306) {
                            return function (_307) {
                                return {
                                    symbol: _302, 
                                    symbolSize: _303, 
                                    large: _304, 
                                    effect: _305, 
                                    data: _306, 
                                    geoCoord: _307
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolDecodeJson))(_694)("symbol")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolSizeDecodeJson))(_694)("symbolSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_694)("large")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Mark_Effect.mpEffectDecodeJson))(_694)("effect")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Mark_Data.mpDataDecodeJson)))(_694)("data")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonTuple(Data_Argonaut_Decode.decodeJsonNumber)(Data_Argonaut_Decode.decodeJsonNumber))))(_694)("geoCoord")))(function (_693) {
            return Prelude.pure(Data_Either.applicativeEither)(_693);
        });
    });
});
var delMarkPoint = function (idx) {
    return function (name) {
        return function (chart) {
            return $foreign.delMarkPointImpl(idx, name, chart);
        };
    };
};
var addMarkPoint = function (mp) {
    return function (chart) {
        return $foreign.addMarkPointImpl(Data_Argonaut_Encode.encodeJson(markPointEncodeJson)(mp), chart);
    };
};
module.exports = {
    MarkPoint: MarkPoint, 
    delMarkPoint: delMarkPoint, 
    addMarkPoint: addMarkPoint, 
    markPointDefault: markPointDefault, 
    markPointEncodeJson: markPointEncodeJson, 
    markPointDecodeJson: markPointDecodeJson
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Point/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Chart":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Chart/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Effects":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Effects/index.js","ECharts.Mark.Data":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Data/index.js","ECharts.Mark.Effect":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Effect/index.js","ECharts.Symbol":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Symbol/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Options/foreign.js":[function(require,module,exports){
// module ECharts.Options

exports.setOptionImpl = function(option, notMerge, chart) {
    return function() {
        chart.setOption(option, notMerge);
        return chart;
    };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Options/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Function = require("Data.Function");
var ECharts_Utils = require("ECharts.Utils");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Color = require("ECharts.Color");
var ECharts_Series = require("ECharts.Series");
var ECharts_Timeline = require("ECharts.Timeline");
var ECharts_Toolbox = require("ECharts.Toolbox");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Title = require("ECharts.Title");
var ECharts_Legend = require("ECharts.Legend");
var ECharts_DataRange = require("ECharts.DataRange");
var ECharts_DataZoom = require("ECharts.DataZoom");
var ECharts_RoamController = require("ECharts.RoamController");
var ECharts_Grid = require("ECharts.Grid");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Effects = require("ECharts.Effects");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var Option = function (x) {
    return x;
};
var optionsEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_936) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_936.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("color")(_936.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("renderAsImage")(_936.renderAsImage), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("calculable")(_936.calculable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("animation")(_936.animation), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Series.encodeSeries))))("series")(_936.series), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Timeline.timelineEncodeJson))("timeline")(_936.timeline), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Tooltip.tooltipEncodeJson))("tooltip")(_936.tooltip), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Toolbox.toolboxEncodeJson))("toolbox")(_936.toolbox), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Title.titleEncodeJson))("title")(_936.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Legend.legendEncodeJson))("legend")(_936.legend), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_DataRange.dataRangeEncodeJson))("dataRange")(_936.dataRange), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_DataZoom.dataZoomEncodeJson))("dataZoom")(_936.dataZoom), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_RoamController.roamControllerEncodeJson))("roamController")(_936.roamController), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Grid.gridEncodeJson))("grid")(_936.grid), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisesEncodeJson))("xAxis")(_936.xAxis), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisesEncodeJson))("yAxis")(_936.yAxis), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Axis.polarEncodeJson)))("polar")(_936.polar) ])));
});
var setOption = function (opts) {
    return function (notMerge) {
        return function (chart) {
            return $foreign.setOptionImpl(Prelude["<<<"](Prelude.semigroupoidFn)(ECharts_Utils.unnull)(Data_Argonaut_Encode.encodeJson(optionsEncodeJson))(opts), notMerge, chart);
        };
    };
};
var optionsDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (json) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (_725) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_536) {
            return function (_537) {
                return function (_538) {
                    return function (_539) {
                        return function (_540) {
                            return function (_541) {
                                return function (_542) {
                                    return function (_543) {
                                        return function (_544) {
                                            return function (_545) {
                                                return function (_546) {
                                                    return function (_547) {
                                                        return function (_548) {
                                                            return function (_549) {
                                                                return function (_550) {
                                                                    return function (_551) {
                                                                        return function (_552) {
                                                                            return function (_553) {
                                                                                return {
                                                                                    backgroundColor: _536, 
                                                                                    color: _537, 
                                                                                    renderAsImage: _538, 
                                                                                    calculable: _539, 
                                                                                    animation: _540, 
                                                                                    series: _541, 
                                                                                    timeline: _542, 
                                                                                    tooltip: _543, 
                                                                                    toolbox: _544, 
                                                                                    title: _545, 
                                                                                    legend: _546, 
                                                                                    dataRange: _547, 
                                                                                    dataZoom: _548, 
                                                                                    roamController: _549, 
                                                                                    grid: _550, 
                                                                                    xAxis: _551, 
                                                                                    yAxis: _552, 
                                                                                    polar: _553
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_725)("backgroundColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonString)))(_725)("color")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_725)("renderAsImage")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_725)("calculable")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_725)("animation")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Series.decodeSeries))))(_725)("series")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Timeline.timelineDecodeJson))(_725)("timeline")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Tooltip.tooltipDecodeJson))(_725)("tooltip")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Toolbox.toolboxDecodeJson))(_725)("toolbox")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Title.titleDecodeJson))(_725)("title")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Legend.legendDecodeJson))(_725)("legend")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_DataRange.dataRangeDecodeJson))(_725)("dataRange")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_DataZoom.dataZoomDecodeJson))(_725)("dataZoom")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_RoamController.roamControllerDecodeJson))(_725)("roamController")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Grid.gridDecodeJson))(_725)("grid")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Axis.axisesDecodeJson))(_725)("xAxis")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Axis.axisesDecodeJson))(_725)("yAxis")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Axis.polarDecodeJson)))(_725)("polar")))(function (_724) {
            return Prelude.pure(Data_Either.applicativeEither)(_724);
        });
    });
});
var optionDefault = {
    backgroundColor: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    renderAsImage: Data_Maybe.Nothing.value, 
    calculable: Data_Maybe.Nothing.value, 
    animation: Data_Maybe.Nothing.value, 
    series: Data_Maybe.Nothing.value, 
    timeline: Data_Maybe.Nothing.value, 
    tooltip: Data_Maybe.Nothing.value, 
    toolbox: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    legend: Data_Maybe.Nothing.value, 
    dataRange: Data_Maybe.Nothing.value, 
    dataZoom: Data_Maybe.Nothing.value, 
    roamController: Data_Maybe.Nothing.value, 
    grid: Data_Maybe.Nothing.value, 
    xAxis: Data_Maybe.Nothing.value, 
    yAxis: Data_Maybe.Nothing.value, 
    polar: Data_Maybe.Nothing.value
};
module.exports = {
    Option: Option, 
    setOption: setOption, 
    optionDefault: optionDefault, 
    optionsEncodeJson: optionsEncodeJson, 
    optionsDecodeJson: optionsDecodeJson
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Options/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","ECharts.Axis":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Axis/index.js","ECharts.Chart":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Chart/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.DataRange":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.DataRange/index.js","ECharts.DataZoom":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.DataZoom/index.js","ECharts.Effects":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Effects/index.js","ECharts.Grid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Grid/index.js","ECharts.Legend":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Legend/index.js","ECharts.RoamController":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.RoamController/index.js","ECharts.Series":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series/index.js","ECharts.Timeline":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Timeline/index.js","ECharts.Title":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Title/index.js","ECharts.Toolbox":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Toolbox/index.js","ECharts.Tooltip":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Tooltip/index.js","ECharts.Utils":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Utils/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.RoamController/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Maybe = require("Data.Maybe");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Color = require("ECharts.Color");
var ECharts_Common = require("ECharts.Common");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var RoamController = function (x) {
    return x;
};
var roamControllerEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_876) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_876.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_876.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_876.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_876.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("height")(_876.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_876.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_876.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_876.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_876.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("fillerColor")(_876.fillerColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("handleColor")(_876.handleColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("step")(_876.step), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonJBoolean)))("mapTypeControl")(_876.mapTypeControl) ])));
});
var roamControllerDefault = {
    show: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    fillerColor: Data_Maybe.Nothing.value, 
    handleColor: Data_Maybe.Nothing.value, 
    step: Data_Maybe.Nothing.value, 
    mapTypeControl: Data_Maybe.Nothing.value
};
var roamControllerDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_592) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_43) {
            return function (_44) {
                return function (_45) {
                    return function (_46) {
                        return function (_47) {
                            return function (_48) {
                                return function (_49) {
                                    return function (_50) {
                                        return function (_51) {
                                            return function (_52) {
                                                return function (_53) {
                                                    return function (_54) {
                                                        return function (_55) {
                                                            return {
                                                                show: _43, 
                                                                x: _44, 
                                                                y: _45, 
                                                                width: _46, 
                                                                height: _47, 
                                                                backgroundColor: _48, 
                                                                borderColor: _49, 
                                                                borderWidth: _50, 
                                                                padding: _51, 
                                                                fillerColor: _52, 
                                                                handleColor: _53, 
                                                                step: _54, 
                                                                mapTypeControl: _55
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_592)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.xPosDecodeJson))(_592)("x")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.yPosDecodeJson))(_592)("y")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_592)("width")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_592)("height")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_592)("backgroundColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_592)("borderColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_592)("borderWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.cornerJsonDecode(Data_Argonaut_Decode.decodeJsonNumber)))(_592)("padding")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_592)("fillerColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_592)("handleColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_592)("step")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonBoolean)))(_592)("mapTypeControl")))(function (_591) {
            return Prelude.pure(Data_Either.applicativeEither)(_591);
        });
    });
});
module.exports = {
    RoamController: RoamController, 
    roamControllerDefault: roamControllerDefault, 
    roamControllerEncodeJson: roamControllerEncodeJson, 
    roamControllerDecodeJson: roamControllerDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series.EventRiver/foreign.js":[function(require,module,exports){
// module ECharts.Series.EventRiver

exports.jsDateToJson = function(date) {
    return date;
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series.EventRiver/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Date = require("Data.Date");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Tuple = require("Data.Tuple");
var ECharts_Common = require("ECharts.Common");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Style_Item = require("ECharts.Style.Item");
var ECharts_Mark_Line = require("ECharts.Mark.Line");
var ECharts_Mark_Point = require("ECharts.Mark.Point");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Series_Force = require("ECharts.Series.Force");
var ECharts_Series_Gauge = require("ECharts.Series.Gauge");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Title = require("ECharts.Title");
var Data_Foldable = require("Data.Foldable");
var EvolutionDetail = function (x) {
    return x;
};
var Evolution = function (x) {
    return x;
};
var OneEvent = function (x) {
    return x;
};
var oneEventDefault = {
    name: Data_Maybe.Nothing.value, 
    weight: Data_Maybe.Nothing.value, 
    evolution: Data_Maybe.Nothing.value
};
var evolutionDetailDefault = {
    link: Data_Maybe.Nothing.value, 
    text: Data_Maybe.Nothing.value, 
    img: Data_Maybe.Nothing.value
};
var evoDetailEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_933) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("link")(_933.link), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("text")(_933.text), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("img")(_933.img) ])));
});
var evoDetailDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_714) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_374) {
            return function (_375) {
                return function (_376) {
                    return {
                        link: _374, 
                        text: _375, 
                        img: _376
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_714)("link")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_714)("text")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_714)("img")))(function (_713) {
            return Prelude.pure(Data_Either.applicativeEither)(_713);
        });
    });
});
var evoDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_718) {
        return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(_718)("time"))(function (_717) {
            return Prelude.bind(Data_Either.bindEither)(Data_Maybe.maybe(new Data_Either.Left("incorrect time"))(Data_Either.Right.create)(Data_Date.fromStringStrict(_717)))(function (_716) {
                return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_377) {
                    return function (_378) {
                        return {
                            time: _716, 
                            value: _377, 
                            detail: _378
                        };
                    };
                })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonNumber)(_718)("value")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(evoDetailDecodeJson))(_718)("detail")))(function (_715) {
                    return Prelude.pure(Data_Either.applicativeEither)(_715);
                });
            });
        });
    });
});
var oneEventDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_720) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_379) {
            return function (_380) {
                return function (_381) {
                    return {
                        name: _379, 
                        weight: _380, 
                        evolution: _381
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_720)("name")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_720)("weight")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(evoDecodeJson)))(_720)("evolution")))(function (_719) {
            return Prelude.pure(Data_Either.applicativeEither)(_719);
        });
    });
});
var dateToJson = Prelude["<<<"](Prelude.semigroupoidFn)($foreign.jsDateToJson)(Data_Date.toJSDate);
var evoEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_934) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("time")(dateToJson(_934.time)), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJNumber)("value")(_934.value), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(evoDetailEncodeJson))("detail")(_934.detail) ])));
});
var oneEventEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_935) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_935.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("weight")(_935.weight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(evoEncodeJson)))("evolution")(_935.evolution) ])));
});
module.exports = {
    OneEvent: OneEvent, 
    Evolution: Evolution, 
    EvolutionDetail: EvolutionDetail, 
    oneEventDefault: oneEventDefault, 
    evolutionDetailDefault: evolutionDetailDefault, 
    evoDetailEncodeJson: evoDetailEncodeJson, 
    evoDetailDecodeJson: evoDetailDecodeJson, 
    evoEncodeJson: evoEncodeJson, 
    evoDecodeJson: evoDecodeJson, 
    oneEventEncodeJson: oneEventEncodeJson, 
    oneEventDecodeJson: oneEventDecodeJson
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series.EventRiver/foreign.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Date":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Date/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Axis":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Axis/index.js","ECharts.Chart":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Chart/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","ECharts.Item.Data":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Item.Data/index.js","ECharts.Mark.Line":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Line/index.js","ECharts.Mark.Point":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Point/index.js","ECharts.Series.Force":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series.Force/index.js","ECharts.Series.Gauge":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series.Gauge/index.js","ECharts.Style.Item":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Item/index.js","ECharts.Symbol":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Symbol/index.js","ECharts.Title":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Title/index.js","ECharts.Tooltip":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Tooltip/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series.Force/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Control_Alt = require("Control.Alt");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var ECharts_Common = require("ECharts.Common");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Style_Item = require("ECharts.Style.Item");
var ECharts_Mark_Line = require("ECharts.Mark.Line");
var ECharts_Mark_Point = require("ECharts.Mark.Point");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Symbol = require("ECharts.Symbol");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var Node = function (x) {
    return x;
};
var Name = (function () {
    function Name(value0) {
        this.value0 = value0;
    };
    Name.create = function (value0) {
        return new Name(value0);
    };
    return Name;
})();
var Index = (function () {
    function Index(value0) {
        this.value0 = value0;
    };
    Index.create = function (value0) {
        return new Index(value0);
    };
    return Index;
})();
var Link = function (x) {
    return x;
};
var ForceCategory = function (x) {
    return x;
};
var nodeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_930) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_930.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("label")(_930.label), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJNumber)("value")(_930.value), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("ignore")(_930.ignore), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(_930.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(_930.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(_930.itemStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber)))("initial")(_930.initial), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("fixX")(_930.fixX), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("fixY")(_930.fixY), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("draggable")(_930.draggable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("category")(_930.category) ])));
});
var nodeDefault = function (value) {
    return {
        name: Data_Maybe.Nothing.value, 
        label: Data_Maybe.Nothing.value, 
        value: value, 
        ignore: Data_Maybe.Nothing.value, 
        symbol: Data_Maybe.Nothing.value, 
        symbolSize: Data_Maybe.Nothing.value, 
        itemStyle: Data_Maybe.Nothing.value, 
        initial: Data_Maybe.Nothing.value, 
        fixX: Data_Maybe.Nothing.value, 
        fixY: Data_Maybe.Nothing.value, 
        draggable: Data_Maybe.Nothing.value, 
        category: Data_Maybe.Nothing.value
    };
};
var nodeDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_710) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_358) {
            return function (_359) {
                return function (_360) {
                    return function (_361) {
                        return function (_362) {
                            return function (_363) {
                                return function (_364) {
                                    return function (_365) {
                                        return function (_366) {
                                            return function (_367) {
                                                return function (_368) {
                                                    return function (_369) {
                                                        return {
                                                            name: _358, 
                                                            label: _359, 
                                                            value: _360, 
                                                            ignore: _361, 
                                                            symbol: _362, 
                                                            symbolSize: _363, 
                                                            itemStyle: _364, 
                                                            initial: _365, 
                                                            fixX: _366, 
                                                            fixY: _367, 
                                                            draggable: _368, 
                                                            category: _369
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_710)("name")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_710)("label")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonNumber)(_710)("value")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_710)("ignore")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolDecodeJson))(_710)("symbol")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolSizeDecodeJson))(_710)("symbolSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Item.itemStyleDecodeJson))(_710)("itemStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonTuple(Data_Argonaut_Decode.decodeJsonNumber)(Data_Argonaut_Decode.decodeJsonNumber)))(_710)("initial")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_710)("fixX")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_710)("fixY")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_710)("draggable")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_710)("category")))(function (_709) {
            return Prelude.pure(Data_Either.applicativeEither)(_709);
        });
    });
});
var linkEndEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_931) {
    if (_931 instanceof Name) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(_931.value0);
    };
    if (_931 instanceof Index) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(_931.value0);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Series/Force.purs line 146, column 1 - line 150, column 1: " + [ _931.constructor.name ]);
});
var linkEndDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(Name.create)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j)))(Prelude["<$>"](Data_Either.functorEither)(Index.create)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonNumber)(j)));
});
var linkEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_932) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](linkEndEncodeJson)("source")(_932.source), Data_Argonaut_Combinators[":="](linkEndEncodeJson)("target")(_932.target), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJNumber)("weight")(_932.weight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(_932.itemStyle) ])));
});
var linkDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_712) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_370) {
            return function (_371) {
                return function (_372) {
                    return function (_373) {
                        return {
                            source: _370, 
                            target: _371, 
                            weight: _372, 
                            itemStyle: _373
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](linkEndDecodeJson)(_712)("source")))(Data_Argonaut_Combinators[".?"](linkEndDecodeJson)(_712)("target")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonNumber)(_712)("weight")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Item.itemStyleDecodeJson))(_712)("itemStyle")))(function (_711) {
            return Prelude.pure(Data_Either.applicativeEither)(_711);
        });
    });
});
var forceCategoryEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_929) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(_929.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(_929.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(_929.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(_929.itemStyle) ])));
});
var forceCategoryDefault = {
    name: Data_Maybe.Nothing.value, 
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    itemStyle: Data_Maybe.Nothing.value
};
var forceCategoryDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_708) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_354) {
            return function (_355) {
                return function (_356) {
                    return function (_357) {
                        return {
                            name: _354, 
                            symbol: _355, 
                            symbolSize: _356, 
                            itemStyle: _357
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_708)("name")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolDecodeJson))(_708)("symbol")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolSizeDecodeJson))(_708)("symbolSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Item.itemStyleDecodeJson))(_708)("itemStyle")))(function (_707) {
            return Prelude.pure(Data_Either.applicativeEither)(_707);
        });
    });
});
module.exports = {
    Link: Link, 
    Name: Name, 
    Index: Index, 
    Node: Node, 
    ForceCategory: ForceCategory, 
    nodeDefault: nodeDefault, 
    forceCategoryDefault: forceCategoryDefault, 
    forceCategoryEncodeJson: forceCategoryEncodeJson, 
    forceCategoryDecodeJson: forceCategoryDecodeJson, 
    nodeEncodeJson: nodeEncodeJson, 
    nodeDecodeJson: nodeDecodeJson, 
    linkEndEncodeJson: linkEndEncodeJson, 
    linkEndDecodeJson: linkEndDecodeJson, 
    linkEncodeJson: linkEncodeJson, 
    linkDecodeJson: linkDecodeJson
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","ECharts.Item.Data":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Item.Data/index.js","ECharts.Mark.Line":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Line/index.js","ECharts.Mark.Point":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Point/index.js","ECharts.Style.Item":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Item/index.js","ECharts.Symbol":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Symbol/index.js","ECharts.Tooltip":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Tooltip/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series.Gauge/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Tuple = require("Data.Tuple");
var ECharts_Common = require("ECharts.Common");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Color = require("ECharts.Color");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Style_Text = require("ECharts.Style.Text");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Formatter = require("ECharts.Formatter");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var SplitLine = function (x) {
    return x;
};
var Pointer = function (x) {
    return x;
};
var GaugeDetail = function (x) {
    return x;
};
var splitLineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_925) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_925.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("length")(_925.length), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_925.lineStyle) ])));
});
var splitLineDefault = {
    show: Data_Maybe.Nothing.value, 
    length: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value
};
var splitLineDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_698) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_311) {
            return function (_312) {
                return function (_313) {
                    return {
                        show: _311, 
                        length: _312, 
                        lineStyle: _313
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_698)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_698)("length")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Line.lineStyleDecodeJson))(_698)("lineStyle")))(function (_697) {
            return Prelude.pure(Data_Either.applicativeEither)(_697);
        });
    });
});
var pointerEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_924) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("length")(_924.length), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_924.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_924.color) ])));
});
var pointerDefault = {
    length: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value
};
var pointerDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_696) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_308) {
            return function (_309) {
                return function (_310) {
                    return {
                        length: _308, 
                        width: _309, 
                        color: _310
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_696)("length")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_696)("width")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_696)("color")))(function (_695) {
            return Prelude.pure(Data_Either.applicativeEither)(_695);
        });
    });
});
var gaugeDetailEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_926) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_926.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_926.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_926.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_926.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_926.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("height")(_926.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(ECharts_Common.percentOrPixelEncodeJson)(ECharts_Common.percentOrPixelEncodeJson)))("offsetCenter")(_926.offsetCenter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_926.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_926.textStyle) ])));
});
var gaugeDetailDefault = {
    show: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    offsetCenter: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value
};
var gaugeDetailDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_700) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_314) {
            return function (_315) {
                return function (_316) {
                    return function (_317) {
                        return function (_318) {
                            return function (_319) {
                                return function (_320) {
                                    return function (_321) {
                                        return function (_322) {
                                            return {
                                                show: _314, 
                                                backgroundColor: _315, 
                                                borderWidth: _316, 
                                                borderColor: _317, 
                                                width: _318, 
                                                height: _319, 
                                                offsetCenter: _320, 
                                                formatter: _321, 
                                                textStyle: _322
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_700)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_700)("backgroundColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_700)("borderWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_700)("borderColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_700)("width")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_700)("height")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonTuple(ECharts_Common.percentOrPixelDecodeJson)(ECharts_Common.percentOrPixelDecodeJson)))(_700)("offsetCenter")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Formatter.formatterDecodeJson))(_700)("formatter")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Text.textStyleDecodeJson))(_700)("textStyle")))(function (_699) {
            return Prelude.pure(Data_Either.applicativeEither)(_699);
        });
    });
});
module.exports = {
    GaugeDetail: GaugeDetail, 
    SplitLine: SplitLine, 
    Pointer: Pointer, 
    gaugeDetailDefault: gaugeDetailDefault, 
    splitLineDefault: splitLineDefault, 
    pointerDefault: pointerDefault, 
    pointerEncodeJson: pointerEncodeJson, 
    pointerDecodeJson: pointerDecodeJson, 
    splitLineEncodeJson: splitLineEncodeJson, 
    splitLineDecodeJson: splitLineDecodeJson, 
    gaugeDetailEncodeJson: gaugeDetailEncodeJson, 
    gaugeDetailDecodeJson: gaugeDetailDecodeJson
};

},{"Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","ECharts.Formatter":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Formatter/index.js","ECharts.Style.Line":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Line/index.js","ECharts.Style.Text":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Text/index.js","ECharts.Symbol":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Symbol/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series/foreign.js":[function(require,module,exports){
// module ECharts.Series

exports.setSeriesImpl = function(series, notMerge, chart) {
    return function() {
        return chart.setSeries(series, notMerge);
    };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Array = require("Data.Array");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Function = require("Data.Function");
var ECharts_Utils = require("ECharts.Utils");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Data_Tuple = require("Data.Tuple");
var ECharts_Common = require("ECharts.Common");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Style_Item = require("ECharts.Style.Item");
var ECharts_Mark_Line = require("ECharts.Mark.Line");
var ECharts_Mark_Point = require("ECharts.Mark.Point");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Series_Force = require("ECharts.Series.Force");
var ECharts_Series_Gauge = require("ECharts.Series.Gauge");
var ECharts_Series_EventRiver = require("ECharts.Series.EventRiver");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Title = require("ECharts.Title");
var Data_Foldable = require("Data.Foldable");
var Line = (function () {
    function Line() {

    };
    Line.value = new Line();
    return Line;
})();
var Bar = (function () {
    function Bar() {

    };
    Bar.value = new Bar();
    return Bar;
})();
var Scatter = (function () {
    function Scatter() {

    };
    Scatter.value = new Scatter();
    return Scatter;
})();
var Candlestick = (function () {
    function Candlestick() {

    };
    Candlestick.value = new Candlestick();
    return Candlestick;
})();
var Pie = (function () {
    function Pie() {

    };
    Pie.value = new Pie();
    return Pie;
})();
var Radar = (function () {
    function Radar() {

    };
    Radar.value = new Radar();
    return Radar;
})();
var Chord = (function () {
    function Chord() {

    };
    Chord.value = new Chord();
    return Chord;
})();
var Force = (function () {
    function Force() {

    };
    Force.value = new Force();
    return Force;
})();
var Map = (function () {
    function Map() {

    };
    Map.value = new Map();
    return Map;
})();
var Gauge = (function () {
    function Gauge() {

    };
    Gauge.value = new Gauge();
    return Gauge;
})();
var Funnel = (function () {
    function Funnel() {

    };
    Funnel.value = new Funnel();
    return Funnel;
})();
var EventRiver = (function () {
    function EventRiver() {

    };
    EventRiver.value = new EventRiver();
    return EventRiver;
})();
var LineSeries = (function () {
    function LineSeries(value0) {
        this.value0 = value0;
    };
    LineSeries.create = function (value0) {
        return new LineSeries(value0);
    };
    return LineSeries;
})();
var BarSeries = (function () {
    function BarSeries(value0) {
        this.value0 = value0;
    };
    BarSeries.create = function (value0) {
        return new BarSeries(value0);
    };
    return BarSeries;
})();
var ScatterSeries = (function () {
    function ScatterSeries(value0) {
        this.value0 = value0;
    };
    ScatterSeries.create = function (value0) {
        return new ScatterSeries(value0);
    };
    return ScatterSeries;
})();
var CandlestickSeries = (function () {
    function CandlestickSeries(value0) {
        this.value0 = value0;
    };
    CandlestickSeries.create = function (value0) {
        return new CandlestickSeries(value0);
    };
    return CandlestickSeries;
})();
var PieSeries = (function () {
    function PieSeries(value0) {
        this.value0 = value0;
    };
    PieSeries.create = function (value0) {
        return new PieSeries(value0);
    };
    return PieSeries;
})();
var RadarSeries = (function () {
    function RadarSeries(value0) {
        this.value0 = value0;
    };
    RadarSeries.create = function (value0) {
        return new RadarSeries(value0);
    };
    return RadarSeries;
})();
var ChordSeries = (function () {
    function ChordSeries(value0) {
        this.value0 = value0;
    };
    ChordSeries.create = function (value0) {
        return new ChordSeries(value0);
    };
    return ChordSeries;
})();
var ForceSeries = (function () {
    function ForceSeries(value0) {
        this.value0 = value0;
    };
    ForceSeries.create = function (value0) {
        return new ForceSeries(value0);
    };
    return ForceSeries;
})();
var MapSeries = (function () {
    function MapSeries(value0) {
        this.value0 = value0;
    };
    MapSeries.create = function (value0) {
        return new MapSeries(value0);
    };
    return MapSeries;
})();
var GaugeSeries = (function () {
    function GaugeSeries(value0) {
        this.value0 = value0;
    };
    GaugeSeries.create = function (value0) {
        return new GaugeSeries(value0);
    };
    return GaugeSeries;
})();
var FunnelSeries = (function () {
    function FunnelSeries(value0) {
        this.value0 = value0;
    };
    FunnelSeries.create = function (value0) {
        return new FunnelSeries(value0);
    };
    return FunnelSeries;
})();
var EventRiverSeries = (function () {
    function EventRiverSeries(value0) {
        this.value0 = value0;
    };
    EventRiverSeries.create = function (value0) {
        return new EventRiverSeries(value0);
    };
    return EventRiverSeries;
})();
var universalSeriesDefault = {
    name: Data_Maybe.Nothing.value, 
    tooltip: Data_Maybe.Nothing.value, 
    clickable: Data_Maybe.Nothing.value, 
    itemStyle: Data_Maybe.Nothing.value, 
    markPoint: Data_Maybe.Nothing.value, 
    markLine: Data_Maybe.Nothing.value
};
var universalRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("name")(r.name), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Tooltip.tooltipEncodeJson))("tooltip")(r.tooltip), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("clickable")(r.clickable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("itemStyle")(r.itemStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Mark_Point.markPointEncodeJson))("markPoint")(r.markPoint), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Mark_Line.mlEncodeJson))("markLine")(r.markLine) ];
};
var universalForSeries = function (series) {
    return universalRecEncode((function () {
        if (series instanceof LineSeries) {
            return series.value0.common;
        };
        if (series instanceof BarSeries) {
            return series.value0.common;
        };
        if (series instanceof CandlestickSeries) {
            return series.value0.common;
        };
        if (series instanceof ScatterSeries) {
            return series.value0.common;
        };
        if (series instanceof PieSeries) {
            return series.value0.common;
        };
        if (series instanceof RadarSeries) {
            return series.value0.common;
        };
        if (series instanceof ChordSeries) {
            return series.value0.common;
        };
        if (series instanceof ForceSeries) {
            return series.value0.common;
        };
        if (series instanceof MapSeries) {
            return series.value0.common;
        };
        if (series instanceof GaugeSeries) {
            return series.value0.common;
        };
        if (series instanceof FunnelSeries) {
            return series.value0.common;
        };
        if (series instanceof EventRiverSeries) {
            return series.value0.common;
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Series.purs line 152, column 1 - line 153, column 1: " + [ series.constructor.name ]);
    })());
};
var scatterSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    xAxisIndex: Data_Maybe.Nothing.value, 
    yAxisIndex: Data_Maybe.Nothing.value, 
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    symbolRotate: Data_Maybe.Nothing.value, 
    large: Data_Maybe.Nothing.value, 
    largeThreshold: Data_Maybe.Nothing.value, 
    legendHoverLink: Data_Maybe.Nothing.value
};
var scatterRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("xAxisIndex")(r.xAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("yAxisIndex")(r.yAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(r.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(r.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("symbolRotate")(r.symbolRotate), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("large")(r.large), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("largeThreshold")(r.largeThreshold), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(r.legendHoverLink) ];
};
var radarSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    polarIndex: Data_Maybe.Nothing.value, 
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    symbolRotate: Data_Maybe.Nothing.value, 
    legendHoverLink: Data_Maybe.Nothing.value
};
var radarRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("polarIndex")(r.polarIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(r.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(r.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("symbolRotate")(r.symbolRotate), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(r.legendHoverLink) ];
};
var pieSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    center: Data_Maybe.Nothing.value, 
    radius: Data_Maybe.Nothing.value, 
    startAngle: Data_Maybe.Nothing.value, 
    minAngle: Data_Maybe.Nothing.value, 
    clockWise: Data_Maybe.Nothing.value, 
    roseType: Data_Maybe.Nothing.value, 
    selectedOffset: Data_Maybe.Nothing.value, 
    selectedMode: Data_Maybe.Nothing.value, 
    legendHoverLink: Data_Maybe.Nothing.value
};
var pieRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(ECharts_Common.percentOrPixelEncodeJson)(ECharts_Common.percentOrPixelEncodeJson)))("center")(r.center), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.radiusEncodeJson))("radius")(r.radius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("startAngle")(r.startAngle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("minAngle")(r.minAngle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("clockWise")(r.clockWise), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.roseTypeEncodeJson))("roseType")(r.roseType), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("selectedOffset")(r.selectedOffset), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.selModeEncodeJson))("selectedMode")(r.selectedMode), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(r.legendHoverLink) ];
};
var mapSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    selectedMode: Data_Maybe.Nothing.value, 
    mapType: Data_Maybe.Nothing.value, 
    hoverable: Data_Maybe.Nothing.value, 
    dataRangeHoverLink: Data_Maybe.Nothing.value, 
    mapLocation: Data_Maybe.Nothing.value, 
    mapValueCalculation: Data_Maybe.Nothing.value, 
    mapValuePrecision: Data_Maybe.Nothing.value, 
    showLegendSymbol: Data_Maybe.Nothing.value, 
    roam: Data_Maybe.Nothing.value, 
    scaleLimit: Data_Maybe.Nothing.value, 
    nameMap: Data_Maybe.Nothing.value, 
    textFixed: Data_Maybe.Nothing.value, 
    geoCoord: Data_Maybe.Nothing.value
};
var mapRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.selModeEncodeJson))("selectedMode")(r.selectedMode), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("mapType")(r.mapType), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("hoverable")(r.hoverable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("dataRangeHoverLink")(r.dataRangeHoverLink), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.locationEncodeJson))("mapLocation")(r.mapLocation), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.mapValueCalculationEncodeJson))("mapValueCalculation")(r.mapValueCalculation), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("mapValuePrecision")(r.mapValuePrecision), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showLegendSymbol")(r.showLegendSymbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.roamEncodeJson))("roam")(r.roam), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.minMaxEncodeJson))("scaleLimit")(r.scaleLimit), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonJString)))("nameMap")(r.nameMap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber))))("textFixed")(r.textFixed), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber))))("geoCoord")(r.geoCoord) ];
};
var lineSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    stack: Data_Maybe.Nothing.value, 
    xAxisIndex: Data_Maybe.Nothing.value, 
    yAxisIndex: Data_Maybe.Nothing.value, 
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    symbolRotate: Data_Maybe.Nothing.value, 
    showAllSymbol: Data_Maybe.Nothing.value, 
    smooth: Data_Maybe.Nothing.value, 
    legendHoverLink: Data_Maybe.Nothing.value
};
var lineRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("stack")(r.stack), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("xAxisIndex")(r.xAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("yAxisIndex")(r.yAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(r.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(r.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("symbolRotate")(r.symbolRotate), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showAllSymbol")(r.showAllSymbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("smooth")(r.smooth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(r.legendHoverLink) ];
};
var gaugeSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    center: Data_Maybe.Nothing.value, 
    radius: Data_Maybe.Nothing.value, 
    startAngle: Data_Maybe.Nothing.value, 
    endAngle: Data_Maybe.Nothing.value, 
    min: Data_Maybe.Nothing.value, 
    max: Data_Maybe.Nothing.value, 
    precision: Data_Maybe.Nothing.value, 
    splitNumber: Data_Maybe.Nothing.value, 
    axisLine: Data_Maybe.Nothing.value, 
    axisTick: Data_Maybe.Nothing.value, 
    splitLine: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    detail: Data_Maybe.Nothing.value, 
    pointer: Data_Maybe.Nothing.value, 
    legendHoverLink: Data_Maybe.Nothing.value, 
    axisLabel: Data_Maybe.Nothing.value
};
var gaugeRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber)))("center")(r.center), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.radiusEncodeJson))("radius")(r.radius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("startAngle")(r.startAngle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("endAngle")(r.endAngle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("min")(r.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("max")(r.max), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("precision")(r.precision), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("splitNumber")(r.splitNumber), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisLineEncodeJson))("axisLine")(r.axisLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisTickEncodeJson))("axisTick")(r.axisTick), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Series_Gauge.splitLineEncodeJson))("splitLine")(r.splitLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Title.titleEncodeJson))("title")(r.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Series_Gauge.gaugeDetailEncodeJson))("detail")(r.detail), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Series_Gauge.pointerEncodeJson))("pointer")(r.pointer), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(r.legendHoverLink), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisLabelEncodeJson))("axisLabel")(r.axisLabel) ];
};
var funnelSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    x2: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    y2: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    funnelAlign: Data_Maybe.Nothing.value, 
    min: Data_Maybe.Nothing.value, 
    max: Data_Maybe.Nothing.value, 
    minSize: Data_Maybe.Nothing.value, 
    maxSize: Data_Maybe.Nothing.value, 
    gap: Data_Maybe.Nothing.value, 
    sort: Data_Maybe.Nothing.value, 
    legendHoverLink: Data_Maybe.Nothing.value
};
var funnelRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x")(r.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x2")(r.x2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y")(r.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y2")(r.y2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("width")(r.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("height")(r.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.textAlignEncodeJson))("funnelAlign")(r.funnelAlign), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("min")(r.min), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("max")(r.max), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("minSize")(r.minSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("maxSize")(r.maxSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("gap")(r.gap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.sortEncodeJson))("sort")(r.sort), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(r.legendHoverLink) ];
};
var forceSeriesDefault = {
    categories: Data_Maybe.Nothing.value, 
    nodes: Data_Maybe.Nothing.value, 
    links: Data_Maybe.Nothing.value, 
    matrix: Data_Maybe.Nothing.value, 
    center: Data_Maybe.Nothing.value, 
    size: Data_Maybe.Nothing.value, 
    minRadius: Data_Maybe.Nothing.value, 
    maxRadius: Data_Maybe.Nothing.value, 
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    linkSymbol: Data_Maybe.Nothing.value, 
    linkSymbolSize: Data_Maybe.Nothing.value, 
    scaling: Data_Maybe.Nothing.value, 
    gravity: Data_Maybe.Nothing.value, 
    draggable: Data_Maybe.Nothing.value, 
    large: Data_Maybe.Nothing.value, 
    useWorker: Data_Maybe.Nothing.value, 
    steps: Data_Maybe.Nothing.value, 
    ribbonType: Data_Maybe.Nothing.value
};
var forceRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_Force.forceCategoryEncodeJson)))("categories")(r.categories), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_Force.nodeEncodeJson)))("nodes")(r.nodes), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_Force.linkEncodeJson)))("links")(r.links), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))))("matrix")(r.matrix), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonTuple(ECharts_Common.percentOrPixelEncodeJson)(ECharts_Common.percentOrPixelEncodeJson)))("center")(r.center), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("size")(r.size), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("minRadius")(r.minRadius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("maxRadius")(r.maxRadius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(r.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(r.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("linkSymbol")(r.linkSymbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("linkSymbolSize")(r.linkSymbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("scaling")(r.scaling), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("gravity")(r.gravity), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("draggable")(r.draggable), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("large")(r.large), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("useWorker")(r.useWorker), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("steps")(r.steps), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("ribbonType")(r.ribbonType) ];
};
var eventRiverSeriesDefault = {
    eventList: Data_Maybe.Nothing.value, 
    xAxisIndex: Data_Maybe.Nothing.value, 
    weight: Data_Maybe.Nothing.value, 
    legendHoverLink: Data_Maybe.Nothing.value
};
var eventRiverRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_EventRiver.oneEventEncodeJson)))("eventList")(r.eventList), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("xAxisIndex")(r.xAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("weight")(r.weight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(r.legendHoverLink) ];
};
var decodeScatterSeriesRec = function (o) {
    return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_402) {
        return function (_403) {
            return function (_404) {
                return function (_405) {
                    return function (_406) {
                        return function (_407) {
                            return function (_408) {
                                return function (_409) {
                                    return function (_410) {
                                        return {
                                            data: _402, 
                                            xAxisIndex: _403, 
                                            yAxisIndex: _404, 
                                            symbol: _405, 
                                            symbolSize: _406, 
                                            symbolRotate: _407, 
                                            large: _408, 
                                            largeThreshold: _409, 
                                            legendHoverLink: _410
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Item_Data.itemDataDecodeJson)))(o)("data")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("xAxisIndex")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("yAxisIndex")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolDecodeJson))(o)("symbol")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolSizeDecodeJson))(o)("symbolSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("symbolRotate")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("large")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("largeThreshold")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("legendHoverLink"));
};
var decodeRadarSeriesRec = function (o) {
    return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_427) {
        return function (_428) {
            return function (_429) {
                return function (_430) {
                    return function (_431) {
                        return function (_432) {
                            return {
                                data: _427, 
                                polarIndex: _428, 
                                symbol: _429, 
                                symbolSize: _430, 
                                symbolRotate: _431, 
                                legendHoverLink: _432
                            };
                        };
                    };
                };
            };
        };
    })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Item_Data.itemDataDecodeJson)))(o)("data")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("polarIndex")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolDecodeJson))(o)("symbol")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolSizeDecodeJson))(o)("symbolSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("symbolRotate")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("legendHoverLink"));
};
var decodePieSeriesRec = function (o) {
    return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_417) {
        return function (_418) {
            return function (_419) {
                return function (_420) {
                    return function (_421) {
                        return function (_422) {
                            return function (_423) {
                                return function (_424) {
                                    return function (_425) {
                                        return function (_426) {
                                            return {
                                                data: _417, 
                                                center: _418, 
                                                radius: _419, 
                                                startAngle: _420, 
                                                minAngle: _421, 
                                                clockWise: _422, 
                                                roseType: _423, 
                                                selectedOffset: _424, 
                                                selectedMode: _425, 
                                                legendHoverLink: _426
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Item_Data.itemDataDecodeJson)))(o)("data")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonTuple(ECharts_Common.percentOrPixelDecodeJson)(ECharts_Common.percentOrPixelDecodeJson)))(o)("center")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.radiusDecodeJson))(o)("radius")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("startAngle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("minAngle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("clockWise")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.roseTypeDecodeJson))(o)("roseType")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("selectedOffset")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.selModeDecodeJson))(o)("selectedMode")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("legendHoverLink"));
};
var decodeMapSeriesRec = function (o) {
    return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_468) {
        return function (_469) {
            return function (_470) {
                return function (_471) {
                    return function (_472) {
                        return function (_473) {
                            return function (_474) {
                                return function (_475) {
                                    return function (_476) {
                                        return function (_477) {
                                            return function (_478) {
                                                return function (_479) {
                                                    return function (_480) {
                                                        return function (_481) {
                                                            return {
                                                                data: _468, 
                                                                selectedMode: _469, 
                                                                mapType: _470, 
                                                                hoverable: _471, 
                                                                dataRangeHoverLink: _472, 
                                                                mapLocation: _473, 
                                                                mapValueCalculation: _474, 
                                                                mapValuePrecision: _475, 
                                                                showLegendSymbol: _476, 
                                                                roam: _477, 
                                                                scaleLimit: _478, 
                                                                nameMap: _479, 
                                                                textFixed: _480, 
                                                                geoCoord: _481
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Item_Data.itemDataDecodeJson)))(o)("data")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.selModeDecodeJson))(o)("selectedMode")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(o)("mapType")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("hoverable")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("dataRangeHoverLink")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.locationDecodeJson))(o)("mapLocation")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.mapValueCalculationDecodeJson))(o)("mapValueCalculation")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("mapValuePrecision")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("showLegendSymbol")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.roamDecodeJson))(o)("roam")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.minMaxDecodeJson))(o)("scaleLimit")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonString)))(o)("nameMap")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonTuple(Data_Argonaut_Decode.decodeJsonNumber)(Data_Argonaut_Decode.decodeJsonNumber))))(o)("textFixed")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonTuple(Data_Argonaut_Decode.decodeJsonNumber)(Data_Argonaut_Decode.decodeJsonNumber))))(o)("geoCoord"));
};
var decodeLineRec = function (obj) {
    return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_382) {
        return function (_383) {
            return function (_384) {
                return function (_385) {
                    return function (_386) {
                        return function (_387) {
                            return function (_388) {
                                return function (_389) {
                                    return function (_390) {
                                        return function (_391) {
                                            return {
                                                data: _382, 
                                                stack: _383, 
                                                xAxisIndex: _384, 
                                                yAxisIndex: _385, 
                                                symbol: _386, 
                                                symbolSize: _387, 
                                                symbolRotate: _388, 
                                                showAllSymbol: _389, 
                                                smooth: _390, 
                                                legendHoverLink: _391
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Item_Data.itemDataDecodeJson)))(obj)("data")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(obj)("stack")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(obj)("xAxisIndex")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(obj)("yAxisIndex")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolDecodeJson))(obj)("symbol")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolSizeDecodeJson))(obj)("symbolSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(obj)("symbolRotate")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(obj)("showAllSymbol")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(obj)("smooth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(obj)("legendHoverLink"));
};
var decodeGaugeSeriesRec = function (o) {
    return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_482) {
        return function (_483) {
            return function (_484) {
                return function (_485) {
                    return function (_486) {
                        return function (_487) {
                            return function (_488) {
                                return function (_489) {
                                    return function (_490) {
                                        return function (_491) {
                                            return function (_492) {
                                                return function (_493) {
                                                    return function (_494) {
                                                        return function (_495) {
                                                            return function (_496) {
                                                                return function (_497) {
                                                                    return function (_498) {
                                                                        return {
                                                                            data: _482, 
                                                                            center: _483, 
                                                                            radius: _484, 
                                                                            startAngle: _485, 
                                                                            endAngle: _486, 
                                                                            min: _487, 
                                                                            max: _488, 
                                                                            precision: _489, 
                                                                            splitNumber: _490, 
                                                                            axisLine: _491, 
                                                                            axisTick: _492, 
                                                                            splitLine: _493, 
                                                                            title: _494, 
                                                                            detail: _495, 
                                                                            pointer: _496, 
                                                                            legendHoverLink: _497, 
                                                                            axisLabel: _498
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Item_Data.itemDataDecodeJson)))(o)("data")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonTuple(Data_Argonaut_Decode.decodeJsonNumber)(Data_Argonaut_Decode.decodeJsonNumber)))(o)("center")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.radiusDecodeJson))(o)("radius")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("startAngle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("endAngle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("min")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("max")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("precision")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("splitNumber")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Axis.axisLineDecodeJson))(o)("axisLine")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Axis.axisTickDecodeJson))(o)("axisTick")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Series_Gauge.splitLineDecodeJson))(o)("splitLine")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Title.titleDecodeJson))(o)("title")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Series_Gauge.gaugeDetailDecodeJson))(o)("detail")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Series_Gauge.pointerDecodeJson))(o)("pointer")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("legendHoverLink")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Axis.axisLabelDecodeJson))(o)("axisLabel"));
};
var decodeFunnelSeriesRec = function (o) {
    return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_499) {
        return function (_500) {
            return function (_501) {
                return function (_502) {
                    return function (_503) {
                        return function (_504) {
                            return function (_505) {
                                return function (_506) {
                                    return function (_507) {
                                        return function (_508) {
                                            return function (_509) {
                                                return function (_510) {
                                                    return function (_511) {
                                                        return function (_512) {
                                                            return function (_513) {
                                                                return {
                                                                    data: _499, 
                                                                    x: _500, 
                                                                    x2: _501, 
                                                                    y: _502, 
                                                                    y2: _503, 
                                                                    width: _504, 
                                                                    height: _505, 
                                                                    funnelAlign: _506, 
                                                                    min: _507, 
                                                                    max: _508, 
                                                                    minSize: _509, 
                                                                    maxSize: _510, 
                                                                    gap: _511, 
                                                                    sort: _512, 
                                                                    legendHoverLink: _513
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Item_Data.itemDataDecodeJson)))(o)("data")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(o)("x")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(o)("x2")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(o)("y")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(o)("y2")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(o)("width")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(o)("height")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.textAlignDecodeJson))(o)("funnelAlign")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("min")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("max")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(o)("minSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(o)("maxSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("gap")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.sortDecodeJson))(o)("sort")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("legendHoverLink"));
};
var decodeForceSeriesRec = function (o) {
    return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_449) {
        return function (_450) {
            return function (_451) {
                return function (_452) {
                    return function (_453) {
                        return function (_454) {
                            return function (_455) {
                                return function (_456) {
                                    return function (_457) {
                                        return function (_458) {
                                            return function (_459) {
                                                return function (_460) {
                                                    return function (_461) {
                                                        return function (_462) {
                                                            return function (_463) {
                                                                return function (_464) {
                                                                    return function (_465) {
                                                                        return function (_466) {
                                                                            return function (_467) {
                                                                                return {
                                                                                    categories: _449, 
                                                                                    nodes: _450, 
                                                                                    links: _451, 
                                                                                    matrix: _452, 
                                                                                    center: _453, 
                                                                                    size: _454, 
                                                                                    minRadius: _455, 
                                                                                    maxRadius: _456, 
                                                                                    symbol: _457, 
                                                                                    symbolSize: _458, 
                                                                                    linkSymbol: _459, 
                                                                                    linkSymbolSize: _460, 
                                                                                    scaling: _461, 
                                                                                    gravity: _462, 
                                                                                    draggable: _463, 
                                                                                    large: _464, 
                                                                                    useWorker: _465, 
                                                                                    steps: _466, 
                                                                                    ribbonType: _467
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Series_Force.forceCategoryDecodeJson)))(o)("categories")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Series_Force.nodeDecodeJson)))(o)("nodes")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Series_Force.linkDecodeJson)))(o)("links")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonNumber))))(o)("matrix")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonTuple(ECharts_Common.percentOrPixelDecodeJson)(ECharts_Common.percentOrPixelDecodeJson)))(o)("center")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("size")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("minRadius")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("maxRadius")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolDecodeJson))(o)("symbol")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolSizeDecodeJson))(o)("symbolSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolDecodeJson))(o)("linkSymbol")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolDecodeJson))(o)("linkSymbolSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("scaling")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("gravity")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("draggable")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("large")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("useWorker")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("steps")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("ribbonType"));
};
var decodeEventRiverSeriesRec = function (o) {
    return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_514) {
        return function (_515) {
            return function (_516) {
                return function (_517) {
                    return {
                        eventList: _514, 
                        xAxisIndex: _515, 
                        weight: _516, 
                        legendHoverLink: _517
                    };
                };
            };
        };
    })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Series_EventRiver.oneEventDecodeJson)))(o)("eventList")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("xAxisIndex")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("weight")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("legendHoverLink"));
};
var decodeChordSeriesRec = function (o) {
    return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_433) {
        return function (_434) {
            return function (_435) {
                return function (_436) {
                    return function (_437) {
                        return function (_438) {
                            return function (_439) {
                                return function (_440) {
                                    return function (_441) {
                                        return function (_442) {
                                            return function (_443) {
                                                return function (_444) {
                                                    return function (_445) {
                                                        return function (_446) {
                                                            return function (_447) {
                                                                return function (_448) {
                                                                    return {
                                                                        nodes: _433, 
                                                                        categories: _434, 
                                                                        links: _435, 
                                                                        matrix: _436, 
                                                                        data: _437, 
                                                                        ribbonType: _438, 
                                                                        symbol: _439, 
                                                                        symbolSize: _440, 
                                                                        minRadius: _441, 
                                                                        maxRadius: _442, 
                                                                        showScale: _443, 
                                                                        showScaleText: _444, 
                                                                        padding: _445, 
                                                                        sort: _446, 
                                                                        sortSub: _447, 
                                                                        clockWise: _448
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Series_Force.nodeDecodeJson)))(o)("nodes")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Series_Force.forceCategoryDecodeJson)))(o)("categories")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Series_Force.linkDecodeJson)))(o)("links")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonNumber))))(o)("matrix")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Item_Data.itemDataDecodeJson)))(o)("data")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("ribbonType")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolDecodeJson))(o)("symbol")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolSizeDecodeJson))(o)("symbolSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("minRadius")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("maxRadius")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("showScale")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("showScaleText")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("padding")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.sortDecodeJson))(o)("sort")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.sortDecodeJson))(o)("sortSub")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(o)("clockWise"));
};
var decodeCandleStickSeries = function (o) {
    return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_411) {
        return function (_412) {
            return function (_413) {
                return function (_414) {
                    return function (_415) {
                        return function (_416) {
                            return {
                                data: _411, 
                                xAxisIndex: _412, 
                                yAxisIndex: _413, 
                                barMinHeight: _414, 
                                barWidth: _415, 
                                barMaxWidth: _416
                            };
                        };
                    };
                };
            };
        };
    })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Item_Data.itemDataDecodeJson)))(o)("data")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("xAxisIndex")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("yAxisIndex")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("barMinHeight")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("barWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(o)("barMaxWidth"));
};
var decodeBarRec = function (obj) {
    return Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_392) {
        return function (_393) {
            return function (_394) {
                return function (_395) {
                    return function (_396) {
                        return function (_397) {
                            return function (_398) {
                                return function (_399) {
                                    return function (_400) {
                                        return function (_401) {
                                            return {
                                                data: _392, 
                                                stack: _393, 
                                                xAxisIndex: _394, 
                                                yAxisIndex: _395, 
                                                barGap: _396, 
                                                barCategoryGap: _397, 
                                                barMinHeight: _398, 
                                                barWidth: _399, 
                                                barMaxWidth: _400, 
                                                legendHoverLink: _401
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(ECharts_Item_Data.itemDataDecodeJson)))(obj)("data")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(obj)("stack")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(obj)("xAxisIndex")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(obj)("yAxisIndex")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(obj)("barGap")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(obj)("barCategoryGap")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(obj)("barMinHeight")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(obj)("barWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(obj)("barMaxWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(obj)("legendHoverLink"));
};
var decodeSeries = new Data_Argonaut_Decode.DecodeJson(function (json) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (_723) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_518) {
            return function (_519) {
                return function (_520) {
                    return function (_521) {
                        return function (_522) {
                            return function (_523) {
                                return {
                                    name: _518, 
                                    tooltip: _519, 
                                    clickable: _520, 
                                    itemStyle: _521, 
                                    markPoint: _522, 
                                    markLine: _523
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_723)("name")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Tooltip.tooltipDecodeJson))(_723)("tooltip")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_723)("clickable")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Item.itemStyleDecodeJson))(_723)("itemStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Mark_Point.markPointDecodeJson))(_723)("markPoint")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Mark_Line.mlDecodeJson))(_723)("markLine")))(function (_722) {
            return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(_723)("type"))(function (_721) {
                if (_721 === "line") {
                    return Prelude["<$>"](Data_Either.functorEither)(LineSeries.create)(Prelude["<$>"](Data_Either.functorEither)(function (_524) {
                        return {
                            common: _722, 
                            lineSeries: _524
                        };
                    })(decodeLineRec(_723)));
                };
                if (_721 === "bar") {
                    return Prelude["<$>"](Data_Either.functorEither)(BarSeries.create)(Prelude["<$>"](Data_Either.functorEither)(function (_525) {
                        return {
                            common: _722, 
                            barSeries: _525
                        };
                    })(decodeBarRec(_723)));
                };
                if (_721 === "scatter") {
                    return Prelude["<$>"](Data_Either.functorEither)(ScatterSeries.create)(Prelude["<$>"](Data_Either.functorEither)(function (_526) {
                        return {
                            common: _722, 
                            scatterSeries: _526
                        };
                    })(decodeScatterSeriesRec(_723)));
                };
                if (_721 === "k") {
                    return Prelude["<$>"](Data_Either.functorEither)(CandlestickSeries.create)(Prelude["<$>"](Data_Either.functorEither)(function (_527) {
                        return {
                            common: _722, 
                            candlestickSeries: _527
                        };
                    })(decodeCandleStickSeries(_723)));
                };
                if (_721 === "pie") {
                    return Prelude["<$>"](Data_Either.functorEither)(PieSeries.create)(Prelude["<$>"](Data_Either.functorEither)(function (_528) {
                        return {
                            common: _722, 
                            pieSeries: _528
                        };
                    })(decodePieSeriesRec(_723)));
                };
                if (_721 === "radar") {
                    return Prelude["<$>"](Data_Either.functorEither)(RadarSeries.create)(Prelude["<$>"](Data_Either.functorEither)(function (_529) {
                        return {
                            common: _722, 
                            radarSeries: _529
                        };
                    })(decodeRadarSeriesRec(_723)));
                };
                if (_721 === "chord") {
                    return Prelude["<$>"](Data_Either.functorEither)(ChordSeries.create)(Prelude["<$>"](Data_Either.functorEither)(function (_530) {
                        return {
                            common: _722, 
                            chordSeries: _530
                        };
                    })(decodeChordSeriesRec(_723)));
                };
                if (_721 === "force") {
                    return Prelude["<$>"](Data_Either.functorEither)(ForceSeries.create)(Prelude["<$>"](Data_Either.functorEither)(function (_531) {
                        return {
                            common: _722, 
                            forceSeries: _531
                        };
                    })(decodeForceSeriesRec(_723)));
                };
                if (_721 === "map") {
                    return Prelude["<$>"](Data_Either.functorEither)(MapSeries.create)(Prelude["<$>"](Data_Either.functorEither)(function (_532) {
                        return {
                            common: _722, 
                            mapSeries: _532
                        };
                    })(decodeMapSeriesRec(_723)));
                };
                if (_721 === "gauge") {
                    return Prelude["<$>"](Data_Either.functorEither)(GaugeSeries.create)(Prelude["<$>"](Data_Either.functorEither)(function (_533) {
                        return {
                            common: _722, 
                            gaugeSeries: _533
                        };
                    })(decodeGaugeSeriesRec(_723)));
                };
                if (_721 === "funnel") {
                    return Prelude["<$>"](Data_Either.functorEither)(FunnelSeries.create)(Prelude["<$>"](Data_Either.functorEither)(function (_534) {
                        return {
                            common: _722, 
                            funnelSeries: _534
                        };
                    })(decodeFunnelSeriesRec(_723)));
                };
                if (_721 === "eventRiver") {
                    return Prelude["<$>"](Data_Either.functorEither)(EventRiverSeries.create)(Prelude["<$>"](Data_Either.functorEither)(function (_535) {
                        return {
                            common: _722, 
                            eventRiverSeries: _535
                        };
                    })(decodeEventRiverSeriesRec(_723)));
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Series.purs line 1036, column 1 - line 1067, column 1: " + [ _721.constructor.name ]);
            });
        });
    });
});
var chordSeriesDefault = {
    nodes: Data_Maybe.Nothing.value, 
    categories: Data_Maybe.Nothing.value, 
    links: Data_Maybe.Nothing.value, 
    matrix: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value, 
    ribbonType: Data_Maybe.Nothing.value, 
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    minRadius: Data_Maybe.Nothing.value, 
    maxRadius: Data_Maybe.Nothing.value, 
    showScale: Data_Maybe.Nothing.value, 
    showScaleText: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    sort: Data_Maybe.Nothing.value, 
    sortSub: Data_Maybe.Nothing.value, 
    clockWise: Data_Maybe.Nothing.value
};
var chordRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_Force.nodeEncodeJson)))("nodes")(r.nodes), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_Force.forceCategoryEncodeJson)))("categories")(r.categories), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Series_Force.linkEncodeJson)))("links")(r.links), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))))("matrix")(r.matrix), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("ribbonType")(r.ribbonType), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(r.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(r.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("minRadius")(r.minRadius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("maxRadius")(r.maxRadius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showScale")(r.showScale), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showScaleText")(r.showScaleText), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("padding")(r.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.sortEncodeJson))("sort")(r.sort), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.sortEncodeJson))("sortSub")(r.sortSub), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("clockWise")(r.clockWise) ];
};
var chartTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof Line) {
            return "line";
        };
        if (a instanceof Bar) {
            return "bar";
        };
        if (a instanceof Scatter) {
            return "scatter";
        };
        if (a instanceof Candlestick) {
            return "k";
        };
        if (a instanceof Pie) {
            return "pie";
        };
        if (a instanceof Radar) {
            return "radar";
        };
        if (a instanceof Chord) {
            return "chord";
        };
        if (a instanceof Force) {
            return "force";
        };
        if (a instanceof Map) {
            return "map";
        };
        if (a instanceof Gauge) {
            return "gauge";
        };
        if (a instanceof Funnel) {
            return "funnel";
        };
        if (a instanceof EventRiver) {
            return "eventRiver";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Series.purs line 66, column 1 - line 81, column 1: " + [ a.constructor.name ]);
    })());
});
var typeForSeries = function (series) {
    var getType = function (s) {
        if (s instanceof LineSeries) {
            return Line.value;
        };
        if (s instanceof BarSeries) {
            return Bar.value;
        };
        if (s instanceof CandlestickSeries) {
            return Candlestick.value;
        };
        if (s instanceof ScatterSeries) {
            return Scatter.value;
        };
        if (s instanceof PieSeries) {
            return Pie.value;
        };
        if (s instanceof RadarSeries) {
            return Radar.value;
        };
        if (s instanceof ChordSeries) {
            return Chord.value;
        };
        if (s instanceof ForceSeries) {
            return Force.value;
        };
        if (s instanceof MapSeries) {
            return Map.value;
        };
        if (s instanceof GaugeSeries) {
            return Gauge.value;
        };
        if (s instanceof FunnelSeries) {
            return Funnel.value;
        };
        if (s instanceof EventRiverSeries) {
            return EventRiver.value;
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Series.purs line 109, column 5 - line 125, column 1: " + [ s.constructor.name ]);
    };
    return [ Data_Argonaut_Combinators[":="](chartTypeEncodeJson)("type")(getType(series)) ];
};
var candlestickSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    xAxisIndex: Data_Maybe.Nothing.value, 
    yAxisIndex: Data_Maybe.Nothing.value, 
    barMinHeight: Data_Maybe.Nothing.value, 
    barWidth: Data_Maybe.Nothing.value, 
    barMaxWidth: Data_Maybe.Nothing.value
};
var candlestickRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("xAxisIndex")(r.xAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("yAxisIndex")(r.yAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barMinHeight")(r.barMinHeight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barWidth")(r.barWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barMaxWidth")(r.barMaxWidth) ];
};
var barSeriesDefault = {
    data: Data_Maybe.Nothing.value, 
    stack: Data_Maybe.Nothing.value, 
    xAxisIndex: Data_Maybe.Nothing.value, 
    yAxisIndex: Data_Maybe.Nothing.value, 
    barGap: Data_Maybe.Nothing.value, 
    barCategoryGap: Data_Maybe.Nothing.value, 
    barMinHeight: Data_Maybe.Nothing.value, 
    barWidth: Data_Maybe.Nothing.value, 
    barMaxWidth: Data_Maybe.Nothing.value, 
    legendHoverLink: Data_Maybe.Nothing.value
};
var barRecEncode = function (r) {
    return [ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(ECharts_Item_Data.itemDataEncodeJson)))("data")(r.data), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("stack")(r.stack), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("xAxisIndex")(r.xAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("yAxisIndex")(r.yAxisIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("barGap")(r.barGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("barCategoryGap")(r.barCategoryGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barMinHeight")(r.barMinHeight), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barWidth")(r.barWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barMaxWidth")(r.barMaxWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("legendHoverLink")(r.legendHoverLink) ];
};
var specialForSeries = function (series) {
    if (series instanceof LineSeries) {
        return lineRecEncode(series.value0.lineSeries);
    };
    if (series instanceof BarSeries) {
        return barRecEncode(series.value0.barSeries);
    };
    if (series instanceof ScatterSeries) {
        return scatterRecEncode(series.value0.scatterSeries);
    };
    if (series instanceof CandlestickSeries) {
        return candlestickRecEncode(series.value0.candlestickSeries);
    };
    if (series instanceof PieSeries) {
        return pieRecEncode(series.value0.pieSeries);
    };
    if (series instanceof RadarSeries) {
        return radarRecEncode(series.value0.radarSeries);
    };
    if (series instanceof ChordSeries) {
        return chordRecEncode(series.value0.chordSeries);
    };
    if (series instanceof ForceSeries) {
        return forceRecEncode(series.value0.forceSeries);
    };
    if (series instanceof MapSeries) {
        return mapRecEncode(series.value0.mapSeries);
    };
    if (series instanceof GaugeSeries) {
        return gaugeRecEncode(series.value0.gaugeSeries);
    };
    if (series instanceof FunnelSeries) {
        return funnelRecEncode(series.value0.funnelSeries);
    };
    if (series instanceof EventRiverSeries) {
        return eventRiverRecEncode(series.value0.eventRiverSeries);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Series.purs line 1010, column 1 - line 1011, column 1: " + [ series.constructor.name ]);
};
var encodeSeries = new Data_Argonaut_Encode.EncodeJson(function (series) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)(Data_Array.concat([ universalForSeries(series), typeForSeries(series), specialForSeries(series) ]))));
});
var setSeries = function (series) {
    return function (merge) {
        return function (chart) {
            return $foreign.setSeriesImpl(Prelude["<$>"](Prelude.functorArray)(Prelude["<<<"](Prelude.semigroupoidFn)(ECharts_Utils.unnull)(Data_Argonaut_Encode.encodeJson(encodeSeries)))(series), merge, chart);
        };
    };
};
module.exports = {
    LineSeries: LineSeries, 
    BarSeries: BarSeries, 
    ScatterSeries: ScatterSeries, 
    CandlestickSeries: CandlestickSeries, 
    PieSeries: PieSeries, 
    RadarSeries: RadarSeries, 
    ChordSeries: ChordSeries, 
    ForceSeries: ForceSeries, 
    MapSeries: MapSeries, 
    GaugeSeries: GaugeSeries, 
    FunnelSeries: FunnelSeries, 
    EventRiverSeries: EventRiverSeries, 
    eventRiverSeriesDefault: eventRiverSeriesDefault, 
    funnelSeriesDefault: funnelSeriesDefault, 
    gaugeSeriesDefault: gaugeSeriesDefault, 
    mapSeriesDefault: mapSeriesDefault, 
    candlestickSeriesDefault: candlestickSeriesDefault, 
    forceSeriesDefault: forceSeriesDefault, 
    chordSeriesDefault: chordSeriesDefault, 
    radarSeriesDefault: radarSeriesDefault, 
    pieSeriesDefault: pieSeriesDefault, 
    scatterSeriesDefault: scatterSeriesDefault, 
    barSeriesDefault: barSeriesDefault, 
    lineSeriesDefault: lineSeriesDefault, 
    universalSeriesDefault: universalSeriesDefault, 
    setSeries: setSeries, 
    encodeSeries: encodeSeries, 
    decodeSeries: decodeSeries
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Axis":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Axis/index.js","ECharts.Chart":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Chart/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","ECharts.Item.Data":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Item.Data/index.js","ECharts.Mark.Line":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Line/index.js","ECharts.Mark.Point":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Point/index.js","ECharts.Series.EventRiver":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series.EventRiver/index.js","ECharts.Series.Force":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series.Force/index.js","ECharts.Series.Gauge":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series.Gauge/index.js","ECharts.Style.Item":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Item/index.js","ECharts.Symbol":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Symbol/index.js","ECharts.Title":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Title/index.js","ECharts.Tooltip":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Tooltip/index.js","ECharts.Utils":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Utils/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Area/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Color = require("ECharts.Color");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var AreaStyle = function (x) {
    return x;
};
var areaStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_877) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("color")(_877), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("type")("fill") ])));
});
var areaStyleDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_593) {
        return Prelude["<$>"](Data_Either.functorEither)(AreaStyle)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(_593)("color"));
    });
});
module.exports = {
    AreaStyle: AreaStyle, 
    areaStyleEncodeJson: areaStyleEncodeJson, 
    areaStyleDecodeJson: areaStyleDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Checkpoint/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Maybe = require("Data.Maybe");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Color = require("ECharts.Color");
var ECharts_Axis = require("ECharts.Axis");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var CheckpointStyle = function (x) {
    return x;
};
var checkpointStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_927) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(_927.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(_927.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_927.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_927.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisLabelEncodeJson))("label")(_927.label) ])));
});
var checkpointStyleDefault = {
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    label: Data_Maybe.Nothing.value
};
var checkpointStyleDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_702) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_323) {
            return function (_324) {
                return function (_325) {
                    return function (_326) {
                        return function (_327) {
                            return {
                                symbol: _323, 
                                symbolSize: _324, 
                                color: _325, 
                                borderColor: _326, 
                                label: _327
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolDecodeJson))(_702)("symbol")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolSizeDecodeJson))(_702)("symbolSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_702)("color")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_702)("borderColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Axis.axisLabelDecodeJson))(_702)("label")))(function (_701) {
            return Prelude.pure(Data_Either.applicativeEither)(_701);
        });
    });
});
module.exports = {
    CheckpointStyle: CheckpointStyle, 
    checkpointStyleDefault: checkpointStyleDefault, 
    checkpointStyleEncodeJson: checkpointStyleEncodeJson, 
    checkpointStyleDecodeJson: checkpointStyleDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","ECharts.Axis":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Axis/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Symbol":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Symbol/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Chord/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Color = require("ECharts.Color");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var ChordStyle = function (x) {
    return x;
};
var chordStyleJson = new Data_Argonaut_Encode.EncodeJson(function (_878) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_878.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_878.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_878.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_878.borderColor) ])));
});
var chordStyleDefault = {
    width: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value
};
var chordStyleDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_595) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_56) {
            return function (_57) {
                return function (_58) {
                    return function (_59) {
                        return {
                            width: _56, 
                            color: _57, 
                            borderWidth: _58, 
                            borderColor: _59
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_595)("width")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_595)("color")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_595)("borderWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_595)("borderColor")))(function (_594) {
            return Prelude.pure(Data_Either.applicativeEither)(_594);
        });
    });
});
module.exports = {
    ChordStyle: ChordStyle, 
    chordStyleDefault: chordStyleDefault, 
    chordStyleJson: chordStyleJson, 
    chordStyleDecodeJson: chordStyleDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Item/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Data_Tuple = require("Data.Tuple");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Common = require("ECharts.Common");
var ECharts_Color = require("ECharts.Color");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Style_Area = require("ECharts.Style.Area");
var ECharts_Style_Chord = require("ECharts.Style.Chord");
var ECharts_Style_Node = require("ECharts.Style.Node");
var ECharts_Style_Link = require("ECharts.Style.Link");
var ECharts_Style_Text = require("ECharts.Style.Text");
var Data_Foldable = require("Data.Foldable");
var ItemLabelLine = function (x) {
    return x;
};
var ItemLabel = function (x) {
    return x;
};
var IStyle = function (x) {
    return x;
};
var ItemStyle = function (x) {
    return x;
};
var itemStyleDefault = {
    normal: Data_Maybe.Nothing.value, 
    emphasis: Data_Maybe.Nothing.value
};
var itemLabelLineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_900) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_900.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("length")(_900.length), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_900.lineStyle) ])));
});
var itemLabelLineDefault = {
    show: Data_Maybe.Nothing.value, 
    length: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value
};
var itemLabelLineDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_643) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_189) {
            return function (_190) {
                return function (_191) {
                    return {
                        show: _189, 
                        length: _190, 
                        lineStyle: _191
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_643)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_643)("length")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Line.lineStyleDecodeJson))(_643)("lineStyle")))(function (_642) {
            return Prelude.pure(Data_Either.applicativeEither)(_642);
        });
    });
});
var itemLabelEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_899) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_899.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.labelPositionEncodeJson))("position")(_899.position), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("distance")(_899.distance), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_899.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_899.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("rotate")(_899.rotate) ])));
});
var itemLabelDefault = {
    show: Data_Maybe.Nothing.value, 
    position: Data_Maybe.Nothing.value, 
    distance: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    rotate: Data_Maybe.Nothing.value
};
var itemLabelDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_641) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_183) {
            return function (_184) {
                return function (_185) {
                    return function (_186) {
                        return function (_187) {
                            return function (_188) {
                                return {
                                    show: _183, 
                                    position: _184, 
                                    distance: _185, 
                                    formatter: _186, 
                                    textStyle: _187, 
                                    rotate: _188
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_641)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.labelPositionDecodeJson))(_641)("position")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_641)("distance")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Formatter.formatterDecodeJson))(_641)("formatter")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Text.textStyleDecodeJson))(_641)("textStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_641)("rotate")))(function (_640) {
            return Prelude.pure(Data_Either.applicativeEither)(_640);
        });
    });
});
var istyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_901) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Color.calculableColorEncodeJson))("color")(_901.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_901.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_901.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("barBorderColor")(_901.barBorderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("barBorderWidth")(_901.barBorderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("barBorderRadius")(_901.barBorderRadius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(itemLabelEncodeJson))("label")(_901.label), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(itemLabelLineEncodeJson))("labelLine")(_901.labelLine), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_901.lineStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Area.areaStyleEncodeJson))("areaStyle")(_901.areaStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Chord.chordStyleJson))("chordStyle")(_901.chordStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Node.nodeStyleEncodeJson))("nodeStyle")(_901.nodeStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Link.linkStyleEncodeJson))("linkStyle")(_901.linkStyle) ])));
});
var itemStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_902) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(istyleEncodeJson))("normal")(_902.normal), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(istyleEncodeJson))("emphasis")(_902.emphasis) ])));
});
var istyleDefault = {
    color: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    barBorderColor: Data_Maybe.Nothing.value, 
    barBorderRadius: Data_Maybe.Nothing.value, 
    barBorderWidth: Data_Maybe.Nothing.value, 
    label: Data_Maybe.Nothing.value, 
    labelLine: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value, 
    areaStyle: Data_Maybe.Nothing.value, 
    chordStyle: Data_Maybe.Nothing.value, 
    nodeStyle: Data_Maybe.Nothing.value, 
    linkStyle: Data_Maybe.Nothing.value
};
var istyleDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_645) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_192) {
            return function (_193) {
                return function (_194) {
                    return function (_195) {
                        return function (_196) {
                            return function (_197) {
                                return function (_198) {
                                    return function (_199) {
                                        return function (_200) {
                                            return function (_201) {
                                                return function (_202) {
                                                    return function (_203) {
                                                        return function (_204) {
                                                            return {
                                                                color: _192, 
                                                                borderColor: _193, 
                                                                borderWidth: _194, 
                                                                barBorderColor: _195, 
                                                                barBorderWidth: _196, 
                                                                barBorderRadius: _197, 
                                                                label: _198, 
                                                                labelLine: _199, 
                                                                lineStyle: _200, 
                                                                areaStyle: _201, 
                                                                chordStyle: _202, 
                                                                nodeStyle: _203, 
                                                                linkStyle: _204
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Color.calculableColorDecodeJson))(_645)("color")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_645)("borderColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_645)("borderWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_645)("barBorderColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_645)("barBorderWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.cornerJsonDecode(Data_Argonaut_Decode.decodeJsonNumber)))(_645)("barBorderRadius")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(itemLabelDecodeJson))(_645)("label")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(itemLabelLineDecodeJson))(_645)("labelLine")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Line.lineStyleDecodeJson))(_645)("lineStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Area.areaStyleDecodeJson))(_645)("areaStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Chord.chordStyleDecodeJson))(_645)("chordStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Node.nodeStyleDecodeJson))(_645)("nodeStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Link.linkStyleDecodeJson))(_645)("linkStyle")))(function (_644) {
            return Prelude.pure(Data_Either.applicativeEither)(_644);
        });
    });
});
var itemStyleDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_647) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_205) {
            return function (_206) {
                return {
                    normal: _205, 
                    emphasis: _206
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(istyleDecodeJson))(_647)("normal")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(istyleDecodeJson))(_647)("emphasis")))(function (_646) {
            return Prelude.pure(Data_Either.applicativeEither)(_646);
        });
    });
});
module.exports = {
    ItemStyle: ItemStyle, 
    IStyle: IStyle, 
    ItemLabelLine: ItemLabelLine, 
    ItemLabel: ItemLabel, 
    itemStyleDefault: itemStyleDefault, 
    istyleDefault: istyleDefault, 
    itemLabelLineDefault: itemLabelLineDefault, 
    itemLabelDefault: itemLabelDefault, 
    itemLabelEncodeJson: itemLabelEncodeJson, 
    itemLabelDecodeJson: itemLabelDecodeJson, 
    itemLabelLineEncodeJson: itemLabelLineEncodeJson, 
    itemLabelLineDecodeJson: itemLabelLineDecodeJson, 
    istyleEncodeJson: istyleEncodeJson, 
    istyleDecodeJson: istyleDecodeJson, 
    itemStyleEncodeJson: itemStyleEncodeJson, 
    itemStyleDecodeJson: itemStyleDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","ECharts.Formatter":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Formatter/index.js","ECharts.Style.Area":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Area/index.js","ECharts.Style.Chord":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Chord/index.js","ECharts.Style.Line":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Line/index.js","ECharts.Style.Link":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Link/index.js","ECharts.Style.Node":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Node/index.js","ECharts.Style.Text":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Text/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Line/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Data_Tuple = require("Data.Tuple");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Color = require("ECharts.Color");
var Data_Foldable = require("Data.Foldable");
var Solid = (function () {
    function Solid() {

    };
    Solid.value = new Solid();
    return Solid;
})();
var Dotted = (function () {
    function Dotted() {

    };
    Dotted.value = new Dotted();
    return Dotted;
})();
var Dashed = (function () {
    function Dashed() {

    };
    Dashed.value = new Dashed();
    return Dashed;
})();
var LineStyle = function (x) {
    return x;
};
var linetypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof Solid) {
            return "solid";
        };
        if (a instanceof Dotted) {
            return "dotted";
        };
        if (a instanceof Dashed) {
            return "dashed";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Style/Line.purs line 20, column 1 - line 26, column 1: " + [ a.constructor.name ]);
    })());
});
var linetypeDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_596) {
        if (_596 === "solid") {
            return Prelude.pure(Data_Either.applicativeEither)(Solid.value);
        };
        if (_596 === "dotted") {
            return Prelude.pure(Data_Either.applicativeEither)(Dotted.value);
        };
        if (_596 === "dashed") {
            return Prelude.pure(Data_Either.applicativeEither)(Dashed.value);
        };
        return new Data_Either.Left("incorrect line type");
    });
});
var lineStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_879) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_879.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(linetypeEncodeJson))("type")(_879.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_879.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("shadowColor")(_879.shadowColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("shadowOffsetX")(_879.shadowOffsetX), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("shadowOffsetY")(_879.shadowOffsetY) ])));
});
var lineStyleDefault = {
    color: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    shadowColor: Data_Maybe.Nothing.value, 
    shadowOffsetX: Data_Maybe.Nothing.value, 
    shadowOffsetY: Data_Maybe.Nothing.value
};
var lineStyleDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_598) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_60) {
            return function (_61) {
                return function (_62) {
                    return function (_63) {
                        return function (_64) {
                            return function (_65) {
                                return {
                                    color: _60, 
                                    type: _61, 
                                    width: _62, 
                                    shadowColor: _63, 
                                    shadowOffsetX: _64, 
                                    shadowOffsetY: _65
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_598)("color")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(linetypeDecodeJson))(_598)("type")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_598)("width")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_598)("shadowColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_598)("shadowOffsetX")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_598)("shadowOffsetY")))(function (_597) {
            return Prelude.pure(Data_Either.applicativeEither)(_597);
        });
    });
});
module.exports = {
    LineStyle: LineStyle, 
    Solid: Solid, 
    Dotted: Dotted, 
    Dashed: Dashed, 
    lineStyleDefault: lineStyleDefault, 
    linetypeEncodeJson: linetypeEncodeJson, 
    linetypeDecodeJson: linetypeDecodeJson, 
    lineStyleEncodeJson: lineStyleEncodeJson, 
    lineStyleDecodeJson: lineStyleDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Link/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Data_Tuple = require("Data.Tuple");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Color = require("ECharts.Color");
var Data_Foldable = require("Data.Foldable");
var LTCurve = (function () {
    function LTCurve() {

    };
    LTCurve.value = new LTCurve();
    return LTCurve;
})();
var LTLine = (function () {
    function LTLine() {

    };
    LTLine.value = new LTLine();
    return LTLine;
})();
var LinkStyle = function (x) {
    return x;
};
var linkTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof LTCurve) {
            return "curve";
        };
        if (a instanceof LTLine) {
            return "line";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Style/Link.purs line 19, column 1 - line 25, column 1: " + [ a.constructor.name ]);
    })());
});
var linkTypeDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_599) {
        if (_599 === "curve") {
            return Prelude.pure(Data_Either.applicativeEither)(LTCurve.value);
        };
        if (_599 === "line") {
            return Prelude.pure(Data_Either.applicativeEither)(LTLine.value);
        };
        return new Data_Either.Left("incorrect link type");
    });
});
var linkStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_880) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(linkTypeEncodeJson))("type")(_880.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_880.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("width")(_880.width) ])));
});
var linkStyleDefault = {
    type: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value
};
var linkStyleDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_601) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_66) {
            return function (_67) {
                return function (_68) {
                    return {
                        type: _66, 
                        color: _67, 
                        width: _68
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(linkTypeDecodeJson))(_601)("type")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_601)("color")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_601)("width")))(function (_600) {
            return Prelude.pure(Data_Either.applicativeEither)(_600);
        });
    });
});
module.exports = {
    LinkStyle: LinkStyle, 
    LTCurve: LTCurve, 
    LTLine: LTLine, 
    linkStyleDefault: linkStyleDefault, 
    linkTypeEncodeJson: linkTypeEncodeJson, 
    linkTypeDecodeJson: linkTypeDecodeJson, 
    linkStyleEncodeJson: linkStyleEncodeJson, 
    linkStyleDecodeJson: linkStyleDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Node/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Color = require("ECharts.Color");
var Data_Foldable = require("Data.Foldable");
var Data_Either = require("Data.Either");
var NodeStyle = function (x) {
    return x;
};
var nodeStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_881) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_881.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_881.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_881.borderWidth) ])));
});
var nodeStyleDefault = {
    color: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value
};
var nodeStyleDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_603) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_69) {
            return function (_70) {
                return function (_71) {
                    return {
                        color: _69, 
                        borderColor: _70, 
                        borderWidth: _71
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_603)("color")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_603)("borderColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_603)("borderWidth")))(function (_602) {
            return Prelude.pure(Data_Either.applicativeEither)(_602);
        });
    });
});
module.exports = {
    NodeStyle: NodeStyle, 
    nodeStyleDefault: nodeStyleDefault, 
    nodeStyleEncodeJson: nodeStyleEncodeJson, 
    nodeStyleDecodeJson: nodeStyleDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Text/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Array = require("Data.Array");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var ECharts_Common = require("ECharts.Common");
var ECharts_Color = require("ECharts.Color");
var ECharts_Coords = require("ECharts.Coords");
var Data_Foldable = require("Data.Foldable");
var TBLTop = (function () {
    function TBLTop() {

    };
    TBLTop.value = new TBLTop();
    return TBLTop;
})();
var TBLBottom = (function () {
    function TBLBottom() {

    };
    TBLBottom.value = new TBLBottom();
    return TBLBottom;
})();
var TBLMiddle = (function () {
    function TBLMiddle() {

    };
    TBLMiddle.value = new TBLMiddle();
    return TBLMiddle;
})();
var FWNormal = (function () {
    function FWNormal() {

    };
    FWNormal.value = new FWNormal();
    return FWNormal;
})();
var FWBold = (function () {
    function FWBold() {

    };
    FWBold.value = new FWBold();
    return FWBold;
})();
var FWBolder = (function () {
    function FWBolder() {

    };
    FWBolder.value = new FWBolder();
    return FWBolder;
})();
var FWLighter = (function () {
    function FWLighter() {

    };
    FWLighter.value = new FWLighter();
    return FWLighter;
})();
var FW100 = (function () {
    function FW100() {

    };
    FW100.value = new FW100();
    return FW100;
})();
var FW200 = (function () {
    function FW200() {

    };
    FW200.value = new FW200();
    return FW200;
})();
var FW300 = (function () {
    function FW300() {

    };
    FW300.value = new FW300();
    return FW300;
})();
var FW400 = (function () {
    function FW400() {

    };
    FW400.value = new FW400();
    return FW400;
})();
var FW500 = (function () {
    function FW500() {

    };
    FW500.value = new FW500();
    return FW500;
})();
var FW600 = (function () {
    function FW600() {

    };
    FW600.value = new FW600();
    return FW600;
})();
var FW700 = (function () {
    function FW700() {

    };
    FW700.value = new FW700();
    return FW700;
})();
var FW800 = (function () {
    function FW800() {

    };
    FW800.value = new FW800();
    return FW800;
})();
var FW900 = (function () {
    function FW900() {

    };
    FW900.value = new FW900();
    return FW900;
})();
var FSNormal = (function () {
    function FSNormal() {

    };
    FSNormal.value = new FSNormal();
    return FSNormal;
})();
var FSItalic = (function () {
    function FSItalic() {

    };
    FSItalic.value = new FSItalic();
    return FSItalic;
})();
var FSOblique = (function () {
    function FSOblique() {

    };
    FSOblique.value = new FSOblique();
    return FSOblique;
})();
var TextStyle = function (x) {
    return x;
};
var textStyleDefault = {
    color: Data_Maybe.Nothing.value, 
    decoration: Data_Maybe.Nothing.value, 
    align: Data_Maybe.Nothing.value, 
    baseline: Data_Maybe.Nothing.value, 
    fontFamily: Data_Maybe.Nothing.value, 
    fontSize: Data_Maybe.Nothing.value, 
    fontStyle: Data_Maybe.Nothing.value, 
    fontWeight: Data_Maybe.Nothing.value
};
var textBaselineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof TBLTop) {
            return "top";
        };
        if (a instanceof TBLBottom) {
            return "bottom";
        };
        if (a instanceof TBLMiddle) {
            return "middle";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Style/Text.purs line 26, column 1 - line 32, column 1: " + [ a.constructor.name ]);
    })());
});
var textBaselineDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_604) {
        if (_604 === "top") {
            return Prelude.pure(Data_Either.applicativeEither)(TBLTop.value);
        };
        if (_604 === "bottom") {
            return Prelude.pure(Data_Either.applicativeEither)(TBLBottom.value);
        };
        if (_604 === "middle") {
            return Prelude.pure(Data_Either.applicativeEither)(TBLMiddle.value);
        };
        return new Data_Either.Left("incorrect text base line");
    });
});
var fontWeightEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof FWNormal) {
            return "normal";
        };
        if (a instanceof FWBold) {
            return "bold";
        };
        if (a instanceof FWBolder) {
            return "bolder";
        };
        if (a instanceof FWLighter) {
            return "lighter";
        };
        if (a instanceof FW100) {
            return "100";
        };
        if (a instanceof FW200) {
            return "200";
        };
        if (a instanceof FW300) {
            return "300";
        };
        if (a instanceof FW400) {
            return "400";
        };
        if (a instanceof FW500) {
            return "500";
        };
        if (a instanceof FW600) {
            return "600";
        };
        if (a instanceof FW700) {
            return "700";
        };
        if (a instanceof FW800) {
            return "800";
        };
        if (a instanceof FW900) {
            return "900";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Style/Text.purs line 71, column 1 - line 88, column 1: " + [ a.constructor.name ]);
    })());
});
var fontWeightDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_606) {
        if (_606 === "normal") {
            return Prelude.pure(Data_Either.applicativeEither)(FWNormal.value);
        };
        if (_606 === "bold") {
            return Prelude.pure(Data_Either.applicativeEither)(FWBold.value);
        };
        if (_606 === "bolder") {
            return Prelude.pure(Data_Either.applicativeEither)(FWBolder.value);
        };
        if (_606 === "lighter") {
            return Prelude.pure(Data_Either.applicativeEither)(FWLighter.value);
        };
        if (_606 === "100") {
            return Prelude.pure(Data_Either.applicativeEither)(FW100.value);
        };
        if (_606 === "200") {
            return Prelude.pure(Data_Either.applicativeEither)(FW200.value);
        };
        if (_606 === "300") {
            return Prelude.pure(Data_Either.applicativeEither)(FW300.value);
        };
        if (_606 === "400") {
            return Prelude.pure(Data_Either.applicativeEither)(FW400.value);
        };
        if (_606 === "500") {
            return Prelude.pure(Data_Either.applicativeEither)(FW500.value);
        };
        if (_606 === "600") {
            return Prelude.pure(Data_Either.applicativeEither)(FW600.value);
        };
        if (_606 === "700") {
            return Prelude.pure(Data_Either.applicativeEither)(FW700.value);
        };
        if (_606 === "800") {
            return Prelude.pure(Data_Either.applicativeEither)(FW800.value);
        };
        if (_606 === "900") {
            return Prelude.pure(Data_Either.applicativeEither)(FW900.value);
        };
        return new Data_Either.Left("incorrect font weight");
    });
});
var fontStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof FSNormal) {
            return "normal";
        };
        if (a instanceof FSItalic) {
            return "italic";
        };
        if (a instanceof FSOblique) {
            return "oblique";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Style/Text.purs line 42, column 1 - line 48, column 1: " + [ a.constructor.name ]);
    })());
});
var textStyleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_882) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("color")(_882.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("decoration")(_882.decoration), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.textAlignEncodeJson))("align")(_882.align), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(textBaselineEncodeJson))("baseline")(_882.baseline), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("fontFamily")(_882.fontFamily), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("fontSize")(_882.fontSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(fontStyleEncodeJson))("fontStyle")(_882.fontStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(fontWeightEncodeJson))("fontWeight")(_882.fontWeight) ])));
});
var fontStyleDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_605) {
        if (_605 === "normal") {
            return Prelude.pure(Data_Either.applicativeEither)(FSNormal.value);
        };
        if (_605 === "italic") {
            return Prelude.pure(Data_Either.applicativeEither)(FSItalic.value);
        };
        if (_605 === "oblique") {
            return Prelude.pure(Data_Either.applicativeEither)(FSOblique.value);
        };
        return new Data_Either.Left("incorrect font style");
    });
});
var textStyleDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_608) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_72) {
            return function (_73) {
                return function (_74) {
                    return function (_75) {
                        return function (_76) {
                            return function (_77) {
                                return function (_78) {
                                    return function (_79) {
                                        return {
                                            color: _72, 
                                            decoration: _73, 
                                            align: _74, 
                                            baseline: _75, 
                                            fontFamily: _76, 
                                            fontSize: _77, 
                                            fontStyle: _78, 
                                            fontWeight: _79
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_608)("color")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_608)("decoration")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.textAlignDecodeJson))(_608)("align")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(textBaselineDecodeJson))(_608)("baseline")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_608)("fontFamily")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_608)("fontSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(fontStyleDecodeJson))(_608)("fontStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(fontWeightDecodeJson))(_608)("fontWeight")))(function (_607) {
            return Prelude.pure(Data_Either.applicativeEither)(_607);
        });
    });
});
module.exports = {
    TextStyle: TextStyle, 
    FWNormal: FWNormal, 
    FWBold: FWBold, 
    FWBolder: FWBolder, 
    FWLighter: FWLighter, 
    FW100: FW100, 
    FW200: FW200, 
    FW300: FW300, 
    FW400: FW400, 
    FW500: FW500, 
    FW600: FW600, 
    FW700: FW700, 
    FW800: FW800, 
    FW900: FW900, 
    FSNormal: FSNormal, 
    FSItalic: FSItalic, 
    FSOblique: FSOblique, 
    TBLTop: TBLTop, 
    TBLBottom: TBLBottom, 
    TBLMiddle: TBLMiddle, 
    textStyleDefault: textStyleDefault, 
    textBaselineEncodeJson: textBaselineEncodeJson, 
    textBaselineDecodeJson: textBaselineDecodeJson, 
    fontStyleEncodeJson: fontStyleEncodeJson, 
    fontStyleDecodeJson: fontStyleDecodeJson, 
    fontWeightEncodeJson: fontWeightEncodeJson, 
    fontWeightDecodeJson: fontWeightDecodeJson, 
    textStyleEncodeJson: textStyleEncodeJson, 
    textStyleDecodeJson: textStyleDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Symbol/foreign.js":[function(require,module,exports){
// module ECharts.Symbol

exports.func2json = function(fn) {
    return fn;
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Symbol/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Function = require("Data.Function");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Data_Tuple = require("Data.Tuple");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Item_Value = require("ECharts.Item.Value");
var Size = (function () {
    function Size(value0) {
        this.value0 = value0;
    };
    Size.create = function (value0) {
        return new Size(value0);
    };
    return Size;
})();
var Func = (function () {
    function Func(value0) {
        this.value0 = value0;
    };
    Func.create = function (value0) {
        return new Func(value0);
    };
    return Func;
})();
var Circle = (function () {
    function Circle() {

    };
    Circle.value = new Circle();
    return Circle;
})();
var Rectangle = (function () {
    function Rectangle() {

    };
    Rectangle.value = new Rectangle();
    return Rectangle;
})();
var Triangle = (function () {
    function Triangle() {

    };
    Triangle.value = new Triangle();
    return Triangle;
})();
var Diamond = (function () {
    function Diamond() {

    };
    Diamond.value = new Diamond();
    return Diamond;
})();
var EmptyCircle = (function () {
    function EmptyCircle() {

    };
    EmptyCircle.value = new EmptyCircle();
    return EmptyCircle;
})();
var EmptyRectangle = (function () {
    function EmptyRectangle() {

    };
    EmptyRectangle.value = new EmptyRectangle();
    return EmptyRectangle;
})();
var EmptyTriangle = (function () {
    function EmptyTriangle() {

    };
    EmptyTriangle.value = new EmptyTriangle();
    return EmptyTriangle;
})();
var EmptyDiamond = (function () {
    function EmptyDiamond() {

    };
    EmptyDiamond.value = new EmptyDiamond();
    return EmptyDiamond;
})();
var DblSize = (function () {
    function DblSize(value0) {
        this.value0 = value0;
    };
    DblSize.create = function (value0) {
        return new DblSize(value0);
    };
    return DblSize;
})();
var DblFunc = (function () {
    function DblFunc(value0) {
        this.value0 = value0;
    };
    DblFunc.create = function (value0) {
        return new DblFunc(value0);
    };
    return DblFunc;
})();
var symbolSizeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (ss) {
    if (ss instanceof Size) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(ss.value0);
    };
    if (ss instanceof Func) {
        return $foreign.func2json(Data_Function.mkFn1(ss.value0));
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Symbol.purs line 55, column 1 - line 60, column 1: " + [ ss.constructor.name ]);
});
var symbolSizeDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude["<$>"](Data_Either.functorEither)(Size.create)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonNumber)(j));
});
var symbolDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_658) {
        if (_658 === "circle") {
            return Prelude.pure(Data_Either.applicativeEither)(Circle.value);
        };
        if (_658 === "rectangle") {
            return Prelude.pure(Data_Either.applicativeEither)(Rectangle.value);
        };
        if (_658 === "triangle") {
            return Prelude.pure(Data_Either.applicativeEither)(Triangle.value);
        };
        if (_658 === "diamond") {
            return Prelude.pure(Data_Either.applicativeEither)(Diamond.value);
        };
        if (_658 === "emptyCircle") {
            return Prelude.pure(Data_Either.applicativeEither)(EmptyCircle.value);
        };
        if (_658 === "emptyRectangle") {
            return Prelude.pure(Data_Either.applicativeEither)(EmptyRectangle.value);
        };
        if (_658 === "emptyTriangle") {
            return Prelude.pure(Data_Either.applicativeEither)(EmptyTriangle.value);
        };
        if (_658 === "emptyDiamond") {
            return Prelude.pure(Data_Either.applicativeEither)(EmptyDiamond.value);
        };
        return new Data_Either.Left("incorrect symbol");
    });
});
var encodeJsonSymbol = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof Circle) {
            return "circle";
        };
        if (a instanceof Rectangle) {
            return "rectangle";
        };
        if (a instanceof Triangle) {
            return "triangle";
        };
        if (a instanceof Diamond) {
            return "diamond";
        };
        if (a instanceof EmptyCircle) {
            return "emptyCircle";
        };
        if (a instanceof EmptyRectangle) {
            return "emptyRectangle";
        };
        if (a instanceof EmptyTriangle) {
            return "emptyTriangle";
        };
        if (a instanceof EmptyDiamond) {
            return "emptyDiamond";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Symbol.purs line 27, column 1 - line 38, column 1: " + [ a.constructor.name ]);
    })());
});
var dblSymbolSizeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (ss) {
    if (ss instanceof DblSize) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonTuple(Data_Argonaut_Encode.encodeJsonJNumber)(Data_Argonaut_Encode.encodeJsonJNumber))(ss.value0);
    };
    if (ss instanceof DblFunc) {
        return $foreign.func2json(Data_Function.mkFn1(ss.value0));
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Symbol.purs line 67, column 1 - line 73, column 1: " + [ ss.constructor.name ]);
});
var dblSymbolSizeDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude["<$>"](Data_Either.functorEither)(DblSize.create)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonTuple(Data_Argonaut_Decode.decodeJsonNumber)(Data_Argonaut_Decode.decodeJsonNumber))(j));
});
module.exports = {
    DblSize: DblSize, 
    DblFunc: DblFunc, 
    Size: Size, 
    Func: Func, 
    Circle: Circle, 
    Rectangle: Rectangle, 
    Triangle: Triangle, 
    Diamond: Diamond, 
    EmptyCircle: EmptyCircle, 
    EmptyRectangle: EmptyRectangle, 
    EmptyTriangle: EmptyTriangle, 
    EmptyDiamond: EmptyDiamond, 
    encodeJsonSymbol: encodeJsonSymbol, 
    symbolDecodeJson: symbolDecodeJson, 
    symbolSizeEncodeJson: symbolSizeEncodeJson, 
    symbolSizeDecodeJson: symbolSizeDecodeJson, 
    dblSymbolSizeEncodeJson: dblSymbolSizeEncodeJson, 
    dblSymbolSizeDecodeJson: dblSymbolSizeDecodeJson
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Symbol/foreign.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Item.Data":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Item.Data/index.js","ECharts.Item.Value":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Item.Value/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Timeline/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var ECharts_Style_Item = require("ECharts.Style.Item");
var ECharts_Style_Checkpoint = require("ECharts.Style.Checkpoint");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Color = require("ECharts.Color");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Common = require("ECharts.Common");
var Data_Foldable = require("Data.Foldable");
var TimelineTime = (function () {
    function TimelineTime() {

    };
    TimelineTime.value = new TimelineTime();
    return TimelineTime;
})();
var TimelineNumber = (function () {
    function TimelineNumber() {

    };
    TimelineNumber.value = new TimelineNumber();
    return TimelineNumber;
})();
var TCPLeft = (function () {
    function TCPLeft() {

    };
    TCPLeft.value = new TCPLeft();
    return TCPLeft;
})();
var TCPRight = (function () {
    function TCPRight() {

    };
    TCPRight.value = new TCPRight();
    return TCPRight;
})();
var TCPNone = (function () {
    function TCPNone() {

    };
    TCPNone.value = new TCPNone();
    return TCPNone;
})();
var Timeline = function (x) {
    return x;
};
var timelineTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof TimelineTime) {
            return "time";
        };
        if (a instanceof TimelineNumber) {
            return "number";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Timeline.purs line 22, column 1 - line 27, column 1: " + [ a.constructor.name ]);
    })());
});
var timelineTypeDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_703) {
        if (_703 === "time") {
            return Prelude.pure(Data_Either.applicativeEither)(TimelineTime.value);
        };
        if (_703 === "number") {
            return Prelude.pure(Data_Either.applicativeEither)(TimelineNumber.value);
        };
        return new Data_Either.Left("incorrect timeline");
    });
});
var timelineDefault = {
    show: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value, 
    notMerge: Data_Maybe.Nothing.value, 
    realtime: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    x2: Data_Maybe.Nothing.value, 
    y2: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    controlPosition: Data_Maybe.Nothing.value, 
    autoPlay: Data_Maybe.Nothing.value, 
    loop: Data_Maybe.Nothing.value, 
    playInterval: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value, 
    label: Data_Maybe.Nothing.value, 
    checkpointStyle: Data_Maybe.Nothing.value, 
    controlStyle: Data_Maybe.Nothing.value, 
    symbol: Data_Maybe.Nothing.value, 
    symbolSize: Data_Maybe.Nothing.value, 
    currentIndex: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value
};
var timelineControlPositionEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof TCPNone) {
            return "none";
        };
        if (a instanceof TCPRight) {
            return "right";
        };
        if (a instanceof TCPLeft) {
            return "left";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Timeline.purs line 37, column 1 - line 43, column 1: " + [ a.constructor.name ]);
    })());
});
var timelineEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_928) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_928.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(timelineTypeEncodeJson))("type")(_928.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("notMerge")(_928.notMerge), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("realtime")(_928.realtime), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x")(_928.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("x2")(_928.x2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y")(_928.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("y2")(_928.y2), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("width")(_928.width), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.percentOrPixelEncodeJson))("height")(_928.height), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_928.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_928.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_928.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_928.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(timelineControlPositionEncodeJson))("controlPosition")(_928.controlPosition), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("autoPlay")(_928.autoPlay), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("loop")(_928.loop), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("playInterval")(_928.playInterval), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_928.lineStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Axis.axisLabelEncodeJson))("label")(_928.label), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Checkpoint.checkpointStyleEncodeJson))("checkpointStyle")(_928.checkpointStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Item.itemStyleEncodeJson))("controlStyle")(_928.controlStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.encodeJsonSymbol))("symbol")(_928.symbol), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Symbol.symbolSizeEncodeJson))("symbolSize")(_928.symbolSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("currentIndex")(_928.currentIndex), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("data")(_928.data) ])));
});
var timelineControlPositionDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_704) {
        if (_704 === "none") {
            return Prelude.pure(Data_Either.applicativeEither)(TCPNone.value);
        };
        if (_704 === "right") {
            return Prelude.pure(Data_Either.applicativeEither)(TCPRight.value);
        };
        if (_704 === "left") {
            return Prelude.pure(Data_Either.applicativeEither)(TCPLeft.value);
        };
        return new Data_Either.Left("incorrect timeline control position");
    });
});
var timelineDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_706) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_328) {
            return function (_329) {
                return function (_330) {
                    return function (_331) {
                        return function (_332) {
                            return function (_333) {
                                return function (_334) {
                                    return function (_335) {
                                        return function (_336) {
                                            return function (_337) {
                                                return function (_338) {
                                                    return function (_339) {
                                                        return function (_340) {
                                                            return function (_341) {
                                                                return function (_342) {
                                                                    return function (_343) {
                                                                        return function (_344) {
                                                                            return function (_345) {
                                                                                return function (_346) {
                                                                                    return function (_347) {
                                                                                        return function (_348) {
                                                                                            return function (_349) {
                                                                                                return function (_350) {
                                                                                                    return function (_351) {
                                                                                                        return function (_352) {
                                                                                                            return function (_353) {
                                                                                                                return {
                                                                                                                    show: _328, 
                                                                                                                    type: _329, 
                                                                                                                    notMerge: _330, 
                                                                                                                    realtime: _331, 
                                                                                                                    x: _332, 
                                                                                                                    x2: _333, 
                                                                                                                    y: _334, 
                                                                                                                    y2: _335, 
                                                                                                                    width: _336, 
                                                                                                                    height: _337, 
                                                                                                                    backgroundColor: _338, 
                                                                                                                    borderWidth: _339, 
                                                                                                                    borderColor: _340, 
                                                                                                                    padding: _341, 
                                                                                                                    controlPosition: _342, 
                                                                                                                    autoPlay: _343, 
                                                                                                                    loop: _344, 
                                                                                                                    playInterval: _345, 
                                                                                                                    lineStyle: _346, 
                                                                                                                    label: _347, 
                                                                                                                    checkpointStyle: _348, 
                                                                                                                    controlStyle: _349, 
                                                                                                                    symbol: _350, 
                                                                                                                    symbolSize: _351, 
                                                                                                                    currentIndex: _352, 
                                                                                                                    data: _353
                                                                                                                };
                                                                                                            };
                                                                                                        };
                                                                                                    };
                                                                                                };
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_706)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(timelineTypeDecodeJson))(_706)("type")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_706)("notMerge")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_706)("realtime")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(_706)("x")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(_706)("x2")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(_706)("y")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(_706)("y2")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(_706)("width")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.percentOrPixelDecodeJson))(_706)("height")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_706)("backgroundColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_706)("borderWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_706)("borderColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.cornerJsonDecode(Data_Argonaut_Decode.decodeJsonNumber)))(_706)("padding")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(timelineControlPositionDecodeJson))(_706)("controlPosition")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_706)("autoPlay")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_706)("loop")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_706)("playInterval")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Line.lineStyleDecodeJson))(_706)("lineStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Axis.axisLabelDecodeJson))(_706)("label")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Checkpoint.checkpointStyleDecodeJson))(_706)("checkpointStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Item.itemStyleDecodeJson))(_706)("controlStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolDecodeJson))(_706)("symbol")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Symbol.symbolSizeDecodeJson))(_706)("symbolSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_706)("currentIndex")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonString)))(_706)("data")))(function (_705) {
            return Prelude.pure(Data_Either.applicativeEither)(_705);
        });
    });
});
module.exports = {
    Timeline: Timeline, 
    TCPLeft: TCPLeft, 
    TCPRight: TCPRight, 
    TCPNone: TCPNone, 
    TimelineTime: TimelineTime, 
    TimelineNumber: TimelineNumber, 
    timelineDefault: timelineDefault, 
    timelineTypeEncodeJson: timelineTypeEncodeJson, 
    timelineTypeDecodeJson: timelineTypeDecodeJson, 
    timelineControlPositionEncodeJson: timelineControlPositionEncodeJson, 
    timelineControlPositionDecodeJson: timelineControlPositionDecodeJson, 
    timelineEncodeJson: timelineEncodeJson, 
    timelineDecodeJson: timelineDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","ECharts.Axis":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Axis/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Style.Checkpoint":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Checkpoint/index.js","ECharts.Style.Item":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Item/index.js","ECharts.Style.Line":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Line/index.js","ECharts.Symbol":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Symbol/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Title/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var ECharts_Color = require("ECharts.Color");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Common = require("ECharts.Common");
var ECharts_Style_Text = require("ECharts.Style.Text");
var Data_Foldable = require("Data.Foldable");
var Self = (function () {
    function Self() {

    };
    Self.value = new Self();
    return Self;
})();
var Blank = (function () {
    function Blank() {

    };
    Blank.value = new Blank();
    return Blank;
})();
var Title = function (x) {
    return x;
};
var titleDefault = {
    text: Data_Maybe.Nothing.value, 
    link: Data_Maybe.Nothing.value, 
    subtext: Data_Maybe.Nothing.value, 
    sublink: Data_Maybe.Nothing.value, 
    subtarget: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    textAlign: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    itemGap: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    subtextStyle: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    target: Data_Maybe.Nothing.value
};
var linkTargetEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Core.fromString((function () {
        if (a instanceof Self) {
            return "self";
        };
        if (a instanceof Blank) {
            return "blank";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Title.purs line 20, column 1 - line 25, column 1: " + [ a.constructor.name ]);
    })());
});
var titleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_884) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("text")(_884.text), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("link")(_884.link), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(linkTargetEncodeJson))("target")(_884.target), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("subtext")(_884.subtext), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("sublink")(_884.sublink), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(linkTargetEncodeJson))("subtarget")(_884.subtarget), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_884.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_884.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.textAlignEncodeJson))("textAlign")(_884.textAlign), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_884.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_884.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_884.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_884.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemGap")(_884.itemGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_884.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("subtextStyle")(_884.subtextStyle) ])));
});
var linkTargetDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_609) {
        if (_609 === "self") {
            return Prelude.pure(Data_Either.applicativeEither)(Self.value);
        };
        if (_609 === "blank") {
            return Prelude.pure(Data_Either.applicativeEither)(Blank.value);
        };
        return new Data_Either.Left("incorrect link target");
    });
});
var titleDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_611) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_80) {
            return function (_81) {
                return function (_82) {
                    return function (_83) {
                        return function (_84) {
                            return function (_85) {
                                return function (_86) {
                                    return function (_87) {
                                        return function (_88) {
                                            return function (_89) {
                                                return function (_90) {
                                                    return function (_91) {
                                                        return function (_92) {
                                                            return function (_93) {
                                                                return function (_94) {
                                                                    return function (_95) {
                                                                        return {
                                                                            text: _80, 
                                                                            link: _81, 
                                                                            target: _82, 
                                                                            subtext: _83, 
                                                                            sublink: _84, 
                                                                            subtarget: _85, 
                                                                            x: _86, 
                                                                            y: _87, 
                                                                            textAlign: _88, 
                                                                            backgroundColor: _89, 
                                                                            borderColor: _90, 
                                                                            borderWidth: _91, 
                                                                            padding: _92, 
                                                                            itemGap: _93, 
                                                                            textStyle: _94, 
                                                                            subtextStyle: _95
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_611)("text")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_611)("link")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(linkTargetDecodeJson))(_611)("target")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_611)("subtext")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_611)("sublink")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(linkTargetDecodeJson))(_611)("subtarget")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.xPosDecodeJson))(_611)("x")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.yPosDecodeJson))(_611)("y")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.textAlignDecodeJson))(_611)("textAlign")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_611)("backgroundColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_611)("borderColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_611)("borderWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.cornerJsonDecode(Data_Argonaut_Decode.decodeJsonNumber)))(_611)("padding")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_611)("itemGap")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Text.textStyleDecodeJson))(_611)("textStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Text.textStyleDecodeJson))(_611)("subtextStyle")))(function (_610) {
            return Prelude.pure(Data_Either.applicativeEither)(_610);
        });
    });
});
module.exports = {
    Title: Title, 
    Self: Self, 
    Blank: Blank, 
    titleDefault: titleDefault, 
    linkTargetEncodeJson: linkTargetEncodeJson, 
    linkTargetDecodeJson: linkTargetDecodeJson, 
    titleEncodeJson: titleEncodeJson, 
    titleDecodeJson: titleDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","ECharts.Style.Text":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Text/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Toolbox/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var ECharts_Color = require("ECharts.Color");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Common = require("ECharts.Common");
var ECharts_Style_Text = require("ECharts.Style.Text");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Image = require("ECharts.Image");
var Data_Foldable = require("Data.Foldable");
var SaveAsImageFeature = function (x) {
    return x;
};
var RestoreFeature = function (x) {
    return x;
};
var MarkFeatureTitle = function (x) {
    return x;
};
var MarkFeature = function (x) {
    return x;
};
var MagicLine = (function () {
    function MagicLine() {

    };
    MagicLine.value = new MagicLine();
    return MagicLine;
})();
var MagicBar = (function () {
    function MagicBar() {

    };
    MagicBar.value = new MagicBar();
    return MagicBar;
})();
var MagicStack = (function () {
    function MagicStack() {

    };
    MagicStack.value = new MagicStack();
    return MagicStack;
})();
var MagicTiled = (function () {
    function MagicTiled() {

    };
    MagicTiled.value = new MagicTiled();
    return MagicTiled;
})();
var MagicForce = (function () {
    function MagicForce() {

    };
    MagicForce.value = new MagicForce();
    return MagicForce;
})();
var MagicChord = (function () {
    function MagicChord() {

    };
    MagicChord.value = new MagicChord();
    return MagicChord;
})();
var MagicPie = (function () {
    function MagicPie() {

    };
    MagicPie.value = new MagicPie();
    return MagicPie;
})();
var MagicFunnel = (function () {
    function MagicFunnel() {

    };
    MagicFunnel.value = new MagicFunnel();
    return MagicFunnel;
})();
var MagicTypeFeature = function (x) {
    return x;
};
var DataZoomFeatureTitle = function (x) {
    return x;
};
var DataZoomFeature = function (x) {
    return x;
};
var DataViewFeature = function (x) {
    return x;
};
var Feature = function (x) {
    return x;
};
var Toolbox = function (x) {
    return x;
};
var toolboxDefault = {
    show: Data_Maybe.Nothing.value, 
    orient: Data_Maybe.Nothing.value, 
    x: Data_Maybe.Nothing.value, 
    y: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    itemGap: Data_Maybe.Nothing.value, 
    itemSize: Data_Maybe.Nothing.value, 
    color: Data_Maybe.Nothing.value, 
    disableColor: Data_Maybe.Nothing.value, 
    effectiveColor: Data_Maybe.Nothing.value, 
    showTitle: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    feature: Data_Maybe.Nothing.value
};
var saveAsImageFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value, 
    lang: Data_Maybe.Nothing.value
};
var saveAsImageEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_887) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_887.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("title")(_887.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Image.encodeImg))("type")(_887.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("lang")(_887.lang) ])));
});
var saveAsImageDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_617) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_118) {
            return function (_119) {
                return function (_120) {
                    return function (_121) {
                        return {
                            show: _118, 
                            title: _119, 
                            type: _120, 
                            lang: _121
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_617)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_617)("title")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Image.decodeImg))(_617)("type")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonString)))(_617)("lang")))(function (_616) {
            return Prelude.pure(Data_Either.applicativeEither)(_616);
        });
    });
});
var restoreFeatureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_888) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_888.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("title")(_888.title) ])));
});
var restoreFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value
};
var restoreFeatureDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_619) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_122) {
            return function (_123) {
                return {
                    show: _122, 
                    title: _123
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_619)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_619)("title")))(function (_618) {
            return Prelude.pure(Data_Either.applicativeEither)(_618);
        });
    });
});
var mftitleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_892) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("mark")(_892.mark), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("markUndo")(_892.markUndo), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("markClear")(_892.markUndo) ])));
});
var mftitleDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_627) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_132) {
            return function (_133) {
                return function (_134) {
                    return {
                        mark: _132, 
                        markUndo: _133, 
                        markClear: _134
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_627)("mark")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(_627)("markUndo")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(_627)("markClear")))(function (_626) {
            return Prelude.pure(Data_Either.applicativeEither)(_626);
        });
    });
});
var markFeatureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_893) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_893.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(mftitleEncodeJson))("title")(_893.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_893.lineStyle) ])));
});
var markFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value
};
var markFeatureDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_629) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_135) {
            return function (_136) {
                return function (_137) {
                    return {
                        show: _135, 
                        title: _136, 
                        lineStyle: _137
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_629)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(mftitleDecodeJson))(_629)("title")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Line.lineStyleDecodeJson))(_629)("lineStyle")))(function (_628) {
            return Prelude.pure(Data_Either.applicativeEither)(_628);
        });
    });
});
var magicTypeFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    option: Data_Maybe.Nothing.value, 
    type: Data_Maybe.Nothing.value
};
var magicTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof MagicLine) {
            return "line";
        };
        if (a instanceof MagicBar) {
            return "bar";
        };
        if (a instanceof MagicStack) {
            return "stack";
        };
        if (a instanceof MagicTiled) {
            return "tiled";
        };
        if (a instanceof MagicForce) {
            return "force";
        };
        if (a instanceof MagicChord) {
            return "chord";
        };
        if (a instanceof MagicPie) {
            return "pie";
        };
        if (a instanceof MagicFunnel) {
            return "funnel";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Toolbox.purs line 396, column 1 - line 407, column 1: " + [ a.constructor.name ]);
    })());
});
var magicTypeFeatureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_894) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_894.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeStrMap(Data_Argonaut_Encode.encodeJsonJString)))("title")(_894.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJson))("option")(_894.option), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(magicTypeEncodeJson)))("type")(_894.type) ])));
});
var magicTypeDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(j))(function (_630) {
        if (_630 === "line") {
            return Prelude.pure(Data_Either.applicativeEither)(MagicLine.value);
        };
        if (_630 === "bar") {
            return Prelude.pure(Data_Either.applicativeEither)(MagicBar.value);
        };
        if (_630 === "stack") {
            return Prelude.pure(Data_Either.applicativeEither)(MagicStack.value);
        };
        if (_630 === "tiled") {
            return Prelude.pure(Data_Either.applicativeEither)(MagicTiled.value);
        };
        if (_630 === "force") {
            return Prelude.pure(Data_Either.applicativeEither)(MagicForce.value);
        };
        if (_630 === "chord") {
            return Prelude.pure(Data_Either.applicativeEither)(MagicChord.value);
        };
        if (_630 === "pie") {
            return Prelude.pure(Data_Either.applicativeEither)(MagicPie.value);
        };
        if (_630 === "funnel") {
            return Prelude.pure(Data_Either.applicativeEither)(MagicFunnel.value);
        };
        return new Data_Either.Left("incorrect magic type");
    });
});
var magicTypeFeatureDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_632) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_138) {
            return function (_139) {
                return function (_140) {
                    return function (_141) {
                        return {
                            show: _138, 
                            title: _139, 
                            option: _140, 
                            type: _141
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_632)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonString)))(_632)("title")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonJson))(_632)("option")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(magicTypeDecodeJson)))(_632)("type")))(function (_631) {
            return Prelude.pure(Data_Either.applicativeEither)(_631);
        });
    });
});
var featureDefault = {
    mark: Data_Maybe.Nothing.value, 
    dataZoom: Data_Maybe.Nothing.value, 
    dataView: Data_Maybe.Nothing.value, 
    magicType: Data_Maybe.Nothing.value, 
    restore: Data_Maybe.Nothing.value, 
    saveAsImage: Data_Maybe.Nothing.value
};
var datazoomTitleEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_889) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("dataZoom")(_889.dataZoom), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("dataZoomReset")(_889.dataZoomReset) ])));
});
var datazoomTitleDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_621) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_124) {
            return function (_125) {
                return {
                    dataZoom: _124, 
                    dataZoomReset: _125
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(_621)("dataZoom")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(_621)("dataZoomReset")))(function (_620) {
            return Prelude.pure(Data_Either.applicativeEither)(_620);
        });
    });
});
var dataZoomFeatureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_890) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_890.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(datazoomTitleEncodeJson))("title")(_890.title) ])));
});
var dataZoomFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value
};
var dataZoomFeatureDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_623) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_126) {
            return function (_127) {
                return {
                    show: _126, 
                    title: _127
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_623)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(datazoomTitleDecodeJson))(_623)("title")))(function (_622) {
            return Prelude.pure(Data_Either.applicativeEither)(_622);
        });
    });
});
var dataViewFeatureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_891) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_891.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("title")(_891.title), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("readOnly")(_891.readOnly), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("lang")(_891.lang) ])));
});
var featureEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_886) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(markFeatureEncodeJson))("mark")(_886.mark), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(dataZoomFeatureEncodeJson))("dataZoom")(_886.dataZoom), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(dataViewFeatureEncodeJson))("dataView")(_886.dataView), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(magicTypeFeatureEncodeJson))("magicType")(_886.magicType), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(restoreFeatureEncodeJson))("restore")(_886.restore), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(saveAsImageEncodeJson))("saveAsImage")(_886.saveAsImage) ])));
});
var toolboxEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_885) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_885.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.orientEncodeJson))("orient")(_885.orient), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.xPosEncodeJson))("x")(_885.x), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Coords.yPosEncodeJson))("y")(_885.y), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_885.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_885.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_885.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_885.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemGap")(_885.itemGap), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("itemSize")(_885.itemSize), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString)))("color")(_885.color), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("disableColor")(_885.disableColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("effectiveColor")(_885.effectiveColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showTitle")(_885.showTitle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_885.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(featureEncodeJson))("feature")(_885.feature) ])));
});
var dataViewFeatureDefault = {
    show: Data_Maybe.Nothing.value, 
    title: Data_Maybe.Nothing.value, 
    readOnly: Data_Maybe.Nothing.value, 
    lang: Data_Maybe.Nothing.value
};
var dataViewFeatureDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_625) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_128) {
            return function (_129) {
                return function (_130) {
                    return function (_131) {
                        return {
                            show: _128, 
                            title: _129, 
                            readOnly: _130, 
                            lang: _131
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_625)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_625)("title")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_625)("readOnly")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonString)))(_625)("lang")))(function (_624) {
            return Prelude.pure(Data_Either.applicativeEither)(_624);
        });
    });
});
var featureDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_615) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_112) {
            return function (_113) {
                return function (_114) {
                    return function (_115) {
                        return function (_116) {
                            return function (_117) {
                                return {
                                    mark: _112, 
                                    dataZoom: _113, 
                                    dataView: _114, 
                                    magicType: _115, 
                                    restore: _116, 
                                    saveAsImage: _117
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(markFeatureDecodeJson))(_615)("mark")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(dataZoomFeatureDecodeJson))(_615)("dataZoom")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(dataViewFeatureDecodeJson))(_615)("dataView")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(magicTypeFeatureDecodeJson))(_615)("magicType")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(restoreFeatureDecodeJson))(_615)("restore")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(saveAsImageDecodeJson))(_615)("saveAsImage")))(function (_614) {
            return Prelude.pure(Data_Either.applicativeEither)(_614);
        });
    });
});
var toolboxDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (j) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(j))(function (_613) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_96) {
            return function (_97) {
                return function (_98) {
                    return function (_99) {
                        return function (_100) {
                            return function (_101) {
                                return function (_102) {
                                    return function (_103) {
                                        return function (_104) {
                                            return function (_105) {
                                                return function (_106) {
                                                    return function (_107) {
                                                        return function (_108) {
                                                            return function (_109) {
                                                                return function (_110) {
                                                                    return function (_111) {
                                                                        return {
                                                                            show: _96, 
                                                                            orient: _97, 
                                                                            x: _98, 
                                                                            y: _99, 
                                                                            backgroundColor: _100, 
                                                                            borderColor: _101, 
                                                                            borderWidth: _102, 
                                                                            padding: _103, 
                                                                            itemGap: _104, 
                                                                            itemSize: _105, 
                                                                            color: _106, 
                                                                            disableColor: _107, 
                                                                            effectiveColor: _108, 
                                                                            showTitle: _109, 
                                                                            textStyle: _110, 
                                                                            feature: _111
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_613)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.orientDecodeJson))(_613)("orient")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.xPosDecodeJson))(_613)("x")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Coords.yPosDecodeJson))(_613)("y")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_613)("backgroundColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_613)("borderColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_613)("borderWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.cornerJsonDecode(Data_Argonaut_Decode.decodeJsonNumber)))(_613)("padding")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_613)("itemGap")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_613)("itemSize")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonString)))(_613)("color")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_613)("disableColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_613)("effectiveColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_613)("showTitle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Text.textStyleDecodeJson))(_613)("textStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(featureDecodeJson))(_613)("feature")))(function (_612) {
            return Prelude.pure(Data_Either.applicativeEither)(_612);
        });
    });
});
module.exports = {
    MagicTypeFeature: MagicTypeFeature, 
    MagicLine: MagicLine, 
    MagicBar: MagicBar, 
    MagicStack: MagicStack, 
    MagicTiled: MagicTiled, 
    MagicForce: MagicForce, 
    MagicChord: MagicChord, 
    MagicPie: MagicPie, 
    MagicFunnel: MagicFunnel, 
    MarkFeature: MarkFeature, 
    MarkFeatureTitle: MarkFeatureTitle, 
    DataViewFeature: DataViewFeature, 
    DataZoomFeature: DataZoomFeature, 
    DataZoomFeatureTitle: DataZoomFeatureTitle, 
    RestoreFeature: RestoreFeature, 
    SaveAsImageFeature: SaveAsImageFeature, 
    Feature: Feature, 
    Toolbox: Toolbox, 
    magicTypeFeatureDefault: magicTypeFeatureDefault, 
    markFeatureDefault: markFeatureDefault, 
    dataViewFeatureDefault: dataViewFeatureDefault, 
    dataZoomFeatureDefault: dataZoomFeatureDefault, 
    restoreFeatureDefault: restoreFeatureDefault, 
    saveAsImageFeatureDefault: saveAsImageFeatureDefault, 
    featureDefault: featureDefault, 
    toolboxDefault: toolboxDefault, 
    toolboxEncodeJson: toolboxEncodeJson, 
    toolboxDecodeJson: toolboxDecodeJson, 
    featureEncodeJson: featureEncodeJson, 
    featureDecodeJson: featureDecodeJson, 
    saveAsImageEncodeJson: saveAsImageEncodeJson, 
    saveAsImageDecodeJson: saveAsImageDecodeJson, 
    restoreFeatureEncodeJson: restoreFeatureEncodeJson, 
    restoreFeatureDecodeJson: restoreFeatureDecodeJson, 
    datazoomTitleEncodeJson: datazoomTitleEncodeJson, 
    datazoomTitleDecodeJson: datazoomTitleDecodeJson, 
    dataZoomFeatureEncodeJson: dataZoomFeatureEncodeJson, 
    dataZoomFeatureDecodeJson: dataZoomFeatureDecodeJson, 
    dataViewFeatureEncodeJson: dataViewFeatureEncodeJson, 
    dataViewFeatureDecodeJson: dataViewFeatureDecodeJson, 
    mftitleEncodeJson: mftitleEncodeJson, 
    mftitleDecodeJson: mftitleDecodeJson, 
    markFeatureEncodeJson: markFeatureEncodeJson, 
    markFeatureDecodeJson: markFeatureDecodeJson, 
    magicTypeEncodeJson: magicTypeEncodeJson, 
    magicTypeDecodeJson: magicTypeDecodeJson, 
    magicTypeFeatureEncodeJson: magicTypeFeatureEncodeJson, 
    magicTypeFeatureDecodeJson: magicTypeFeatureDecodeJson
};

},{"Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","ECharts.Image":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Image/index.js","ECharts.Style.Line":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Line/index.js","ECharts.Style.Text":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Text/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Tooltip/foreign.js":[function(require,module,exports){
// module ECharts.Tooltip

exports.func2json = function(fn) {
    return fn;
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Tooltip/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Argonaut_Encode = require("Data.Argonaut.Encode");
var Prelude = require("Prelude");
var Data_Argonaut_Decode = require("Data.Argonaut.Decode");
var Data_Function = require("Data.Function");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Data_Argonaut_Combinators = require("Data.Argonaut.Combinators");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var ECharts_Common = require("ECharts.Common");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_Color = require("ECharts.Color");
var ECharts_Style_Text = require("ECharts.Style.Text");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Style_Area = require("ECharts.Style.Area");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Utils = require("ECharts.Utils");
var Data_Foldable = require("Data.Foldable");
var TriggerItem = (function () {
    function TriggerItem() {

    };
    TriggerItem.value = new TriggerItem();
    return TriggerItem;
})();
var TriggerAxis = (function () {
    function TriggerAxis() {

    };
    TriggerAxis.value = new TriggerAxis();
    return TriggerAxis;
})();
var Fixed = (function () {
    function Fixed(value0) {
        this.value0 = value0;
    };
    Fixed.create = function (value0) {
        return new Fixed(value0);
    };
    return Fixed;
})();
var FuncPos = (function () {
    function FuncPos(value0) {
        this.value0 = value0;
    };
    FuncPos.create = function (value0) {
        return new FuncPos(value0);
    };
    return FuncPos;
})();
var LinePointer = (function () {
    function LinePointer() {

    };
    LinePointer.value = new LinePointer();
    return LinePointer;
})();
var CrossPointer = (function () {
    function CrossPointer() {

    };
    CrossPointer.value = new CrossPointer();
    return CrossPointer;
})();
var ShadowPointer = (function () {
    function ShadowPointer() {

    };
    ShadowPointer.value = new ShadowPointer();
    return ShadowPointer;
})();
var NonePointer = (function () {
    function NonePointer() {

    };
    NonePointer.value = new NonePointer();
    return NonePointer;
})();
var TooltipAxisPointer = function (x) {
    return x;
};
var Tooltip = function (x) {
    return x;
};
var tooltipTriggerEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_903) {
    if (_903 instanceof TriggerItem) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("item");
    };
    if (_903 instanceof TriggerAxis) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)("axis");
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Tooltip.purs line 35, column 1 - line 39, column 1: " + [ _903.constructor.name ]);
});
var tooltipTriggerDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (json) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(json))(function (_648) {
        if (_648 === "item") {
            return Prelude.pure(Data_Either.applicativeEither)(TriggerItem.value);
        };
        if (_648 === "axis") {
            return Prelude.pure(Data_Either.applicativeEither)(TriggerAxis.value);
        };
        return Data_Either.Left.create("incorrect tooltip trigger");
    });
});
var tooltipPositionEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_904) {
    if (_904 instanceof Fixed) {
        return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJNumber))(_904.value0);
    };
    if (_904 instanceof FuncPos) {
        return $foreign.func2json(Data_Function.mkFn1(_904.value0));
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Tooltip.purs line 52, column 1 - line 56, column 1: " + [ _904.constructor.name ]);
});
var tooltipPositionDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (nums) {
    return Prelude["<$>"](Data_Either.functorEither)(Fixed.create)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonNumber))(nums));
});
var tooltipDefault = {
    show: Data_Maybe.Nothing.value, 
    showContent: Data_Maybe.Nothing.value, 
    trigger: Data_Maybe.Nothing.value, 
    position: Data_Maybe.Nothing.value, 
    formatter: Data_Maybe.Nothing.value, 
    islandFormatter: Data_Maybe.Nothing.value, 
    showDelay: Data_Maybe.Nothing.value, 
    hideDelay: Data_Maybe.Nothing.value, 
    transitionDuration: Data_Maybe.Nothing.value, 
    backgroundColor: Data_Maybe.Nothing.value, 
    borderColor: Data_Maybe.Nothing.value, 
    borderRadius: Data_Maybe.Nothing.value, 
    borderWidth: Data_Maybe.Nothing.value, 
    padding: Data_Maybe.Nothing.value, 
    axisPointer: Data_Maybe.Nothing.value, 
    textStyle: Data_Maybe.Nothing.value, 
    enterable: Data_Maybe.Nothing.value
};
var tooltipAxisPointerTypeEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (a) {
    return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)((function () {
        if (a instanceof LinePointer) {
            return "line";
        };
        if (a instanceof CrossPointer) {
            return "cross";
        };
        if (a instanceof ShadowPointer) {
            return "shadow";
        };
        if (a instanceof NonePointer) {
            return "none";
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-echarts/src/ECharts/Tooltip.purs line 62, column 1 - line 69, column 1: " + [ a.constructor.name ]);
    })());
});
var tooltipAxisPointerEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_905) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(tooltipAxisPointerTypeEncodeJson))("type")(_905.type), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("lineStyle")(_905.lineStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Line.lineStyleEncodeJson))("crossStyle")(_905.crossStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Area.areaStyleEncodeJson))("shadowStyle")(_905.shadowStyle) ])));
});
var tooltipEncodeJson = new Data_Argonaut_Encode.EncodeJson(function (_906) {
    return Data_Argonaut_Core.fromObject(Data_StrMap.fromList(Data_List.toList(Data_Foldable.foldableArray)([ Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("show")(_906.show), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("showContent")(_906.showContent), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(tooltipTriggerEncodeJson))("trigger")(_906.trigger), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(tooltipPositionEncodeJson))("position")(_906.position), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("formatter")(_906.formatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Formatter.formatterEncodeJson))("islandFormatter")(_906.islandFormatter), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("showDelay")(_906.showDelay), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("hideDelay")(_906.hideDelay), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("transitionDuration")(_906.transitionDuration), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("backgroundColor")(_906.backgroundColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))("borderColor")(_906.borderColor), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderRadius")(_906.borderRadius), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJNumber))("borderWidth")(_906.borderWidth), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Common.cornerJsonEncode(Data_Argonaut_Encode.encodeJsonJNumber)))("padding")(_906.padding), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(tooltipAxisPointerEncodeJson))("axisPointer")(_906.axisPointer), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(ECharts_Style_Text.textStyleEncodeJson))("textStyle")(_906.textStyle), Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJBoolean))("enterable")(_906.enterable) ])));
});
var tooltipAxisPointerDefault = {
    type: Data_Maybe.Nothing.value, 
    lineStyle: Data_Maybe.Nothing.value, 
    crossStyle: Data_Maybe.Nothing.value, 
    shadowStyle: Data_Maybe.Nothing.value
};
var tooltiopAxisPointerTypeDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (json) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeJsonString)(json))(function (_649) {
        if (_649 === "line") {
            return Prelude.pure(Data_Either.applicativeEither)(LinePointer.value);
        };
        if (_649 === "cross") {
            return Prelude.pure(Data_Either.applicativeEither)(CrossPointer.value);
        };
        if (_649 === "shadow") {
            return Prelude.pure(Data_Either.applicativeEither)(ShadowPointer.value);
        };
        if (_649 === "none") {
            return Prelude.pure(Data_Either.applicativeEither)(NonePointer.value);
        };
        return new Data_Either.Left("incorrect tooltip axis pointer type");
    });
});
var tooltipAxisPointerDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (json) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (_651) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_207) {
            return function (_208) {
                return function (_209) {
                    return function (_210) {
                        return {
                            type: _207, 
                            lineStyle: _208, 
                            crossStyle: _209, 
                            shadowStyle: _210
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(tooltiopAxisPointerTypeDecodeJson))(_651)("type")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Line.lineStyleDecodeJson))(_651)("lineStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Line.lineStyleDecodeJson))(_651)("crossStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Area.areaStyleDecodeJson))(_651)("shadowStyle")))(function (_650) {
            return Prelude.pure(Data_Either.applicativeEither)(_650);
        });
    });
});
var tooltipDecodeJson = new Data_Argonaut_Decode.DecodeJson(function (json) {
    return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (_653) {
        return Prelude.bind(Data_Either.bindEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_211) {
            return function (_212) {
                return function (_213) {
                    return function (_214) {
                        return function (_215) {
                            return function (_216) {
                                return function (_217) {
                                    return function (_218) {
                                        return function (_219) {
                                            return function (_220) {
                                                return function (_221) {
                                                    return function (_222) {
                                                        return function (_223) {
                                                            return function (_224) {
                                                                return function (_225) {
                                                                    return function (_226) {
                                                                        return function (_227) {
                                                                            return {
                                                                                show: _211, 
                                                                                showContent: _212, 
                                                                                trigger: _213, 
                                                                                position: _214, 
                                                                                formatter: _215, 
                                                                                islandFormatter: _216, 
                                                                                showDelay: _217, 
                                                                                hideDelay: _218, 
                                                                                transitionDuration: _219, 
                                                                                backgroundColor: _220, 
                                                                                borderColor: _221, 
                                                                                borderRadius: _222, 
                                                                                borderWidth: _223, 
                                                                                padding: _224, 
                                                                                axisPointer: _225, 
                                                                                textStyle: _226, 
                                                                                enterable: _227
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_653)("show")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_653)("showContent")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(tooltipTriggerDecodeJson))(_653)("trigger")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(tooltipPositionDecodeJson))(_653)("position")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Formatter.formatterDecodeJson))(_653)("formatter")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Formatter.formatterDecodeJson))(_653)("islandFormatter")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_653)("showDelay")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_653)("hideDelay")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_653)("transitionDuration")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_653)("backgroundColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(_653)("borderColor")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_653)("borderRadius")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonNumber))(_653)("borderWidth")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Common.cornerJsonDecode(Data_Argonaut_Decode.decodeJsonNumber)))(_653)("padding")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(tooltipAxisPointerDecodeJson))(_653)("axisPointer")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(ECharts_Style_Text.textStyleDecodeJson))(_653)("textStyle")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonBoolean))(_653)("enterable")))(function (_652) {
            return Prelude.pure(Data_Either.applicativeEither)(_652);
        });
    });
});
module.exports = {
    Tooltip: Tooltip, 
    TooltipAxisPointer: TooltipAxisPointer, 
    LinePointer: LinePointer, 
    CrossPointer: CrossPointer, 
    ShadowPointer: ShadowPointer, 
    NonePointer: NonePointer, 
    Fixed: Fixed, 
    FuncPos: FuncPos, 
    TriggerItem: TriggerItem, 
    TriggerAxis: TriggerAxis, 
    tooltipDefault: tooltipDefault, 
    tooltipAxisPointerDefault: tooltipAxisPointerDefault, 
    tooltipTriggerEncodeJson: tooltipTriggerEncodeJson, 
    tooltipTriggerDecodeJson: tooltipTriggerDecodeJson, 
    tooltipPositionEncodeJson: tooltipPositionEncodeJson, 
    tooltipPositionDecodeJson: tooltipPositionDecodeJson, 
    tooltipAxisPointerTypeEncodeJson: tooltipAxisPointerTypeEncodeJson, 
    tooltiopAxisPointerTypeDecodeJson: tooltiopAxisPointerTypeDecodeJson, 
    tooltipAxisPointerEncodeJson: tooltipAxisPointerEncodeJson, 
    tooltipAxisPointerDecodeJson: tooltipAxisPointerDecodeJson, 
    tooltipEncodeJson: tooltipEncodeJson, 
    tooltipDecodeJson: tooltipDecodeJson
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Tooltip/foreign.js","Data.Argonaut.Combinators":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Combinators/index.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js","Data.Argonaut.Decode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Decode/index.js","Data.Argonaut.Encode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Encode/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","ECharts.Formatter":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Formatter/index.js","ECharts.Style.Area":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Area/index.js","ECharts.Style.Line":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Line/index.js","ECharts.Style.Text":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Text/index.js","ECharts.Utils":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Utils/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Utils/foreign.js":[function(require,module,exports){
// module ECharts.Utils

function unnull(obj) {
    if (obj == null
        || typeof(obj) != 'object'
        || obj instanceof window['Date']
        || obj instanceof window['Function']
        || obj instanceof window['RegExp']) {
        return obj;
    }
    var temp = new obj.constructor();
    for (var i in obj) {
        if (obj.hasOwnProperty(i) && obj[i] !== null && obj[i] !== undefined) {
            temp[i] = unnull(obj[i]);
        }
    }
    return temp;
}

exports.unnull = unnull;

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Utils/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
module.exports = {
    unnull: $foreign.unnull
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Utils/foreign.js","Data.Argonaut.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Argonaut.Core/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var ECharts_AddData = require("ECharts.AddData");
var ECharts_Axis = require("ECharts.Axis");
var ECharts_Chart = require("ECharts.Chart");
var ECharts_Color = require("ECharts.Color");
var ECharts_Common = require("ECharts.Common");
var ECharts_Connect = require("ECharts.Connect");
var ECharts_Coords = require("ECharts.Coords");
var ECharts_DataRange = require("ECharts.DataRange");
var ECharts_DataZoom = require("ECharts.DataZoom");
var ECharts_Effects = require("ECharts.Effects");
var ECharts_Events = require("ECharts.Events");
var ECharts_Formatter = require("ECharts.Formatter");
var ECharts_Grid = require("ECharts.Grid");
var ECharts_Image = require("ECharts.Image");
var ECharts_Item_Data = require("ECharts.Item.Data");
var ECharts_Item_Value = require("ECharts.Item.Value");
var ECharts_Legend = require("ECharts.Legend");
var ECharts_Loading = require("ECharts.Loading");
var ECharts_Mark_Data = require("ECharts.Mark.Data");
var ECharts_Mark_Effect = require("ECharts.Mark.Effect");
var ECharts_Mark_Line = require("ECharts.Mark.Line");
var ECharts_Mark_Point = require("ECharts.Mark.Point");
var ECharts_Options = require("ECharts.Options");
var ECharts_RoamController = require("ECharts.RoamController");
var ECharts_Series = require("ECharts.Series");
var ECharts_Series_EventRiver = require("ECharts.Series.EventRiver");
var ECharts_Series_Force = require("ECharts.Series.Force");
var ECharts_Series_Gauge = require("ECharts.Series.Gauge");
var ECharts_Style_Area = require("ECharts.Style.Area");
var ECharts_Style_Checkpoint = require("ECharts.Style.Checkpoint");
var ECharts_Style_Chord = require("ECharts.Style.Chord");
var ECharts_Style_Item = require("ECharts.Style.Item");
var ECharts_Style_Line = require("ECharts.Style.Line");
var ECharts_Style_Link = require("ECharts.Style.Link");
var ECharts_Style_Node = require("ECharts.Style.Node");
var ECharts_Style_Text = require("ECharts.Style.Text");
var ECharts_Symbol = require("ECharts.Symbol");
var ECharts_Timeline = require("ECharts.Timeline");
var ECharts_Title = require("ECharts.Title");
var ECharts_Toolbox = require("ECharts.Toolbox");
var ECharts_Tooltip = require("ECharts.Tooltip");
var ECharts_Utils = require("ECharts.Utils");
module.exports = {};

},{"ECharts.AddData":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.AddData/index.js","ECharts.Axis":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Axis/index.js","ECharts.Chart":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Chart/index.js","ECharts.Color":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Color/index.js","ECharts.Common":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Common/index.js","ECharts.Connect":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Connect/index.js","ECharts.Coords":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Coords/index.js","ECharts.DataRange":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.DataRange/index.js","ECharts.DataZoom":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.DataZoom/index.js","ECharts.Effects":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Effects/index.js","ECharts.Events":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Events/index.js","ECharts.Formatter":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Formatter/index.js","ECharts.Grid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Grid/index.js","ECharts.Image":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Image/index.js","ECharts.Item.Data":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Item.Data/index.js","ECharts.Item.Value":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Item.Value/index.js","ECharts.Legend":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Legend/index.js","ECharts.Loading":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Loading/index.js","ECharts.Mark.Data":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Data/index.js","ECharts.Mark.Effect":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Effect/index.js","ECharts.Mark.Line":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Line/index.js","ECharts.Mark.Point":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Mark.Point/index.js","ECharts.Options":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Options/index.js","ECharts.RoamController":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.RoamController/index.js","ECharts.Series":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series/index.js","ECharts.Series.EventRiver":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series.EventRiver/index.js","ECharts.Series.Force":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series.Force/index.js","ECharts.Series.Gauge":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Series.Gauge/index.js","ECharts.Style.Area":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Area/index.js","ECharts.Style.Checkpoint":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Checkpoint/index.js","ECharts.Style.Chord":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Chord/index.js","ECharts.Style.Item":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Item/index.js","ECharts.Style.Line":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Line/index.js","ECharts.Style.Link":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Link/index.js","ECharts.Style.Node":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Node/index.js","ECharts.Style.Text":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Style.Text/index.js","ECharts.Symbol":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Symbol/index.js","ECharts.Timeline":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Timeline/index.js","ECharts.Title":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Title/index.js","ECharts.Toolbox":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Toolbox/index.js","ECharts.Tooltip":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Tooltip/index.js","ECharts.Utils":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Utils/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Global/foreign.js":[function(require,module,exports){
/* globals exports */
"use strict";

// module Global

exports.nan = NaN;

exports.isNaN = isNaN;

exports.infinity = Infinity;

exports.isFinite = isFinite;

exports.readInt = function (radix) {
  return function (n) {
    return parseInt(n, radix);
  };
};

exports.readFloat = parseFloat;

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Global/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
module.exports = {
    readFloat: $foreign.readFloat, 
    readInt: $foreign.readInt, 
    isFinite: $foreign.isFinite, 
    infinity: $foreign.infinity, 
    isNaN: $foreign.isNaN, 
    nan: $foreign.nan
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Global/foreign.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Component/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Bifunctor = require("Data.Bifunctor");
var Control_Monad_State = require("Control.Monad.State");
var Control_Monad_State_Class = require("Control.Monad.State.Class");
var Control_Monad_Free = require("Control.Monad.Free");
var Data_Functor_Coproduct = require("Data.Functor.Coproduct");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Data_Map = require("Data.Map");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Tuple = require("Data.Tuple");
var Halogen_Query_StateF = require("Halogen.Query.StateF");
var Halogen_Query_SubscribeF = require("Halogen.Query.SubscribeF");
var Data_Either = require("Data.Either");
var Control_Apply = require("Control.Apply");
var Data_Maybe = require("Data.Maybe");
var Halogen_HTML_Core = require("Halogen.HTML.Core");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Bind = require("Control.Bind");
var Control_Coroutine = require("Control.Coroutine");
var Control_Plus = require("Control.Plus");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Const = require("Data.Const");
var Data_NaturalTransformation = require("Data.NaturalTransformation");
var Data_Void = require("Data.Void");
var Control_Monad_State_Trans = require("Control.Monad.State.Trans");
var Data_Identity = require("Data.Identity");
var Data_Inject = require("Data.Inject");
var Control_Monad_Free_Trans = require("Control.Monad.Free.Trans");
var Component = function (x) {
    return x;
};
var ChildF = (function () {
    function ChildF(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ChildF.create = function (value0) {
        return function (value1) {
            return new ChildF(value0, value1);
        };
    };
    return ChildF;
})();
var renderComponent = function (_605) {
    return Control_Monad_State.runState(_605.render);
};
var render = function (__dict_Ord_0) {
    return function (fromQ) {
        return function (toQ$prime) {
            return function (c) {
                return function (f) {
                    var renderChild$prime = function (st) {
                        return function (p) {
                            return function (_613) {
                                var _786 = renderComponent(_613.value0)(_613.value1);
                                return Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))(function (st_2) {
                                    var _787 = {};
                                    for (var _788 in st_2) {
                                        if (st_2.hasOwnProperty(_788)) {
                                            _787[_788] = st_2[_788];
                                        };
                                    };
                                    _787.children = Data_Map.insert(__dict_Ord_0)(p)(new Data_Tuple.Tuple(_613.value0, _786.value1))(st_2.children);
                                    return _787;
                                }))(function () {
                                    return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Bifunctor.lmap(Halogen_HTML_Core.bifunctorHTML)(toQ$prime)(Prelude["<$>"](Halogen_HTML_Core.functorHTML)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Functor_Coproduct.right)(ChildF.create(p)))(_786.value0)));
                                });
                            };
                        };
                    };
                    var renderChild = function (st) {
                        return function (p) {
                            var _793 = fromQ(p);
                            if (_793 instanceof Data_Either.Left) {
                                return renderChild$prime(st)(_793.value0)(Data_Maybe["fromMaybe'"](function (_604) {
                                    return f(_793.value0);
                                })(Data_Map.lookup(__dict_Ord_0)(_793.value0)(st.children)));
                            };
                            if (_793 instanceof Data_Either.Right) {
                                return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Halogen_HTML_Core.Placeholder(_793.value0));
                            };
                            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-halogen/src/Halogen/Component.purs line 276, column 1 - line 282, column 1: " + [ _793.constructor.name ]);
                        };
                    };
                    return Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity)))(function (_93) {
                        var _798 = renderComponent(c)(_93.parent);
                        return Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))({
                            parent: _798.value1, 
                            children: Data_Map.empty
                        }))(function () {
                            return Halogen_HTML_Core.substPlaceholder(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(renderChild(_93))(Data_Functor_Coproduct.left)(_798.value0);
                        });
                    });
                };
            };
        };
    };
};
var queryComponent = function (_606) {
    return _606["eval"];
};
var peekComponent = function (_607) {
    return _607.peek;
};
var mapStateFParent = function (_608) {
    if (_608 instanceof Halogen_Query_StateF.Get) {
        return new Halogen_Query_StateF.Get(function (st) {
            return _608.value0(st.parent);
        });
    };
    if (_608 instanceof Halogen_Query_StateF.Modify) {
        return new Halogen_Query_StateF.Modify(function (st) {
            return {
                parent: _608.value0(st.parent), 
                children: st.children
            };
        }, _608.value1);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-halogen/src/Halogen/Component.purs line 164, column 1 - line 165, column 1: " + [ _608.constructor.name ]);
};
var mergeParentStateF = function (sf) {
    return Control_Monad_Free.liftF(Data_Functor_Coproduct.left(mapStateFParent(sf)));
};
var mapStateFChild = function (__dict_Ord_1) {
    return function (p) {
        return function (_609) {
            if (_609 instanceof Halogen_Query_StateF.Get) {
                return new Halogen_Query_StateF.Get(function (st) {
                    return _609.value0(Data_Maybe_Unsafe.fromJust(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.snd)(Data_Map.lookup(__dict_Ord_1)(p)(st.children))));
                });
            };
            if (_609 instanceof Halogen_Query_StateF.Modify) {
                return new Halogen_Query_StateF.Modify(function (st) {
                    return {
                        parent: st.parent, 
                        children: Data_Map.update(__dict_Ord_1)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Bifunctor.rmap(Data_Tuple.bifunctorTuple)(_609.value0)))(p)(st.children)
                    };
                }, _609.value1);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-halogen/src/Halogen/Component.purs line 168, column 1 - line 169, column 1: " + [ p.constructor.name, _609.constructor.name ]);
        };
    };
};
var query = function (__dict_Functor_2) {
    return function (__dict_Ord_3) {
        return function (p) {
            return function (q) {
                return Prelude.bind(Control_Monad_Free.freeBind)(Halogen_Query_StateF.get(Data_Inject.injectLeft))(function (_92) {
                    var _813 = Data_Map.lookup(__dict_Ord_3)(p)(_92.children);
                    if (_813 instanceof Data_Maybe.Nothing) {
                        return Prelude.pure(Control_Monad_Free.freeApplicative)(Data_Maybe.Nothing.value);
                    };
                    if (_813 instanceof Data_Maybe.Just) {
                        return Prelude["<$>"](Control_Monad_Free.freeFunctor)(Data_Maybe.Just.create)(Control_Monad_Free.mapF(Data_Functor_Coproduct.coproduct(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Functor_Coproduct.left)(mapStateFChild(__dict_Ord_3)(p)))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Functor_Coproduct.right)(Data_Functor_Coproduct.coproduct(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Functor_Coproduct.left)(Halogen_Query_SubscribeF.remapSubscribe(__dict_Functor_2)(ChildF.create(p))))(Data_Functor_Coproduct.right))))(queryComponent(_813.value0.value0)(q)));
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-halogen/src/Halogen/Component.purs line 189, column 1 - line 193, column 1: " + [ _813.constructor.name ]);
                });
            };
        };
    };
};
var liftQuery = function (__dict_Functor_4) {
    return function (qf) {
        return Control_Monad_Free.liftF(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(qf)));
    };
};
var liftEff$prime = function (__dict_MonadEff_5) {
    return function (__dict_Functor_6) {
        return function (e) {
            return Control_Monad_Free.liftF(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Control_Monad_Eff_Class.liftEff(__dict_MonadEff_5)(e))));
        };
    };
};
var liftChildF = function (__dict_Functor_7) {
    return Control_Monad_Free.mapF(Data_Functor_Coproduct.coproduct(Data_Functor_Coproduct.left)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Functor_Coproduct.right)(Data_Functor_Coproduct.coproduct(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Functor_Coproduct.left)(Halogen_Query_SubscribeF.remapSubscribe(__dict_Functor_7)(Data_Functor_Coproduct.right)))(Data_Functor_Coproduct.right))));
};
var runSubscribeF = function (__dict_Functor_8) {
    return function (queryParent_1) {
        return Prelude["<<<"](Prelude.semigroupoidFn)(Halogen_Query_SubscribeF.subscribeN(Control_Monad_Free.freeMonadRec)(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorAwait)(Control_Monad_Free.freeMonad))(Control_Bind["=<<"](Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Free.freeMonad))(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Control_Monad_Free.freeMonad))(queryParent_1))(Control_Coroutine.await(Control_Monad_Free.freeMonad)))))(Halogen_Query_SubscribeF.hoistSubscribe(Control_Monad_Free.freeFunctor)(liftChildF(__dict_Functor_8)));
    };
};
var queryParent = function (__dict_Functor_9) {
    return function (c) {
        return function (q) {
            return Control_Monad_Free.foldFree(Control_Monad_Free.freeMonadRec)(Data_Functor_Coproduct.coproduct(mergeParentStateF)(Data_Functor_Coproduct.coproduct(runSubscribeF(__dict_Functor_9)(queryParent(__dict_Functor_9)(c)))(liftChildF(__dict_Functor_9))))(queryComponent(c)(q));
        };
    };
};
var installedState = function (__dict_Ord_10) {
    return function (_2) {
        return {
            parent: _2, 
            children: Data_Map.empty
        };
    };
};
var functorComponent = new Prelude.Functor(function (f) {
    return function (_611) {
        return {
            render: Prelude["<$>"](Control_Monad_State_Trans.functorStateT(Data_Identity.monadIdentity))(Data_Bifunctor.lmap(Halogen_HTML_Core.bifunctorHTML)(f))(_611.render), 
            "eval": _611["eval"], 
            peek: _611.peek
        };
    };
});
var functorChildF = function (__dict_Functor_11) {
    return new Prelude.Functor(function (f) {
        return function (_612) {
            return new ChildF(_612.value0, Prelude["<$>"](__dict_Functor_11)(f)(_612.value1));
        };
    });
};
var empty$prime = function (__dict_Functor_12) {
    return function (__dict_Functor_13) {
        return function (__dict_Plus_14) {
            return Control_Monad_Free.liftF(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Control_Plus.empty(__dict_Plus_14))));
        };
    };
};
var queryChild = function (__dict_Plus_15) {
    return function (__dict_Ord_16) {
        return function (_610) {
            return Prelude[">>="](Control_Monad_Free.freeBind)(Control_Monad_Free.mapF(Data_Functor_Coproduct.coproduct(Data_Functor_Coproduct.left)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Functor_Coproduct.right)(Data_Functor_Coproduct.coproduct(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Functor_Coproduct.left)(Halogen_Query_SubscribeF.remapSubscribe((__dict_Plus_15["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Data_Functor_Coproduct.right)))(Data_Functor_Coproduct.right))))(query((__dict_Plus_15["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Ord_16)(_610.value0)(_610.value1)))(Data_Maybe.maybe(empty$prime(Halogen_Query_StateF.functorStateF)(Halogen_Query_SubscribeF.functorSubscribeF)(__dict_Plus_15))(Prelude.pure(Control_Monad_Free.freeApplicative)));
        };
    };
};
var installer = function (__dict_Plus_17) {
    return function (__dict_Ord_18) {
        return function (fromQ) {
            return function (toQ$prime) {
                return function (c) {
                    return function (f) {
                        var render$prime = render(__dict_Ord_18)(fromQ)(toQ$prime)(c)(f);
                        var $$eval = Data_Functor_Coproduct.coproduct(queryParent((__dict_Plus_17["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(c))(queryChild(__dict_Plus_17)(__dict_Ord_18));
                        return {
                            render: render$prime, 
                            "eval": $$eval, 
                            peek: Prelude["const"](Prelude.pure(Control_Monad_Free.freeApplicative)(Prelude.unit))
                        };
                    };
                };
            };
        };
    };
};
var install = function (__dict_Plus_19) {
    return function (__dict_Ord_20) {
        return installer(__dict_Plus_19)(__dict_Ord_20)(Data_Either.Left.create)(Prelude.id(Prelude.categoryFn));
    };
};
var installL = function (__dict_Plus_21) {
    return function (__dict_Ord_22) {
        return installer(__dict_Plus_21)(__dict_Ord_22)(Data_Either.either(Data_Either.Left.create)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Right.create)(Data_Either.Right.create)))(Data_Either.Left.create);
    };
};
var installR = function (__dict_Plus_23) {
    return function (__dict_Ord_24) {
        return installer(__dict_Plus_23)(__dict_Ord_24)(Data_Either.either(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Right.create)(Data_Either.Left.create))(Data_Either.Left.create))(Data_Either.Right.create);
    };
};
var installer$prime = function (__dict_Plus_25) {
    return function (__dict_Ord_26) {
        return function (fromQ) {
            return function (toQ$prime) {
                return function (c) {
                    return function (f) {
                        var render$prime = render(__dict_Ord_26)(fromQ)(toQ$prime)(c)(f);
                        var peek = function (q) {
                            var runSubscribeF$prime = runSubscribeF((__dict_Plus_25["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(queryParent((__dict_Plus_25["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(c));
                            return Control_Monad_Free.foldFree(Control_Monad_Free.freeMonadRec)(Data_Functor_Coproduct.coproduct(mergeParentStateF)(Data_Functor_Coproduct.coproduct(runSubscribeF$prime)(liftChildF((__dict_Plus_25["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]()))))(peekComponent(c)(q));
                        };
                        var $$eval = Data_Functor_Coproduct.coproduct(queryParent((__dict_Plus_25["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(c))(function (q) {
                            return Control_Apply["<*"](Control_Monad_Free.freeApply)(queryChild(__dict_Plus_25)(__dict_Ord_26)(q))(peek(q));
                        });
                        return {
                            render: render$prime, 
                            "eval": $$eval, 
                            peek: peek
                        };
                    };
                };
            };
        };
    };
};
var install$prime = function (__dict_Plus_27) {
    return function (__dict_Ord_28) {
        return installer$prime(__dict_Plus_27)(__dict_Ord_28)(Data_Either.Left.create)(Prelude.id(Prelude.categoryFn));
    };
};
var installL$prime = function (__dict_Plus_29) {
    return function (__dict_Ord_30) {
        return installer$prime(__dict_Plus_29)(__dict_Ord_30)(Data_Either.either(Data_Either.Left.create)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Right.create)(Data_Either.Right.create)))(Data_Either.Left.create);
    };
};
var installR$prime = function (__dict_Plus_31) {
    return function (__dict_Ord_32) {
        return installer$prime(__dict_Plus_31)(__dict_Ord_32)(Data_Either.either(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Right.create)(Data_Either.Left.create))(Data_Either.Left.create))(Data_Either.Right.create);
    };
};
var component$prime = function (r) {
    return function (q) {
        return function (p) {
            return {
                render: Control_Monad_State_Class.gets(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))(r), 
                "eval": q, 
                peek: p
            };
        };
    };
};
var component = function (r) {
    return function (q) {
        return component$prime(r)(q)(Prelude["const"](Prelude.pure(Control_Monad_Free.freeApplicative)(Prelude.unit)));
    };
};
module.exports = {
    ChildF: ChildF, 
    "installR'": installR$prime, 
    "installL'": installL$prime, 
    "install'": install$prime, 
    installR: installR, 
    installL: installL, 
    install: install, 
    liftQuery: liftQuery, 
    query: query, 
    installedState: installedState, 
    "liftEff'": liftEff$prime, 
    "component'": component$prime, 
    component: component, 
    queryComponent: queryComponent, 
    renderComponent: renderComponent, 
    functorComponent: functorComponent, 
    functorChildF: functorChildF
};

},{"Control.Apply":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Apply/index.js","Control.Bind":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Bind/index.js","Control.Coroutine":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Coroutine/index.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","Control.Monad.Free":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Free/index.js","Control.Monad.Free.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Free.Trans/index.js","Control.Monad.Rec.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Rec.Class/index.js","Control.Monad.State":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State/index.js","Control.Monad.State.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State.Class/index.js","Control.Monad.State.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State.Trans/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Data.Bifunctor":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bifunctor/index.js","Data.Const":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Const/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Functor.Coproduct":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Coproduct/index.js","Data.Identity":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Identity/index.js","Data.Inject":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Inject/index.js","Data.Map":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Map/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Maybe.Unsafe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe.Unsafe/index.js","Data.NaturalTransformation":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.NaturalTransformation/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Data.Void":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Void/index.js","Halogen.HTML.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Core/index.js","Halogen.Query.StateF":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Query.StateF/index.js","Halogen.Query.SubscribeF":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Query.SubscribeF/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Effects/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Control_Monad_Aff_AVar = require("Control.Monad.Aff.AVar");
var Control_Monad_Eff_Exception = require("Control.Monad.Eff.Exception");
var DOM = require("DOM");
module.exports = {};

},{"Control.Monad.Aff.AVar":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff.AVar/index.js","Control.Monad.Eff.Exception":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Exception/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Core/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Bifunctor = require("Data.Bifunctor");
var Data_Traversable = require("Data.Traversable");
var Data_ExistsR = require("Data.ExistsR");
var Data_Exists = require("Data.Exists");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var Data_Nullable = require("Data.Nullable");
var Data_Tuple = require("Data.Tuple");
var DOM = require("DOM");
var DOM_HTML_Types = require("DOM.HTML.Types");
var Halogen_HTML_Events_Handler = require("Halogen.HTML.Events.Handler");
var Halogen_HTML_Events_Types = require("Halogen.HTML.Events.Types");
var WidgetF = (function () {
    function WidgetF(value0) {
        this.value0 = value0;
    };
    WidgetF.create = function (value0) {
        return new WidgetF(value0);
    };
    return WidgetF;
})();
var TagName = function (x) {
    return x;
};
var PropName = function (x) {
    return x;
};
var Namespace = function (x) {
    return x;
};
var EventName = function (x) {
    return x;
};
var HandlerF = (function () {
    function HandlerF(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    HandlerF.create = function (value0) {
        return function (value1) {
            return new HandlerF(value0, value1);
        };
    };
    return HandlerF;
})();
var ClassName = function (x) {
    return x;
};
var AttrName = function (x) {
    return x;
};
var PropF = (function () {
    function PropF(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    PropF.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new PropF(value0, value1, value2);
            };
        };
    };
    return PropF;
})();
var Prop = (function () {
    function Prop(value0) {
        this.value0 = value0;
    };
    Prop.create = function (value0) {
        return new Prop(value0);
    };
    return Prop;
})();
var Attr = (function () {
    function Attr(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Attr.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Attr(value0, value1, value2);
            };
        };
    };
    return Attr;
})();
var Key = (function () {
    function Key(value0) {
        this.value0 = value0;
    };
    Key.create = function (value0) {
        return new Key(value0);
    };
    return Key;
})();
var Handler = (function () {
    function Handler(value0) {
        this.value0 = value0;
    };
    Handler.create = function (value0) {
        return new Handler(value0);
    };
    return Handler;
})();
var Initializer = (function () {
    function Initializer(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Initializer.create = function (value0) {
        return function (value1) {
            return new Initializer(value0, value1);
        };
    };
    return Initializer;
})();
var Finalizer = (function () {
    function Finalizer(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Finalizer.create = function (value0) {
        return function (value1) {
            return new Finalizer(value0, value1);
        };
    };
    return Finalizer;
})();
var Text = (function () {
    function Text(value0) {
        this.value0 = value0;
    };
    Text.create = function (value0) {
        return new Text(value0);
    };
    return Text;
})();
var Element = (function () {
    function Element(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Element.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Element(value0, value1, value2, value3);
                };
            };
        };
    };
    return Element;
})();
var Widget = (function () {
    function Widget(value0) {
        this.value0 = value0;
    };
    Widget.create = function (value0) {
        return new Widget(value0);
    };
    return Widget;
})();
var Placeholder = (function () {
    function Placeholder(value0) {
        this.value0 = value0;
    };
    Placeholder.create = function (value0) {
        return new Placeholder(value0);
    };
    return Placeholder;
})();
var IsProp = function (toPropString) {
    this.toPropString = toPropString;
};
var toPropString = function (dict) {
    return dict.toPropString;
};
var tagName = TagName;
var stringIsProp = new IsProp(function (_596) {
    return function (_597) {
        return function (s) {
            return s;
        };
    };
});
var runTagName = function (_589) {
    return _589;
};
var runPropName = function (_590) {
    return _590;
};
var runNamespace = function (_588) {
    return _588;
};
var runEventName = function (_592) {
    return _592;
};
var runClassName = function (_593) {
    return _593;
};
var runAttrName = function (_591) {
    return _591;
};
var propName = PropName;
var prop = function (__dict_IsProp_1) {
    return function (name) {
        return function (attr) {
            return function (v) {
                return new Prop(Data_Exists.mkExists(new PropF(name, v, Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(toPropString(__dict_IsProp_1)))(attr))));
            };
        };
    };
};
var numberIsProp = new IsProp(function (_600) {
    return function (_601) {
        return function (n) {
            return Prelude.show(Prelude.showNumber)(n);
        };
    };
});
var namespace = Namespace;
var intIsProp = new IsProp(function (_598) {
    return function (_599) {
        return function (i) {
            return Prelude.show(Prelude.showInt)(i);
        };
    };
});
var handler$prime = function (name) {
    return function (k) {
        return new Handler(Data_ExistsR.mkExistsR(new HandlerF(name, k)));
    };
};
var handler = function (name) {
    return function (k) {
        return new Handler(Data_ExistsR.mkExistsR(new HandlerF(name, Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.map(Halogen_HTML_Events_Handler.functorEventHandler)(Data_Maybe.Just.create))(k))));
    };
};
var functorProp = new Prelude.Functor(function (f) {
    return function (_595) {
        if (_595 instanceof Prop) {
            return new Prop(_595.value0);
        };
        if (_595 instanceof Key) {
            return new Key(_595.value0);
        };
        if (_595 instanceof Attr) {
            return new Attr(_595.value0, _595.value1, _595.value2);
        };
        if (_595 instanceof Handler) {
            return Data_ExistsR.runExistsR(function (_586) {
                return new Handler(Data_ExistsR.mkExistsR(new HandlerF(_586.value0, Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.map(Halogen_HTML_Events_Handler.functorEventHandler)(Prelude.map(Data_Maybe.functorMaybe)(f)))(_586.value1))));
            })(_595.value0);
        };
        if (_595 instanceof Initializer) {
            return new Initializer(_595.value0, Prelude["<<<"](Prelude.semigroupoidFn)(f)(_595.value1));
        };
        if (_595 instanceof Finalizer) {
            return new Finalizer(_595.value0, Prelude["<<<"](Prelude.semigroupoidFn)(f)(_595.value1));
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-halogen/src/Halogen/HTML/Core.purs line 111, column 1 - line 121, column 1: " + [ f.constructor.name, _595.constructor.name ]);
    };
});
var substPlaceholder = function (__dict_Applicative_0) {
    return function (f) {
        return function (g) {
            return function (_587) {
                if (_587 instanceof Text) {
                    return Prelude.pure(__dict_Applicative_0)(new Text(_587.value0));
                };
                if (_587 instanceof Element) {
                    return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Element.create(_587.value0)(_587.value1)(Prelude["<$>"](Prelude.functorArray)(Prelude["<$>"](functorProp)(g))(_587.value2)))(Data_Traversable.traverse(Data_Traversable.traversableArray)(__dict_Applicative_0)(substPlaceholder(__dict_Applicative_0)(f)(g))(_587.value3));
                };
                if (_587 instanceof Placeholder) {
                    return f(_587.value0);
                };
                throw new Error("Failed pattern match: " + [ f.constructor.name, g.constructor.name, _587.constructor.name ]);
            };
        };
    };
};
var eventName = EventName;
var element = Element.create(Data_Maybe.Nothing.value);
var className = ClassName;
var booleanIsProp = new IsProp(function (name) {
    return function (_602) {
        return function (_603) {
            if (_603) {
                return runAttrName(name);
            };
            if (!_603) {
                return "";
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-halogen/src/Halogen/HTML/Core.purs line 156, column 1 - line 161, column 1: " + [ name.constructor.name, _602.constructor.name, _603.constructor.name ]);
        };
    };
});
var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        var go = function (_594) {
            if (_594 instanceof Text) {
                return new Text(_594.value0);
            };
            if (_594 instanceof Element) {
                return new Element(_594.value0, _594.value1, Prelude["<$>"](Prelude.functorArray)(Prelude["<$>"](functorProp)(g))(_594.value2), Prelude["<$>"](Prelude.functorArray)(go)(_594.value3));
            };
            if (_594 instanceof Placeholder) {
                return new Placeholder(f(_594.value0));
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-halogen/src/Halogen/HTML/Core.purs line 74, column 1 - line 81, column 1: " + [ _594.constructor.name ]);
        };
        return go;
    };
});
var functorHTML = new Prelude.Functor(Data_Bifunctor.rmap(bifunctorHTML));
var attrName = AttrName;
module.exports = {
    HandlerF: HandlerF, 
    PropF: PropF, 
    Prop: Prop, 
    Attr: Attr, 
    Key: Key, 
    Handler: Handler, 
    Initializer: Initializer, 
    Finalizer: Finalizer, 
    WidgetF: WidgetF, 
    Text: Text, 
    Element: Element, 
    Widget: Widget, 
    Placeholder: Placeholder, 
    IsProp: IsProp, 
    runClassName: runClassName, 
    className: className, 
    runEventName: runEventName, 
    eventName: eventName, 
    runAttrName: runAttrName, 
    attrName: attrName, 
    runPropName: runPropName, 
    propName: propName, 
    runTagName: runTagName, 
    tagName: tagName, 
    runNamespace: runNamespace, 
    namespace: namespace, 
    toPropString: toPropString, 
    "handler'": handler$prime, 
    handler: handler, 
    prop: prop, 
    substPlaceholder: substPlaceholder, 
    element: element, 
    bifunctorHTML: bifunctorHTML, 
    functorHTML: functorHTML, 
    functorProp: functorProp, 
    stringIsProp: stringIsProp, 
    intIsProp: intIsProp, 
    numberIsProp: numberIsProp, 
    booleanIsProp: booleanIsProp
};

},{"Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","DOM.HTML.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Types/index.js","Data.Bifunctor":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bifunctor/index.js","Data.Exists":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Exists/index.js","Data.ExistsR":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.ExistsR/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Nullable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Nullable/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Halogen.HTML.Events.Handler":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Events.Handler/index.js","Halogen.HTML.Events.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Events.Types/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Elements/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Halogen_HTML_Core = require("Halogen.HTML.Core");
var Prelude = require("Prelude");
var wbr = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("wbr"))(props)([  ]);
};
var video = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("video"))(xs);
};
var video_ = video([  ]);
var $$var = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("var"))(xs);
};
var var_ = $$var([  ]);
var ul = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("ul"))(xs);
};
var ul_ = ul([  ]);
var u = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("u"))(xs);
};
var u_ = u([  ]);
var tt = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("tt"))(xs);
};
var tt_ = tt([  ]);
var track = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("track"))(props)([  ]);
};
var tr = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("tr"))(xs);
};
var tr_ = tr([  ]);
var title = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("title"))(xs);
};
var title_ = title([  ]);
var time = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("time"))(xs);
};
var time_ = time([  ]);
var thead = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("thead"))(xs);
};
var thead_ = thead([  ]);
var th = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("th"))(xs);
};
var th_ = th([  ]);
var tfoot = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("tfoot"))(xs);
};
var tfoot_ = tfoot([  ]);
var textarea = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("textarea"))(xs)([  ]);
};
var text = Halogen_HTML_Core.Text.create;
var td = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("td"))(xs);
};
var td_ = td([  ]);
var tbody = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("tbody"))(xs);
};
var tbody_ = tbody([  ]);
var table = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("table"))(xs);
};
var table_ = table([  ]);
var sup = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("sup"))(xs);
};
var sup_ = sup([  ]);
var summary = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("summary"))(xs);
};
var summary_ = summary([  ]);
var sub = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("sub"))(xs);
};
var sub_ = sub([  ]);
var style = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("style"))(xs);
};
var style_ = style([  ]);
var strong = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("strong"))(xs);
};
var strong_ = strong([  ]);
var strike = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("strike"))(xs);
};
var strike_ = strike([  ]);
var span = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("span"))(xs);
};
var span_ = span([  ]);
var source = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("source"))(props)([  ]);
};
var small = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("small"))(xs);
};
var small_ = small([  ]);
var select = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("select"))(xs);
};
var select_ = select([  ]);
var section = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("section"))(xs);
};
var section_ = section([  ]);
var script = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("script"))(xs);
};
var script_ = script([  ]);
var samp = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("samp"))(xs);
};
var samp_ = samp([  ]);
var s = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("s"))(xs);
};
var s_ = s([  ]);
var ruby = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("ruby"))(xs);
};
var ruby_ = ruby([  ]);
var rt = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("rt"))(xs);
};
var rt_ = rt([  ]);
var rp = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("rp"))(xs);
};
var rp_ = rp([  ]);
var q = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("q"))(xs);
};
var q_ = q([  ]);
var progress = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("progress"))(xs);
};
var progress_ = progress([  ]);
var pre = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("pre"))(xs);
};
var pre_ = pre([  ]);
var param = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("param"))(props)([  ]);
};
var p = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("p"))(xs);
};
var p_ = p([  ]);
var output = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("output"))(xs);
};
var output_ = output([  ]);
var option = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("option"))(xs);
};
var option_ = option([  ]);
var optgroup = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("optgroup"))(xs);
};
var optgroup_ = optgroup([  ]);
var ol = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("ol"))(xs);
};
var ol_ = ol([  ]);
var object = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("object"))(xs);
};
var object_ = object([  ]);
var noscript = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("noscript"))(xs);
};
var noscript_ = noscript([  ]);
var noframes = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("noframes"))(xs);
};
var noframes_ = noframes([  ]);
var nav = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("nav"))(xs);
};
var nav_ = nav([  ]);
var meter = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("meter"))(xs);
};
var meter_ = meter([  ]);
var meta = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("meta"))(props)([  ]);
};
var menuitem = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("menuitem"))(xs);
};
var menuitem_ = menuitem([  ]);
var menu = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("menu"))(xs);
};
var menu_ = menu([  ]);
var mark = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("mark"))(xs);
};
var mark_ = mark([  ]);
var map = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("map"))(xs);
};
var map_ = map([  ]);
var main = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("main"))(xs);
};
var main_ = main([  ]);
var link = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("link"))(props)([  ]);
};
var li = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("li"))(xs);
};
var li_ = li([  ]);
var legend = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("legend"))(xs);
};
var legend_ = legend([  ]);
var label = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("label"))(xs);
};
var label_ = label([  ]);
var keygen = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("keygen"))(props)([  ]);
};
var kbd = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("kbd"))(xs);
};
var kbd_ = kbd([  ]);
var ins = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("ins"))(xs);
};
var ins_ = ins([  ]);
var input = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("input"))(props)([  ]);
};
var img = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("img"))(props)([  ]);
};
var iframe = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("iframe"))(props)([  ]);
};
var i = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("i"))(xs);
};
var i_ = i([  ]);
var html = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("html"))(xs);
};
var html_ = html([  ]);
var hr = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("hr"))(props)([  ]);
};
var hr_ = hr([  ]);
var header = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("header"))(xs);
};
var header_ = header([  ]);
var head = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("head"))(xs);
};
var head_ = head([  ]);
var h6 = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h6"))(xs);
};
var h6_ = h6([  ]);
var h5 = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h5"))(xs);
};
var h5_ = h5([  ]);
var h4 = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h4"))(xs);
};
var h4_ = h4([  ]);
var h3 = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h3"))(xs);
};
var h3_ = h3([  ]);
var h2 = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h2"))(xs);
};
var h2_ = h2([  ]);
var h1 = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h1"))(xs);
};
var h1_ = h1([  ]);
var frameset = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("frameset"))(xs);
};
var frameset_ = frameset([  ]);
var frame = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("frame"))(xs);
};
var frame_ = frame([  ]);
var form = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("form"))(xs);
};
var form_ = form([  ]);
var footer = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("footer"))(xs);
};
var footer_ = footer([  ]);
var font = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("font"))(xs);
};
var font_ = font([  ]);
var figure = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("figure"))(xs);
};
var figure_ = figure([  ]);
var figcaption = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("figcaption"))(xs);
};
var figcaption_ = figcaption([  ]);
var fieldset = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("fieldset"))(xs);
};
var fieldset_ = fieldset([  ]);
var embed = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("embed"))(xs);
};
var embed_ = embed([  ]);
var em = Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("em"));
var em_ = em([  ]);
var dt = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dt"))(xs);
};
var dt_ = dt([  ]);
var dl = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dl"))(xs);
};
var dl_ = dl([  ]);
var div = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("div"))(xs);
};
var div_ = div([  ]);
var dir = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dir"))(xs);
};
var dir_ = dir([  ]);
var dialog = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dialog"))(xs);
};
var dialog_ = dialog([  ]);
var dfn = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dfn"))(xs);
};
var dfn_ = dfn([  ]);
var details = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("details"))(xs);
};
var details_ = details([  ]);
var del = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("del"))(xs);
};
var del_ = del([  ]);
var dd = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dd"))(xs);
};
var dd_ = dd([  ]);
var datalist = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("datalist"))(xs);
};
var datalist_ = datalist([  ]);
var command = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("command"))(props)([  ]);
};
var colgroup = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("colgroup"))(xs);
};
var colgroup_ = colgroup([  ]);
var col = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("col"))(props)([  ]);
};
var code = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("code"))(xs);
};
var code_ = code([  ]);
var cite = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("cite"))(xs);
};
var cite_ = cite([  ]);
var center = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("center"))(xs);
};
var center_ = center([  ]);
var caption = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("caption"))(xs);
};
var caption_ = caption([  ]);
var canvas = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("canvas"))(props)([  ]);
};
var button = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("button"))(xs);
};
var button_ = button([  ]);
var br = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("br"))(props)([  ]);
};
var br_ = br([  ]);
var body = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("body"))(xs);
};
var body_ = body([  ]);
var blockquote = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("blockquote"))(xs);
};
var blockquote_ = blockquote([  ]);
var big = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("big"))(xs);
};
var big_ = big([  ]);
var bdo = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("bdo"))(xs);
};
var bdo_ = bdo([  ]);
var bdi = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("bdi"))(xs);
};
var bdi_ = bdi([  ]);
var basefont = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("basefont"))(xs);
};
var basefont_ = basefont([  ]);
var base = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("base"))(props)([  ]);
};
var b = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("b"))(xs);
};
var b_ = b([  ]);
var audio = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("audio"))(xs);
};
var audio_ = audio([  ]);
var aside = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("aside"))(xs);
};
var aside_ = aside([  ]);
var article = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("article"))(xs);
};
var article_ = article([  ]);
var area = function (props) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("area"))(props)([  ]);
};
var applet = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("applet"))(xs);
};
var applet_ = applet([  ]);
var address = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("address"))(xs);
};
var address_ = address([  ]);
var acronym = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("acronym"))(xs);
};
var acronym_ = acronym([  ]);
var abbr = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("abbr"))(xs);
};
var abbr_ = abbr([  ]);
var a = function (xs) {
    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("a"))(xs);
};
var a_ = a([  ]);
module.exports = {
    wbr: wbr, 
    video_: video_, 
    video: video, 
    var_: var_, 
    "var": $$var, 
    ul_: ul_, 
    ul: ul, 
    u_: u_, 
    u: u, 
    tt_: tt_, 
    tt: tt, 
    track: track, 
    tr_: tr_, 
    tr: tr, 
    title_: title_, 
    title: title, 
    time_: time_, 
    time: time, 
    thead_: thead_, 
    thead: thead, 
    th_: th_, 
    th: th, 
    tfoot_: tfoot_, 
    tfoot: tfoot, 
    textarea: textarea, 
    td_: td_, 
    td: td, 
    tbody_: tbody_, 
    tbody: tbody, 
    table_: table_, 
    table: table, 
    sup_: sup_, 
    sup: sup, 
    summary_: summary_, 
    summary: summary, 
    sub_: sub_, 
    sub: sub, 
    style_: style_, 
    style: style, 
    strong_: strong_, 
    strong: strong, 
    strike_: strike_, 
    strike: strike, 
    span_: span_, 
    span: span, 
    source: source, 
    small_: small_, 
    small: small, 
    select_: select_, 
    select: select, 
    section_: section_, 
    section: section, 
    script_: script_, 
    script: script, 
    samp_: samp_, 
    samp: samp, 
    s_: s_, 
    s: s, 
    ruby_: ruby_, 
    ruby: ruby, 
    rt_: rt_, 
    rt: rt, 
    rp_: rp_, 
    rp: rp, 
    q_: q_, 
    q: q, 
    progress_: progress_, 
    progress: progress, 
    pre_: pre_, 
    pre: pre, 
    param: param, 
    p_: p_, 
    p: p, 
    output_: output_, 
    output: output, 
    option_: option_, 
    option: option, 
    optgroup_: optgroup_, 
    optgroup: optgroup, 
    ol_: ol_, 
    ol: ol, 
    object_: object_, 
    object: object, 
    noscript_: noscript_, 
    noscript: noscript, 
    noframes_: noframes_, 
    noframes: noframes, 
    nav_: nav_, 
    nav: nav, 
    meter_: meter_, 
    meter: meter, 
    meta: meta, 
    menuitem_: menuitem_, 
    menuitem: menuitem, 
    menu_: menu_, 
    menu: menu, 
    mark_: mark_, 
    mark: mark, 
    map_: map_, 
    map: map, 
    main_: main_, 
    main: main, 
    link: link, 
    li_: li_, 
    li: li, 
    legend_: legend_, 
    legend: legend, 
    label_: label_, 
    label: label, 
    keygen: keygen, 
    kbd_: kbd_, 
    kbd: kbd, 
    ins_: ins_, 
    ins: ins, 
    input: input, 
    img: img, 
    iframe: iframe, 
    i_: i_, 
    i: i, 
    html_: html_, 
    html: html, 
    hr_: hr_, 
    hr: hr, 
    header_: header_, 
    header: header, 
    head_: head_, 
    head: head, 
    h6_: h6_, 
    h6: h6, 
    h5_: h5_, 
    h5: h5, 
    h4_: h4_, 
    h4: h4, 
    h3_: h3_, 
    h3: h3, 
    h2_: h2_, 
    h2: h2, 
    h1_: h1_, 
    h1: h1, 
    frameset_: frameset_, 
    frameset: frameset, 
    frame_: frame_, 
    frame: frame, 
    form_: form_, 
    form: form, 
    footer_: footer_, 
    footer: footer, 
    font_: font_, 
    font: font, 
    figure_: figure_, 
    figure: figure, 
    figcaption_: figcaption_, 
    figcaption: figcaption, 
    fieldset_: fieldset_, 
    fieldset: fieldset, 
    embed_: embed_, 
    embed: embed, 
    em_: em_, 
    em: em, 
    dt_: dt_, 
    dt: dt, 
    dl_: dl_, 
    dl: dl, 
    div_: div_, 
    div: div, 
    dir_: dir_, 
    dir: dir, 
    dialog_: dialog_, 
    dialog: dialog, 
    dfn_: dfn_, 
    dfn: dfn, 
    details_: details_, 
    details: details, 
    del_: del_, 
    del: del, 
    dd_: dd_, 
    dd: dd, 
    datalist_: datalist_, 
    datalist: datalist, 
    command: command, 
    colgroup_: colgroup_, 
    colgroup: colgroup, 
    col: col, 
    code_: code_, 
    code: code, 
    cite_: cite_, 
    cite: cite, 
    center_: center_, 
    center: center, 
    caption_: caption_, 
    caption: caption, 
    canvas: canvas, 
    button_: button_, 
    button: button, 
    br_: br_, 
    br: br, 
    body_: body_, 
    body: body, 
    blockquote_: blockquote_, 
    blockquote: blockquote, 
    big_: big_, 
    big: big, 
    bdo_: bdo_, 
    bdo: bdo, 
    bdi_: bdi_, 
    bdi: bdi, 
    basefont_: basefont_, 
    basefont: basefont, 
    base: base, 
    b_: b_, 
    b: b, 
    audio_: audio_, 
    audio: audio, 
    aside_: aside_, 
    aside: aside, 
    article_: article_, 
    article: article, 
    area: area, 
    applet_: applet_, 
    applet: applet, 
    address_: address_, 
    address: address, 
    acronym_: acronym_, 
    acronym: acronym, 
    abbr_: abbr_, 
    abbr: abbr, 
    a_: a_, 
    a: a, 
    text: text
};

},{"Halogen.HTML.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Core/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Events.Handler/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Halogen.HTML.Events.Handler

exports.preventDefaultImpl = function (e) {
  return function () {
    e.preventDefault();
  };
};

exports.stopPropagationImpl = function (e) {
  return function () {
    e.stopPropagation();
  };
};

exports.stopImmediatePropagationImpl = function (e) {
  return function () {
    e.stopImmediatePropagation();
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Events.Handler/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Writer_Class = require("Control.Monad.Writer.Class");
var Prelude = require("Prelude");
var Control_Monad_Writer = require("Control.Monad.Writer");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Apply = require("Control.Apply");
var Data_Foldable = require("Data.Foldable");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Tuple = require("Data.Tuple");
var DOM = require("DOM");
var Halogen_HTML_Events_Types = require("Halogen.HTML.Events.Types");
var Data_Monoid = require("Data.Monoid");
var Control_Monad_Writer_Trans = require("Control.Monad.Writer.Trans");
var Data_Identity = require("Data.Identity");
var PreventDefault = (function () {
    function PreventDefault() {

    };
    PreventDefault.value = new PreventDefault();
    return PreventDefault;
})();
var StopPropagation = (function () {
    function StopPropagation() {

    };
    StopPropagation.value = new StopPropagation();
    return StopPropagation;
})();
var StopImmediatePropagation = (function () {
    function StopImmediatePropagation() {

    };
    StopImmediatePropagation.value = new StopImmediatePropagation();
    return StopImmediatePropagation;
})();
var EventHandler = function (x) {
    return x;
};
var unEventHandler = function (_333) {
    return _333;
};
var stopPropagation = Control_Monad_Writer_Class.tell(Data_Monoid.monoidArray)(Control_Monad_Writer_Trans.monadWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))(Control_Monad_Writer_Class.monadWriterWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))([ StopPropagation.value ]);
var stopImmediatePropagation = Control_Monad_Writer_Class.tell(Data_Monoid.monoidArray)(Control_Monad_Writer_Trans.monadWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))(Control_Monad_Writer_Class.monadWriterWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))([ StopImmediatePropagation.value ]);
var runEventHandler = function (__dict_Monad_0) {
    return function (__dict_MonadEff_1) {
        return function (e) {
            return function (_334) {
                var applyUpdate = function (_339) {
                    if (_339 instanceof PreventDefault) {
                        return $foreign.preventDefaultImpl(e);
                    };
                    if (_339 instanceof StopPropagation) {
                        return $foreign.stopPropagationImpl(e);
                    };
                    if (_339 instanceof StopImmediatePropagation) {
                        return $foreign.stopImmediatePropagationImpl(e);
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-halogen/src/Halogen/HTML/Events/Handler.purs line 88, column 3 - line 89, column 3: " + [ _339.constructor.name ]);
                };
                var _744 = Control_Monad_Writer.runWriter(_334);
                return Control_Monad_Eff_Class.liftEff(__dict_MonadEff_1)(Control_Apply["*>"](Control_Monad_Eff.applyEff)(Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(_744.value1)(applyUpdate))(Prelude["return"](Control_Monad_Eff.applicativeEff)(_744.value0)));
            };
        };
    };
};
var preventDefault = Control_Monad_Writer_Class.tell(Data_Monoid.monoidArray)(Control_Monad_Writer_Trans.monadWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))(Control_Monad_Writer_Class.monadWriterWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))([ PreventDefault.value ]);
var functorEventHandler = new Prelude.Functor(function (f) {
    return function (_335) {
        return Prelude["<$>"](Control_Monad_Writer_Trans.functorWriterT(Data_Identity.functorIdentity))(f)(_335);
    };
});
var applyEventHandler = new Prelude.Apply(function () {
    return functorEventHandler;
}, function (_336) {
    return function (_337) {
        return Prelude["<*>"](Control_Monad_Writer_Trans.applyWriterT(Data_Monoid.monoidArray)(Data_Identity.applyIdentity))(_336)(_337);
    };
});
var bindEventHandler = new Prelude.Bind(function () {
    return applyEventHandler;
}, function (_338) {
    return function (f) {
        return Prelude[">>="](Control_Monad_Writer_Trans.bindWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))(_338)(Prelude["<<<"](Prelude.semigroupoidFn)(unEventHandler)(f));
    };
});
var applicativeEventHandler = new Prelude.Applicative(function () {
    return applyEventHandler;
}, Prelude["<<<"](Prelude.semigroupoidFn)(EventHandler)(Prelude.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))));
var monadEventHandler = new Prelude.Monad(function () {
    return applicativeEventHandler;
}, function () {
    return bindEventHandler;
});
module.exports = {
    runEventHandler: runEventHandler, 
    stopImmediatePropagation: stopImmediatePropagation, 
    stopPropagation: stopPropagation, 
    preventDefault: preventDefault, 
    functorEventHandler: functorEventHandler, 
    applyEventHandler: applyEventHandler, 
    applicativeEventHandler: applicativeEventHandler, 
    bindEventHandler: bindEventHandler, 
    monadEventHandler: monadEventHandler
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Events.Handler/foreign.js","Control.Apply":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Apply/index.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","Control.Monad.Writer":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Writer/index.js","Control.Monad.Writer.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Writer.Class/index.js","Control.Monad.Writer.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Writer.Trans/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Identity":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Identity/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Halogen.HTML.Events.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Events.Types/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Events.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var DOM_HTML_Types = require("DOM.HTML.Types");
module.exports = {};

},{"DOM.HTML.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Types/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Events/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Halogen = require("Halogen");
var Halogen_HTML_Core = require("Halogen.HTML.Core");
var Control_Monad_Free = require("Control.Monad.Free");
var Data_Inject = require("Data.Inject");
var Halogen_HTML_Events_Handler = require("Halogen.HTML.Events.Handler");
var Halogen_HTML_Events_Types = require("Halogen.HTML.Events.Types");
var Halogen_Component = require("Halogen.Component");
var Halogen_Effects = require("Halogen.Effects");
var onUnload = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("unload"));
var onSubmit = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("submit"));
var onSelect = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("select"));
var onSearch = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("search"));
var onScroll = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("scroll"));
var onResize = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("resize"));
var onReset = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("reset"));
var onPageShow = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("pageshow"));
var onPageHide = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("pagehide"));
var onMouseUp = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("mouseup"));
var onMouseOver = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("mouseover"));
var onMouseOut = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("mouseout"));
var onMouseMove = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("mousemove"));
var onMouseLeave = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("mouseleave"));
var onMouseEnter = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("mouseenter"));
var onMouseDown = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("mousedown"));
var onLoad = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("load"));
var onKeyUp = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("keyup"));
var onKeyPress = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("keypress"));
var onKeyDown = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("keydown"));
var onInvalid = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("invalid"));
var onInput = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("input"));
var onHashChange = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("hashchange"));
var onFocusOut = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("focusout"));
var onFocusIn = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("focusin"));
var onFocus = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("focus"));
var onError = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("error"));
var onDoubleClick = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("dblclick"));
var onContextMenu = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("contextmenu"));
var onClick = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("click"));
var onChange = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("change"));
var onBlur = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("blur"));
var onBeforeUnload = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("beforeunload"));
var onAbort = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("abort"));
var input_ = function (__dict_Inject_0) {
    return function (f) {
        return function (_625) {
            return Prelude.pure(Halogen_HTML_Events_Handler.applicativeEventHandler)(Halogen.action(__dict_Inject_0)(f));
        };
    };
};
var input = function (__dict_Inject_1) {
    return function (f) {
        return function (x) {
            return Prelude.pure(Halogen_HTML_Events_Handler.applicativeEventHandler)(Halogen.action(__dict_Inject_1)(f(x)));
        };
    };
};
module.exports = {
    onFocusOut: onFocusOut, 
    onFocusIn: onFocusIn, 
    onFocus: onFocus, 
    onBlur: onBlur, 
    onKeyUp: onKeyUp, 
    onKeyPress: onKeyPress, 
    onKeyDown: onKeyDown, 
    onMouseUp: onMouseUp, 
    onMouseOut: onMouseOut, 
    onMouseOver: onMouseOver, 
    onMouseMove: onMouseMove, 
    onMouseLeave: onMouseLeave, 
    onMouseEnter: onMouseEnter, 
    onMouseDown: onMouseDown, 
    onDoubleClick: onDoubleClick, 
    onContextMenu: onContextMenu, 
    onClick: onClick, 
    onSubmit: onSubmit, 
    onSelect: onSelect, 
    onSearch: onSearch, 
    onReset: onReset, 
    onInvalid: onInvalid, 
    onInput: onInput, 
    onChange: onChange, 
    onUnload: onUnload, 
    onScroll: onScroll, 
    onResize: onResize, 
    onPageHide: onPageHide, 
    onPageShow: onPageShow, 
    onLoad: onLoad, 
    onHashChange: onHashChange, 
    onError: onError, 
    onBeforeUnload: onBeforeUnload, 
    onAbort: onAbort, 
    input_: input_, 
    input: input
};

},{"Control.Monad.Free":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Free/index.js","Data.Inject":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Inject/index.js","Halogen":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen/index.js","Halogen.Component":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Component/index.js","Halogen.Effects":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Effects/index.js","Halogen.HTML.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Core/index.js","Halogen.HTML.Events.Handler":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Events.Handler/index.js","Halogen.HTML.Events.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Events.Types/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Properties/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Halogen_HTML_Core = require("Halogen.HTML.Core");
var Prelude = require("Prelude");
var Data_String = require("Data.String");
var Data_Maybe = require("Data.Maybe");
var Halogen_HTML_Events_Types = require("Halogen.HTML.Events.Types");
var Halogen_HTML_Events_Handler = require("Halogen.HTML.Events.Handler");
var width = Halogen_HTML_Core.prop(Halogen_HTML_Core.numberIsProp)(Halogen_HTML_Core.propName("width"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("width")));
var value = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("value"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("value")));
var type_ = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("type"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("type")));
var title = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("title"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("title")));
var target = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("target"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("target")));
var src = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("src"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("src")));
var spellcheck = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("spellcheck"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("spellcheck")));
var selected = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("selected"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("selected")));
var rowSpan = Halogen_HTML_Core.prop(Halogen_HTML_Core.intIsProp)(Halogen_HTML_Core.propName("rowSpan"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("rowspan")));
var required = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("required"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("required")));
var rel = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("rel"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("rel")));
var readonly = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("readonly"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("readonly")));
var placeholder = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("placeholder"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("placeholder")));
var name = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("name"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("name")));
var key = Halogen_HTML_Core.Key.create;
var id_ = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("id"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("id")));
var href = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("href"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("href")));
var height = Halogen_HTML_Core.prop(Halogen_HTML_Core.numberIsProp)(Halogen_HTML_Core.propName("height"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("height")));
var $$for = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("htmlFor"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("for")));
var disabled = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("disabled"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("disabled")));
var enabled = Prelude["<<<"](Prelude.semigroupoidFn)(disabled)(Prelude.not(Prelude.booleanAlgebraBoolean));
var colSpan = Halogen_HTML_Core.prop(Halogen_HTML_Core.intIsProp)(Halogen_HTML_Core.propName("colSpan"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("colspan")));
var classes = Prelude["<<<"](Prelude.semigroupoidFn)(Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("className"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("class"))))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_String.joinWith(" "))(Prelude.map(Prelude.functorArray)(Halogen_HTML_Core.runClassName)));
var class_ = Prelude["<<<"](Prelude.semigroupoidFn)(Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("className"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("class"))))(Halogen_HTML_Core.runClassName);
var checked = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("checked"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("checked")));
var charset = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("charset"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("charset")));
var alt = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("alt"))(Data_Maybe.Just.create(Halogen_HTML_Core.attrName("alt")));
module.exports = {
    placeholder: placeholder, 
    selected: selected, 
    checked: checked, 
    enabled: enabled, 
    spellcheck: spellcheck, 
    readonly: readonly, 
    required: required, 
    disabled: disabled, 
    width: width, 
    value: value, 
    type_: type_, 
    title: title, 
    target: target, 
    src: src, 
    rel: rel, 
    name: name, 
    id_: id_, 
    href: href, 
    height: height, 
    "for": $$for, 
    rowSpan: rowSpan, 
    colSpan: colSpan, 
    classes: classes, 
    class_: class_, 
    charset: charset, 
    alt: alt, 
    key: key
};

},{"Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.String":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String/index.js","Halogen.HTML.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Core/index.js","Halogen.HTML.Events.Handler":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Events.Handler/index.js","Halogen.HTML.Events.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Events.Types/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Renderer.VirtualDOM/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_Monoid = require("Data.Monoid");
var Prelude = require("Prelude");
var Halogen_Internal_VirtualDOM = require("Halogen.Internal.VirtualDOM");
var Data_Nullable = require("Data.Nullable");
var Halogen_HTML_Core = require("Halogen.HTML.Core");
var Data_Foldable = require("Data.Foldable");
var Data_Traversable = require("Data.Traversable");
var Control_Monad_State = require("Control.Monad.State");
var Data_Exists = require("Data.Exists");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
var Data_ExistsR = require("Data.ExistsR");
var Halogen_HTML_Events_Handler = require("Halogen.HTML.Events.Handler");
var Control_Monad_State_Class = require("Control.Monad.State.Class");
var Data_StrMap = require("Data.StrMap");
var Control_Alt = require("Control.Alt");
var Control_Monad = require("Control.Monad");
var Control_Monad_Aff = require("Control.Monad.Aff");
var Control_Monad_Eff_Exception = require("Control.Monad.Eff.Exception");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_List = require("Data.List");
var Data_NaturalTransformation = require("Data.NaturalTransformation");
var Data_Tuple = require("Data.Tuple");
var DOM_HTML_Types = require("DOM.HTML.Types");
var Halogen_Effects = require("Halogen.Effects");
var Control_Monad_State_Trans = require("Control.Monad.State.Trans");
var Data_Identity = require("Data.Identity");
var handleAff = Control_Monad_Aff.runAff(Control_Monad_Eff_Exception.throwException)(Prelude["const"](Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit)));
var ifprop = function (oldState) {
    return function (getter) {
        return function (modifier) {
            return function (key) {
                return function (mkProp) {
                    return function (dr) {
                        return function (f) {
                            return Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.gets(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))(getter))(function (_96) {
                                var lastMemo = Data_StrMap.lookup(key)(getter(oldState));
                                var currentMemo = Data_StrMap.lookup(key)(_96);
                                var prop = (function () {
                                    var _791 = Control_Alt["<|>"](Data_Maybe.altMaybe)(lastMemo)(currentMemo);
                                    if (_791 instanceof Data_Maybe.Nothing) {
                                        return mkProp(Prelude["<<<"](Prelude.semigroupoidFn)(handleAff)(Prelude["<<<"](Prelude.semigroupoidFn)(dr)(f)));
                                    };
                                    if (_791 instanceof Data_Maybe.Just) {
                                        return _791.value0;
                                    };
                                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-halogen/src/Halogen/HTML/Renderer/VirtualDOM.purs line 83, column 1 - line 91, column 1: " + [ _791.constructor.name ]);
                                })();
                                return Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad.when(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Data_Maybe.isNothing(currentMemo))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))(modifier(Data_StrMap.insert(key)(prop)(_96)))))(function () {
                                    return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(prop);
                                });
                            });
                        };
                    };
                };
            };
        };
    };
};
var renderProp = function (dr) {
    return function (st) {
        return function (_622) {
            if (_622 instanceof Halogen_HTML_Core.Prop) {
                return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Exists.runExists(function (_620) {
                    return Halogen_Internal_VirtualDOM.prop(Halogen_HTML_Core.runPropName(_620.value0), _620.value1);
                })(_622.value0));
            };
            if (_622 instanceof Halogen_HTML_Core.Attr) {
                var attrName = Data_Maybe.maybe("")(function (ns$prime) {
                    return Halogen_HTML_Core.runNamespace(ns$prime) + ":";
                })(_622.value0) + Halogen_HTML_Core.runAttrName(_622.value1);
                return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Halogen_Internal_VirtualDOM.attr(attrName, _622.value2));
            };
            if (_622 instanceof Halogen_HTML_Core.Handler) {
                return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_ExistsR.runExistsR(function (_621) {
                    return Halogen_Internal_VirtualDOM.handlerProp(Halogen_HTML_Core.runEventName(_621.value0), function (ev) {
                        return handleAff(Prelude[">>="](Control_Monad_Aff.bindAff)(Halogen_HTML_Events_Handler.runEventHandler(Control_Monad_Aff.monadAff)(Control_Monad_Aff.monadEffAff)(ev)(_621.value1(ev)))(Data_Maybe.maybe(Prelude.pure(Control_Monad_Aff.applicativeAff)(Prelude.unit))(dr)));
                    });
                })(_622.value0));
            };
            if (_622 instanceof Halogen_HTML_Core.Initializer) {
                return ifprop(st)(function (_4) {
                    return _4.initializers;
                })(function (is) {
                    return function (_5) {
                        var _808 = {};
                        for (var _809 in _5) {
                            if (_5.hasOwnProperty(_809)) {
                                _808[_809] = _5[_809];
                            };
                        };
                        _808.initializers = is;
                        return _808;
                    };
                })(_622.value0)(Halogen_Internal_VirtualDOM.initProp)(dr)(_622.value1);
            };
            if (_622 instanceof Halogen_HTML_Core.Finalizer) {
                return ifprop(st)(function (_6) {
                    return _6.finalizers;
                })(function (fs) {
                    return function (_7) {
                        var _812 = {};
                        for (var _813 in _7) {
                            if (_7.hasOwnProperty(_813)) {
                                _812[_813] = _7[_813];
                            };
                        };
                        _812.finalizers = fs;
                        return _812;
                    };
                })(_622.value0)(Halogen_Internal_VirtualDOM.finalizerProp)(dr)(_622.value1);
            };
            return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Monoid.mempty(Halogen_Internal_VirtualDOM.monoidProps));
        };
    };
};
var findKey = function (r) {
    return function (_623) {
        if (_623 instanceof Halogen_HTML_Core.Key) {
            return new Data_Maybe.Just(_623.value0);
        };
        return r;
    };
};
var emptyRenderState = {
    initializers: Data_Monoid.mempty(Data_StrMap.monoidStrMap(Halogen_Internal_VirtualDOM.semigroupProps)), 
    finalizers: Data_Monoid.mempty(Data_StrMap.monoidStrMap(Halogen_Internal_VirtualDOM.semigroupProps))
};
var renderHTML = function (f) {
    return function (html) {
        return function (st) {
            var go = function (_624) {
                if (_624 instanceof Halogen_HTML_Core.Text) {
                    return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Halogen_Internal_VirtualDOM.vtext(_624.value0));
                };
                if (_624 instanceof Halogen_HTML_Core.Element) {
                    var tag = Halogen_HTML_Core.runTagName(_624.value1);
                    var ns$prime = Data_Nullable.toNullable(Prelude["<$>"](Data_Maybe.functorMaybe)(Halogen_HTML_Core.runNamespace)(_624.value0));
                    var key = Data_Nullable.toNullable(Data_Foldable.foldl(Data_Foldable.foldableArray)(findKey)(Data_Maybe.Nothing.value)(_624.value2));
                    return Prelude["<*>"](Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Prelude["<$>"](Control_Monad_State_Trans.functorStateT(Data_Identity.monadIdentity))(Halogen_Internal_VirtualDOM.vnode(ns$prime)(tag)(key))(Prelude["<$>"](Control_Monad_State_Trans.functorStateT(Data_Identity.monadIdentity))(Data_Foldable.fold(Data_Foldable.foldableArray)(Halogen_Internal_VirtualDOM.monoidProps))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(renderProp(f)(st))(_624.value2))))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(go)(_624.value3));
                };
                if (_624 instanceof Halogen_HTML_Core.Placeholder) {
                    return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Halogen_Internal_VirtualDOM.vtext(""));
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-halogen/src/Halogen/HTML/Renderer/VirtualDOM.purs line 48, column 1 - line 49, column 1: " + [ _624.constructor.name ]);
            };
            return Control_Monad_State.runState(go(html))(emptyRenderState);
        };
    };
};
module.exports = {
    emptyRenderState: emptyRenderState, 
    renderHTML: renderHTML
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Monad":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad/index.js","Control.Monad.Aff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff/index.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Exception":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Exception/index.js","Control.Monad.State":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State/index.js","Control.Monad.State.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State.Class/index.js","Control.Monad.State.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State.Trans/index.js","DOM.HTML.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Types/index.js","Data.Exists":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Exists/index.js","Data.ExistsR":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.ExistsR/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.Identity":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Identity/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.NaturalTransformation":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.NaturalTransformation/index.js","Data.Nullable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Nullable/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Halogen.Effects":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Effects/index.js","Halogen.HTML.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Core/index.js","Halogen.HTML.Events.Handler":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Events.Handler/index.js","Halogen.Internal.VirtualDOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Internal.VirtualDOM/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML/index.js":[function(require,module,exports){
arguments[4]["/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Effects/index.js"][0].apply(exports,arguments)
},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Internal.VirtualDOM/foreign.js":[function(require,module,exports){
/* global exports, require */
"use strict";

// module Halogen.Internal.VirtualDOM

// jshint maxparams: 2
exports.prop = function (key, value) {
  var props = {};
  props[key] = value;
  return props;
};

// jshint maxparams: 2
exports.attr = function (key, value) {
  var props = { attributes: {} };
  props.attributes[key] = value;
  return props;
};

// jshint maxparams: 2
exports.handlerProp = function (key, f) {
  var props = {};
  var Hook = function () {};
  Hook.prototype.callback = function (e) {
    f(e)();
  };
  Hook.prototype.hook = function (node) {
    node.addEventListener(key, this.callback);
  };
  Hook.prototype.unhook = function (node) {
    node.removeEventListener(key, this.callback);
  };
  props["halogen-hook-" + key] = new Hook(f);
  return props;
};

// jshint maxparams: 1
exports.initProp = function (f) {
  var hasRun = false;
  var Hook = function () {};
  Hook.prototype.hook = function (node) {
    if (!hasRun) {
      hasRun = true;
      f(node)();
    }
  };
  return { "halogen-init": new Hook(f) };
};

exports.finalizerProp = function (f) {
  var hasRun = false;
  var Hook = function () {};
  Hook.prototype.unhook = function (node) {
    if (!hasRun) {
      hasRun = true;
      f(node)();
    }
  };
  return { "halogen-final": new Hook(f) };
};

exports.concatProps = function () {
  // jshint maxparams: 2
  var hOP = Object.prototype.hasOwnProperty;
  var copy = function (props, result) {
    for (var key in props) {
      if (hOP.call(props, key)) {
        if (key === "attributes") {
          var attrs = props[key];
          var resultAttrs = result[key] || (result[key] = {});
          for (var attr in attrs) {
            if (hOP.call(attrs, attr)) {
              resultAttrs[attr] = attrs[attr];
            }
          }
        } else {
          result[key] = props[key];
        }
      }
    }
    return result;
  };
  return function (p1, p2) {
    return copy(p2, copy(p1, {}));
  };
}();

exports.emptyProps = {};

exports.createElement = function () {
  var vcreateElement = require("virtual-dom/create-element");
  return function (vtree) {
    return vcreateElement(vtree);
  };
}();

exports.diff = function () {
  var vdiff = require("virtual-dom/diff");
  return function (vtree1) {
    return function (vtree2) {
      return vdiff(vtree1, vtree2);
    };
  };
}();

exports.patch = function () {
  var vpatch = require("virtual-dom/patch");
  return function (p) {
    return function (node) {
      return function () {
        return vpatch(node, p);
      };
    };
  };
}();

exports.vtext = function () {
  var VText = require("virtual-dom/vnode/vtext");
  return function (s) {
    return new VText(s);
  };
}();

exports.vnode = function () {
  var VirtualNode = require("virtual-dom/vnode/vnode");
  var SoftSetHook = require("virtual-dom/virtual-hyperscript/hooks/soft-set-hook");
  return function (namespace) {
    return function (name) {
      return function (key) {
        return function (props) {
          return function (children) {
            if (name === "input" && props.value !== undefined) {
              props.value = new SoftSetHook(props.value);
            }
            return new VirtualNode(name, props, children, key, namespace);
          };
        };
      };
    };
  };
}();

},{"virtual-dom/create-element":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/create-element.js","virtual-dom/diff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/diff.js","virtual-dom/patch":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/patch.js","virtual-dom/virtual-hyperscript/hooks/soft-set-hook":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/virtual-hyperscript/hooks/soft-set-hook.js","virtual-dom/vnode/vnode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/vnode.js","virtual-dom/vnode/vtext":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/node_modules/virtual-dom/vnode/vtext.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Internal.VirtualDOM/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Monoid = require("Data.Monoid");
var Data_Nullable = require("Data.Nullable");
var DOM = require("DOM");
var DOM_HTML_Types = require("DOM.HTML.Types");
var semigroupProps = new Prelude.Semigroup(Data_Function.runFn2($foreign.concatProps));
var monoidProps = new Data_Monoid.Monoid(function () {
    return semigroupProps;
}, $foreign.emptyProps);
module.exports = {
    semigroupProps: semigroupProps, 
    monoidProps: monoidProps, 
    widget: $foreign.widget, 
    vnode: $foreign.vnode, 
    vtext: $foreign.vtext, 
    patch: $foreign.patch, 
    diff: $foreign.diff, 
    createElement: $foreign.createElement, 
    finalizerProp: $foreign.finalizerProp, 
    initProp: $foreign.initProp, 
    handlerProp: $foreign.handlerProp, 
    attr: $foreign.attr, 
    prop: $foreign.prop
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Internal.VirtualDOM/foreign.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","DOM.HTML.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Types/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.Monoid":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Monoid/index.js","Data.Nullable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Nullable/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Query.StateF/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Free = require("Control.Monad.Free");
var Control_Monad_State_Class = require("Control.Monad.State.Class");
var Data_Functor = require("Data.Functor");
var Control_Monad_State = require("Control.Monad.State");
var Data_Inject = require("Data.Inject");
var Data_NaturalTransformation = require("Data.NaturalTransformation");
var Get = (function () {
    function Get(value0) {
        this.value0 = value0;
    };
    Get.create = function (value0) {
        return new Get(value0);
    };
    return Get;
})();
var Modify = (function () {
    function Modify(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Modify.create = function (value0) {
        return function (value1) {
            return new Modify(value0, value1);
        };
    };
    return Modify;
})();
var stateN = function (__dict_Monad_0) {
    return function (__dict_MonadState_1) {
        return function (_430) {
            if (_430 instanceof Get) {
                return Prelude[">>="](__dict_Monad_0["__superclass_Prelude.Bind_1"]())(Control_Monad_State_Class.get(__dict_Monad_0)(__dict_MonadState_1))(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.pure(__dict_Monad_0["__superclass_Prelude.Applicative_0"]()))(_430.value0));
            };
            if (_430 instanceof Modify) {
                return Data_Functor["$>"](((__dict_Monad_0["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Control_Monad_State_Class.modify(__dict_Monad_0)(__dict_MonadState_1)(_430.value0))(_430.value1);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-halogen/src/Halogen/Query/StateF.purs line 86, column 1 - line 87, column 1: " + [ _430.constructor.name ]);
        };
    };
};
var modify = function (__dict_Inject_2) {
    return function (f) {
        return Control_Monad_Free.liftFI(__dict_Inject_2)(new Modify(f, Prelude.unit));
    };
};
var gets = function (__dict_Inject_3) {
    return function (f) {
        return Control_Monad_Free.liftFI(__dict_Inject_3)(new Get(f));
    };
};
var get = function (__dict_Inject_4) {
    return gets(__dict_Inject_4)(Prelude.id(Prelude.categoryFn));
};
var functorStateF = new Prelude.Functor(function (f) {
    return function (_431) {
        if (_431 instanceof Get) {
            return new Get(Prelude["<<<"](Prelude.semigroupoidFn)(f)(_431.value0));
        };
        if (_431 instanceof Modify) {
            return new Modify(_431.value0, f(_431.value1));
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-halogen/src/Halogen/Query/StateF.purs line 27, column 1 - line 46, column 1: " + [ f.constructor.name, _431.constructor.name ]);
    };
});
module.exports = {
    Get: Get, 
    Modify: Modify, 
    stateN: stateN, 
    modify: modify, 
    gets: gets, 
    get: get, 
    functorStateF: functorStateF
};

},{"Control.Monad.Free":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Free/index.js","Control.Monad.State":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State/index.js","Control.Monad.State.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State.Class/index.js","Data.Functor":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor/index.js","Data.Inject":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Inject/index.js","Data.NaturalTransformation":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.NaturalTransformation/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Query.SubscribeF/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Control_Coroutine_Aff = require("Control.Coroutine.Aff");
var Prelude = require("Prelude");
var Control_Bind = require("Control.Bind");
var Control_Monad_Free = require("Control.Monad.Free");
var Control_Monad_Free_Trans = require("Control.Monad.Free.Trans");
var Data_Bifunctor = require("Data.Bifunctor");
var Data_Functor = require("Data.Functor");
var Control_Coroutine = require("Control.Coroutine");
var Control_Monad_Aff = require("Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("Control.Monad.Aff.AVar");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Data_Either = require("Data.Either");
var Data_Inject = require("Data.Inject");
var Data_NaturalTransformation = require("Data.NaturalTransformation");
var Subscribe = (function () {
    function Subscribe(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Subscribe.create = function (value0) {
        return function (value1) {
            return new Subscribe(value0, value1);
        };
    };
    return Subscribe;
})();
var subscribeN = function (__dict_MonadRec_0) {
    return function (c) {
        return function (_434) {
            return Data_Functor["$>"]((((__dict_MonadRec_0["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Control_Coroutine.runProcess(__dict_MonadRec_0)(Control_Coroutine["$$"](__dict_MonadRec_0)(_434.value0)(c)))(_434.value1);
        };
    };
};
var subscribe = function (__dict_Inject_1) {
    return function (p) {
        return Control_Monad_Free.liftFI(__dict_Inject_1)(new Subscribe(p, Prelude.unit));
    };
};
var remapSubscribe = function (__dict_Functor_2) {
    return function (nat) {
        return function (_432) {
            return new Subscribe(Control_Monad_Free_Trans.interpret(Control_Coroutine.functorEmit)(__dict_Functor_2)(Data_Bifunctor.lmap(Control_Coroutine.bifunctorEmit)(nat))(_432.value0), _432.value1);
        };
    };
};
var hoistSubscribe = function (__dict_Functor_3) {
    return function (nat) {
        return function (_433) {
            return new Subscribe(Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(__dict_Functor_3)(nat)(_433.value0), _433.value1);
        };
    };
};
var functorSubscribeF = new Prelude.Functor(function (f) {
    return function (_435) {
        return new Subscribe(_435.value0, f(_435.value1));
    };
});
var eventSource_ = function (attach) {
    return function (handle) {
        return Control_Coroutine_Aff.produce(function (emit) {
            return attach(Control_Bind["=<<"](Control_Monad_Eff.bindEff)(Prelude["<<<"](Prelude.semigroupoidFn)(emit)(Data_Either.Left.create))(handle));
        });
    };
};
var eventSource = function (attach) {
    return function (handle) {
        return Control_Coroutine_Aff.produce(function (emit) {
            return attach(Control_Bind["<=<"](Control_Monad_Eff.bindEff)(Prelude["<<<"](Prelude.semigroupoidFn)(emit)(Data_Either.Left.create))(handle));
        });
    };
};
module.exports = {
    Subscribe: Subscribe, 
    subscribeN: subscribeN, 
    hoistSubscribe: hoistSubscribe, 
    remapSubscribe: remapSubscribe, 
    subscribe: subscribe, 
    eventSource_: eventSource_, 
    eventSource: eventSource, 
    functorSubscribeF: functorSubscribeF
};

},{"Control.Bind":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Bind/index.js","Control.Coroutine":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Coroutine/index.js","Control.Coroutine.Aff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Coroutine.Aff/index.js","Control.Monad.Aff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff/index.js","Control.Monad.Aff.AVar":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff.AVar/index.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","Control.Monad.Free":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Free/index.js","Control.Monad.Free.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Free.Trans/index.js","Control.Monad.Rec.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Rec.Class/index.js","Data.Bifunctor":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Bifunctor/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Functor":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor/index.js","Data.Inject":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Inject/index.js","Data.NaturalTransformation":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.NaturalTransformation/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Util/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Nullable = require("Data.Nullable");
var Control_Bind = require("Control.Bind");
var DOM_HTML_Document = require("DOM.HTML.Document");
var DOM_HTML_Window = require("DOM.HTML.Window");
var DOM_HTML = require("DOM.HTML");
var DOM_Node_Node = require("DOM.Node.Node");
var DOM_HTML_Types = require("DOM.HTML.Types");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var DOM_Event_EventTarget = require("DOM.Event.EventTarget");
var DOM_Event_EventTypes = require("DOM.Event.EventTypes");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var DOM = require("DOM");
var DOM_Event_Types = require("DOM.Event.Types");
var appendToBody = function (__dict_MonadEff_0) {
    return function (e) {
        var onLoad = function (_618) {
            return function __do() {
                var _94 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(Control_Bind["=<<"](Control_Monad_Eff.bindEff)(Control_Bind["<=<"](Control_Monad_Eff.bindEff)(DOM_HTML_Document.body)(DOM_HTML_Window.document))(DOM_HTML.window))();
                return (function () {
                    if (_94 instanceof Data_Maybe.Nothing) {
                        return Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit);
                    };
                    if (_94 instanceof Data_Maybe.Just) {
                        return Prelude["void"](Control_Monad_Eff.functorEff)(DOM_Node_Node.appendChild(DOM_HTML_Types.htmlElementToNode(e))(DOM_HTML_Types.htmlElementToNode(_94.value0)));
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-halogen/src/Halogen/Util.purs line 26, column 3 - line 27, column 3: " + [ _94.constructor.name ]);
                })()();
            };
        };
        return Control_Monad_Eff_Class.liftEff(__dict_MonadEff_0)(Control_Bind["=<<"](Control_Monad_Eff.bindEff)(Prelude["<<<"](Prelude.semigroupoidFn)(DOM_Event_EventTarget.addEventListener(DOM_Event_EventTypes.load)(DOM_Event_EventTarget.eventListener(onLoad))(false))(DOM_HTML_Types.windowToEventTarget))(DOM_HTML.window));
    };
};
module.exports = {
    appendToBody: appendToBody
};

},{"Control.Bind":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Bind/index.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","DOM.Event.EventTarget":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.EventTarget/index.js","DOM.Event.EventTypes":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.EventTypes/index.js","DOM.Event.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.Types/index.js","DOM.HTML":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML/index.js","DOM.HTML.Document":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Document/index.js","DOM.HTML.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Types/index.js","DOM.HTML.Window":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Window/index.js","DOM.Node.Node":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.Node/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Nullable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Nullable/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Control_Monad_Free = require("Control.Monad.Free");
var Halogen_Component = require("Halogen.Component");
var Halogen_Query_SubscribeF = require("Halogen.Query.SubscribeF");
var Prelude = require("Prelude");
var Control_Monad_Aff_AVar = require("Control.Monad.Aff.AVar");
var Control_Monad_State = require("Control.Monad.State");
var Halogen_Query_StateF = require("Halogen.Query.StateF");
var Halogen_HTML_Renderer_VirtualDOM = require("Halogen.HTML.Renderer.VirtualDOM");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Halogen_Internal_VirtualDOM = require("Halogen.Internal.VirtualDOM");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Control_Coroutine = require("Control.Coroutine");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Data_Functor_Coproduct = require("Data.Functor.Coproduct");
var Data_Inject = require("Data.Inject");
var Control_Monad_Aff = require("Control.Monad.Aff");
var Data_NaturalTransformation = require("Data.NaturalTransformation");
var Data_Tuple = require("Data.Tuple");
var Data_Void = require("Data.Void");
var DOM_HTML_Types = require("DOM.HTML.Types");
var Halogen_Effects = require("Halogen.Effects");
var Control_Monad_State_Trans = require("Control.Monad.State.Trans");
var Data_Identity = require("Data.Identity");
var Control_Monad_State_Class = require("Control.Monad.State.Class");
var Control_Monad_Free_Trans = require("Control.Monad.Free.Trans");
var runUI = function (c) {
    return function (s) {
        var $$eval = function (ref) {
            var runStateStep = function (i) {
                return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ref))(function (_98) {
                    var _792 = Control_Monad_State.runState(Halogen_Query_StateF.stateN(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))(i))(_98.state);
                    var _793 = Halogen_Component.renderComponent(c)(_792.value1);
                    var _794 = Halogen_HTML_Renderer_VirtualDOM.renderHTML(driver(ref))(_793.value0)(_98.memo);
                    return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Halogen_Internal_VirtualDOM.patch(Halogen_Internal_VirtualDOM.diff(_98.vtree)(_794.value0))(_98.node)))(function (_97) {
                        return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(ref)({
                            node: _97, 
                            vtree: _794.value0, 
                            state: _793.value1, 
                            memo: _794.value1
                        }))(function () {
                            return Prelude.pure(Control_Monad_Aff.applicativeAff)(_792.value0);
                        });
                    });
                });
            };
            var consumer = Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Prelude[">>="](Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Coroutine.await(Control_Monad_Aff.monadAff))(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Control_Monad_Aff.monadAff))(driver(ref))));
            var runWidgetStep = Halogen_Query_SubscribeF.subscribeN(Control_Monad_Aff.monadRecAff)(consumer);
            return Data_Functor_Coproduct.coproduct(runStateStep)(Data_Functor_Coproduct.coproduct(runWidgetStep)(Prelude.id(Prelude.categoryFn)));
        };
        var driver = function (ref) {
            return function (q) {
                return Control_Monad_Free.runFreeM(Data_Functor_Coproduct.functorCoproduct(Halogen_Query_StateF.functorStateF)(Data_Functor_Coproduct.functorCoproduct(Halogen_Query_SubscribeF.functorSubscribeF)(Control_Monad_Aff.functorAff)))(Control_Monad_Aff.monadRecAff)($$eval(ref))(Halogen_Component.queryComponent(c)(q));
            };
        };
        var _806 = Halogen_Component.renderComponent(c)(s);
        return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (_99) {
            var _808 = Halogen_HTML_Renderer_VirtualDOM.renderHTML(driver(_99))(_806.value0)(Halogen_HTML_Renderer_VirtualDOM.emptyRenderState);
            var node = Halogen_Internal_VirtualDOM.createElement(_808.value0);
            return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(_99)({
                node: node, 
                vtree: _808.value0, 
                state: _806.value1, 
                memo: _808.value1
            }))(function () {
                return Prelude.pure(Control_Monad_Aff.applicativeAff)({
                    node: node, 
                    driver: driver(_99)
                });
            });
        });
    };
};
var request = function (__dict_Inject_0) {
    return function (f) {
        return Data_Inject.inj(__dict_Inject_0)(f(Prelude.id(Prelude.categoryFn)));
    };
};
var action = function (__dict_Inject_1) {
    return function (f) {
        return Data_Inject.inj(__dict_Inject_1)(f(Prelude.unit));
    };
};
module.exports = {
    request: request, 
    action: action, 
    runUI: runUI
};

},{"Control.Coroutine":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Coroutine/index.js","Control.Monad.Aff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff/index.js","Control.Monad.Aff.AVar":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff.AVar/index.js","Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","Control.Monad.Free":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Free/index.js","Control.Monad.Free.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Free.Trans/index.js","Control.Monad.Rec.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Rec.Class/index.js","Control.Monad.State":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State/index.js","Control.Monad.State.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State.Class/index.js","Control.Monad.State.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.State.Trans/index.js","Control.Monad.Trans":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Trans/index.js","DOM.HTML.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Types/index.js","Data.Functor.Coproduct":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Functor.Coproduct/index.js","Data.Identity":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Identity/index.js","Data.Inject":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Inject/index.js","Data.NaturalTransformation":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.NaturalTransformation/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Data.Void":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Void/index.js","Halogen.Component":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Component/index.js","Halogen.Effects":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Effects/index.js","Halogen.HTML.Renderer.VirtualDOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Renderer.VirtualDOM/index.js","Halogen.Internal.VirtualDOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Internal.VirtualDOM/index.js","Halogen.Query.StateF":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Query.StateF/index.js","Halogen.Query.SubscribeF":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Query.SubscribeF/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Main/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Control_Monad_Aff = require("Control.Monad.Aff");
var Halogen = require("Halogen");
var Prelude = require("Prelude");
var Halogen_Util = require("Halogen.Util");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var DOM_HTML = require("DOM.HTML");
var Routing = require("Routing");
var Routes = require("Routes");
var DOM_Event_EventTarget = require("DOM.Event.EventTarget");
var DOM_Event_EventTypes = require("DOM.Event.EventTypes");
var DOM_HTML_Types = require("DOM.HTML.Types");
var Standings = require("Standings");
var Halogen_Component = require("Halogen.Component");
var Halogen_HTML_Elements = require("Halogen.HTML.Elements");
var Halogen_HTML_Properties = require("Halogen.HTML.Properties");
var Halogen_HTML_Core = require("Halogen.HTML.Core");
var Ranking = require("Ranking");
var Util = require("Util");
var Ratings = require("Ratings");
var Tip = require("Tip");
var Charts = require("Charts");
var ECharts_Chart = require("ECharts.Chart");
var Halogen_Query_StateF = require("Halogen.Query.StateF");
var Control_Monad_Free = require("Control.Monad.Free");
var Data_Array = require("Data.Array");
var Halogen_HTML_Events = require("Halogen.HTML.Events");
var Bootstrap = require("Bootstrap");
var Control_Apply = require("Control.Apply");
var Control_Bind = require("Control.Bind");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Console = require("Control.Monad.Eff.Console");
var Data_Traversable = require("Data.Traversable");
var Data_Int = require("Data.Int");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Data_Tuple = require("Data.Tuple");
var Halogen_HTML = require("Halogen.HTML");
var DOM = require("DOM");
var DOM_Event_Types = require("DOM.Event.Types");
var DOM_HTML_Document = require("DOM.HTML.Document");
var Network_HTTP_Affjax = require("Network.HTTP.Affjax");
var Team = require("Team");
var Player = require("Player");
var Halogen_Effects = require("Halogen.Effects");
var Data_Inject = require("Data.Inject");
var Loading = (function () {
    function Loading() {

    };
    Loading.value = new Loading();
    return Loading;
})();
var $$Error = (function () {
    function Error(value0) {
        this.value0 = value0;
    };
    Error.create = function (value0) {
        return new Error(value0);
    };
    return Error;
})();
var Players = (function () {
    function Players(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Players.create = function (value0) {
        return function (value1) {
            return new Players(value0, value1);
        };
    };
    return Players;
})();
var Tips = (function () {
    function Tips(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Tips.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Tips(value0, value1, value2);
            };
        };
    };
    return Tips;
})();
var SelectPlayer = (function () {
    function SelectPlayer(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SelectPlayer.create = function (value0) {
        return function (value1) {
            return new SelectPlayer(value0, value1);
        };
    };
    return SelectPlayer;
})();
var SelectDay = (function () {
    function SelectDay(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SelectDay.create = function (value0) {
        return function (value1) {
            return new SelectDay(value0, value1);
        };
    };
    return SelectDay;
})();
var Overview = (function () {
    function Overview(value0) {
        this.value0 = value0;
    };
    Overview.create = function (value0) {
        return new Overview(value0);
    };
    return Overview;
})();
var Use = (function () {
    function Use(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Use.create = function (value0) {
        return function (value1) {
            return new Use(value0, value1);
        };
    };
    return Use;
})();
var updateMetric = function (metric_1) {
    return function (_72) {
        if (_72 instanceof Loading) {
            return _72;
        };
        if (_72 instanceof $$Error) {
            return _72;
        };
        if (_72 instanceof Tips) {
            return new Tips(_72.value0, metric_1, _72.value2);
        };
        if (_72 instanceof Players) {
            return new Players(metric_1, _72.value1);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Main.purs line 103, column 1 - line 104, column 1: " + [ metric_1.constructor.name, _72.constructor.name ]);
    };
};
var updateMatchday = function (standings) {
    return function (day) {
        return function (_71) {
            if (_71 instanceof Loading) {
                return _71;
            };
            if (_71 instanceof $$Error) {
                return _71;
            };
            if (_71 instanceof Tips) {
                return new Tips(_71.value0, _71.value1, {
                    standings: standings, 
                    currentMatchday: day, 
                    maxMatchday: _71.value2.maxMatchday
                });
            };
            if (_71 instanceof Players) {
                return new Players(_71.value0, {
                    standings: standings, 
                    currentMatchday: day, 
                    maxMatchday: _71.value1.maxMatchday
                });
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Main.purs line 95, column 1 - line 96, column 1: " + [ standings.constructor.name, day.constructor.name, _71.constructor.name ]);
        };
    };
};
var rowColor = function (dist) {
    return function (trend) {
        var trendClass = function (_79) {
            if (_79 instanceof Tip.Correct) {
                return "correct";
            };
            if (_79 instanceof Tip.Worse) {
                return "worse";
            };
            if (_79 instanceof Tip.Better) {
                return "better";
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Main.purs line 302, column 3 - line 304, column 1: " + [ _79.constructor.name ]);
        };
        var distClass = function (i) {
            return "dist-" + Prelude.show(Prelude.showInt)(i);
        };
        return Halogen_HTML_Properties.classes([ Halogen_HTML_Core.className(trendClass(trend)), Halogen_HTML_Core.className(distClass(dist)) ]);
    };
};
var renderPage = function (contents) {
    return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("content")) ])(Data_Array[":"](Halogen_HTML_Elements.h1([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("jumbotron")) ])([ Halogen_HTML_Elements.text("Saison Spektakel 2015/16") ]))(contents));
};
var renderMetrics = function (metric_1) {
    var row = function (name) {
        return function (metric$prime) {
            return new Data_Tuple.Tuple(Halogen_HTML_Elements.a([ Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Data_Inject.injectReflexive)(Use.create(metric$prime))) ])([ Halogen_HTML_Elements.text(name) ]), Prelude["=="](Tip.eqMetric)(metric_1)(metric$prime));
        };
    };
    return Bootstrap.navTabs([ row("Manhattan")(Tip.Manhattan.value), row("Euklid")(Tip.Euclid.value), row("Wulf")(Tip.Wulf.value) ]);
};
var renderMatchdays = function (s) {
    var row = function (day$prime) {
        return new Data_Tuple.Tuple(Halogen_HTML_Elements.a([ Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Data_Inject.injectReflexive)(SelectDay.create(day$prime))) ])([ Halogen_HTML_Elements.text(Prelude.show(Prelude.showInt)(day$prime)) ]), Prelude["=="](Prelude.eqInt)(s.currentMatchday)(day$prime));
    };
    return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("matchdays")) ])([ Bootstrap.navPills(Prelude.map(Prelude.functorArray)(row)(Data_Array.range(1)(s.maxMatchday))) ]);
};
var renderCurrentTable = function (standings) {
    var row = function (icons) {
        return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("current-table-row")) ])(icons);
    };
    var icon = function (team) {
        return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("team")) ])([ Halogen_HTML_Elements.img([ Halogen_HTML_Properties.src("images/" + (Prelude.show(Team.showTeam)(team) + ".svg")), Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("icon")) ]) ]);
    };
    var icons = Prelude.map(Prelude.functorArray)(icon)(standings);
    return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("current-table")) ])(Prelude["++"](Prelude.semigroupArray)(Prelude.map(Prelude.functorArray)(row)(Util.chunks(3)(icons)))([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("clear")) ])([  ]) ]));
};
var ratingsTable = function (ratings) {
    var ratingRow = function (rating) {
        return Halogen_HTML_Elements.tr([ rowColor(rating.dist)(rating.trend) ])([ Halogen_HTML_Elements.td_([ Halogen_HTML_Elements.text(Prelude.show(Prelude.showInt)(rating.pos)) ]), Halogen_HTML_Elements.td_([ Halogen_HTML_Elements.text(Util.pretty(Team.prettyTeam)(rating.team)) ]), Halogen_HTML_Elements.td_([ Halogen_HTML_Elements.text(Util.showNumber(1)(rating.value)) ]) ]);
    };
    var ratingHeader = Halogen_HTML_Elements.tr_([ Halogen_HTML_Elements.th_([ Halogen_HTML_Elements.text("#") ]), Halogen_HTML_Elements.th_([ Halogen_HTML_Elements.text("Verein") ]), Halogen_HTML_Elements.th_([ Halogen_HTML_Elements.text("Abstand") ]) ]);
    return Halogen_HTML_Elements.table([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("table")) ])([ Halogen_HTML_Elements.thead_([ ratingHeader ]), Halogen_HTML_Elements.tbody_(Prelude.map(Prelude.functorArray)(ratingRow)(ratings)) ]);
};
var pointsTable = function (rankings) {
    var pointsRow = function (i) {
        return function (ranking) {
            return Halogen_HTML_Elements.tr_([ Halogen_HTML_Elements.td_([ Halogen_HTML_Elements.text(Prelude.show(Prelude.showInt)(i)) ]), Halogen_HTML_Elements.td_([ Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href(Routes.reverseRoute(new Routes.TipsRoute(ranking.player))) ])([ Halogen_HTML_Elements.text(Util.pretty(Player.prettyPlayer)(ranking.player)) ]) ]), Halogen_HTML_Elements.td_([ Halogen_HTML_Elements.text(Util.showNumber(1)(ranking.points)) ]) ]);
        };
    };
    var pointsHeader = Halogen_HTML_Elements.tr_([ Halogen_HTML_Elements.th_([ Halogen_HTML_Elements.text("#") ]), Halogen_HTML_Elements.th_([ Halogen_HTML_Elements.text("Tipper") ]), Halogen_HTML_Elements.th_([ Halogen_HTML_Elements.text("Punkte") ]) ]);
    return Halogen_HTML_Elements.table([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("table")) ])([ Halogen_HTML_Elements.thead_([ pointsHeader ]), Halogen_HTML_Elements.tbody_(Data_Array.zipWith(pointsRow)(Data_Array.range(1)(Data_Array.length(rankings)))(rankings)) ]);
};
var onResize = function (handler) {
    return function __do() {
        var _23 = DOM_HTML.window();
        return DOM_Event_EventTarget.addEventListener(DOM_Event_EventTypes.resize)(DOM_Event_EventTarget.eventListener(Prelude["const"](handler)))(false)(DOM_HTML_Types.windowToEventTarget(_23))();
    };
};
var renderRatingsCharts = function (aggregated) {
    return function (metric_1) {
        return function (playerRatings) {
            return function (className) {
                return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(function __do() {
                    var _26 = Charts.renderRatingsChart(aggregated)(metric_1)(playerRatings)(className)();
                    return (function () {
                        if (_26 instanceof Data_Maybe.Nothing) {
                            return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
                        };
                        if (_26 instanceof Data_Maybe.Just) {
                            return onResize(ECharts_Chart.resize(_26.value0));
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Main.purs line 176, column 1 - line 177, column 1: " + [ _26.constructor.name ]);
                    })()();
                });
            };
        };
    };
};
var onLoad = function (handler) {
    return function __do() {
        var _22 = DOM_HTML.window();
        return DOM_Event_EventTarget.addEventListener(DOM_Event_EventTypes.load)(DOM_Event_EventTarget.eventListener(Prelude["const"](handler)))(false)(DOM_HTML_Types.windowToEventTarget(_22))();
    };
};
var matchdayState = function (_74) {
    if (_74 instanceof Tips) {
        return Prelude["return"](Control_Monad_Aff.applicativeAff)(new Data_Either.Right(_74.value2));
    };
    if (_74 instanceof Players) {
        return Prelude["return"](Control_Monad_Aff.applicativeAff)(new Data_Either.Right(_74.value1));
    };
    return Prelude.bind(Control_Monad_Aff.bindAff)(Standings.leagueTable(Data_Maybe.Nothing.value))(function (_25) {
        return Prelude["return"](Control_Monad_Aff.applicativeAff)(Prelude.bind(Data_Either.bindEither)(_25)(function (_24) {
            return Prelude["return"](Data_Either.applicativeEither)({
                standings: _24.value1, 
                currentMatchday: _24.value0, 
                maxMatchday: _24.value0
            });
        }));
    });
};
var initialState = Loading.value;
var initialMetric = Tip.Manhattan.value;
var metric = function (_73) {
    if (_73 instanceof Tips) {
        return _73.value1;
    };
    if (_73 instanceof Players) {
        return _73.value0;
    };
    return initialMetric;
};
var render = function (_75) {
    if (_75 instanceof Loading) {
        return renderPage([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Elements.text("Loading Data...") ]) ]);
    };
    if (_75 instanceof $$Error) {
        return renderPage([ Halogen_HTML_Elements.text("An error occurred: " + _75.value0) ]);
    };
    if (_75 instanceof Players) {
        var chartDiv2 = Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("ratings-chart-2")) ])([  ]);
        var chartDiv = Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("ratings-chart")) ])([  ]);
        var rankings = Ranking.rankingsForStandings(_75.value0)(_75.value1.standings);
        return renderPage([ renderCurrentTable(_75.value1.standings), renderMetrics(_75.value0), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("main-content")) ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("bs-example")) ])([ pointsTable(rankings) ]) ]), chartDiv, chartDiv2 ]);
    };
    if (_75 instanceof Tips) {
        var chartDiv2 = Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("ratings-chart-2")) ])([  ]);
        var chartDiv = Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("ratings-chart")) ])([  ]);
        return renderPage([ renderCurrentTable(_75.value2.standings), renderMetrics(_75.value1), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("main-content")) ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("players-nav")) ])([ Halogen_HTML_Elements.h2_([ Halogen_HTML_Elements.text(Util.pretty(Player.prettyPlayer)(_75.value0)) ]), Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href(Routes.reverseRoute(Routes.PlayersRoute.value)) ])([ Halogen_HTML_Elements.text("Zur Übersicht") ]) ]), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("bs-example")) ])([ ratingsTable(Ratings.ratings(_75.value1)(Tip.tipsForPlayer(_75.value0))(_75.value2.standings)) ]) ]), chartDiv, chartDiv2, renderMatchdays(_75.value2) ]);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Main.purs line 134, column 1 - line 135, column 1: " + [ _75.constructor.name ]);
};
var renderCharts = function (_76) {
    if (_76 instanceof Loading) {
        return Prelude["return"](Control_Monad_Aff.applicativeAff)(Prelude.unit);
    };
    if (_76 instanceof $$Error) {
        return Prelude["return"](Control_Monad_Aff.applicativeAff)(Prelude.unit);
    };
    if (_76 instanceof Players) {
        var players = Prelude.map(Prelude.functorArray)(function (_5) {
            return _5.player;
        })(Ranking.rankingsForStandings(metric(_76))(_76.value1.standings));
        var playerRatings = Prelude.map(Prelude.functorArray)(function (p) {
            return new Data_Tuple.Tuple(p, Ratings.ratings(metric(_76))(Tip.tipsForPlayer(p))(_76.value1.standings));
        })(players);
        return Prelude.bind(Control_Monad_Aff.bindAff)(renderRatingsCharts(true)(metric(_76))(playerRatings)("ratings-chart"))(function () {
            return renderRatingsCharts(false)(metric(_76))(playerRatings)("ratings-chart-2");
        });
    };
    if (_76 instanceof Tips) {
        var playerRating = new Data_Tuple.Tuple(_76.value0, Ratings.ratings(metric(_76))(Tip.tipsForPlayer(_76.value0))(_76.value2.standings));
        return Prelude.bind(Control_Monad_Aff.bindAff)(renderRatingsCharts(true)(metric(_76))([ playerRating ])("ratings-chart"))(function () {
            return renderRatingsCharts(false)(metric(_76))([ playerRating ])("ratings-chart-2");
        });
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Main.purs line 183, column 1 - line 184, column 1: " + [ _76.constructor.name ]);
};
var $$eval = function (_77) {
    if (_77 instanceof Overview) {
        return Prelude.bind(Control_Monad_Free.freeBind)(Halogen_Query_StateF.get(Data_Inject.injectLeft))(function (_28) {
            return Prelude.bind(Control_Monad_Free.freeBind)(Control_Monad_Free.liftFI(Data_Inject.injectRight(Data_Inject.injectRight(Data_Inject.injectReflexive)))(matchdayState(_28)))(function (_27) {
                return Prelude.bind(Control_Monad_Free.freeBind)((function () {
                    if (_27 instanceof Data_Either.Left) {
                        return Halogen_Query_StateF.modify(Data_Inject.injectLeft)(function (_64) {
                            return new $$Error(_27.value0);
                        });
                    };
                    if (_27 instanceof Data_Either.Right) {
                        var newState = new Players(metric(_28), _27.value0);
                        return Prelude.bind(Control_Monad_Free.freeBind)(Halogen_Query_StateF.modify(Data_Inject.injectLeft)(function (_65) {
                            return newState;
                        }))(function () {
                            return Control_Monad_Free.liftFI(Data_Inject.injectRight(Data_Inject.injectRight(Data_Inject.injectReflexive)))(renderCharts(newState));
                        });
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Main.purs line 198, column 1 - line 199, column 1: " + [ _27.constructor.name ]);
                })())(function () {
                    return Prelude.pure(Control_Monad_Free.freeApplicative)(_77.value0);
                });
            });
        });
    };
    if (_77 instanceof SelectPlayer) {
        return Prelude.bind(Control_Monad_Free.freeBind)(Halogen_Query_StateF.get(Data_Inject.injectLeft))(function (_30) {
            return Prelude.bind(Control_Monad_Free.freeBind)(Control_Monad_Free.liftFI(Data_Inject.injectRight(Data_Inject.injectRight(Data_Inject.injectReflexive)))(matchdayState(_30)))(function (_29) {
                return Prelude.bind(Control_Monad_Free.freeBind)((function () {
                    if (_29 instanceof Data_Either.Left) {
                        return Halogen_Query_StateF.modify(Data_Inject.injectLeft)(function (_66) {
                            return new $$Error(_29.value0);
                        });
                    };
                    if (_29 instanceof Data_Either.Right) {
                        var newState = new Tips(_77.value0, metric(_30), _29.value0);
                        return Prelude.bind(Control_Monad_Free.freeBind)(Halogen_Query_StateF.modify(Data_Inject.injectLeft)(function (_67) {
                            return newState;
                        }))(function () {
                            return Control_Monad_Free.liftFI(Data_Inject.injectRight(Data_Inject.injectRight(Data_Inject.injectReflexive)))(renderCharts(newState));
                        });
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Main.purs line 198, column 1 - line 199, column 1: " + [ _29.constructor.name ]);
                })())(function () {
                    return Prelude.pure(Control_Monad_Free.freeApplicative)(_77.value1);
                });
            });
        });
    };
    if (_77 instanceof SelectDay) {
        return Prelude.bind(Control_Monad_Free.freeBind)(Halogen_Query_StateF.get(Data_Inject.injectLeft))(function (_32) {
            return Prelude.bind(Control_Monad_Free.freeBind)(Control_Monad_Free.liftFI(Data_Inject.injectRight(Data_Inject.injectRight(Data_Inject.injectReflexive)))(Standings.leagueTable(new Data_Maybe.Just(_77.value0))))(function (_31) {
                return Prelude.bind(Control_Monad_Free.freeBind)((function () {
                    if (_31 instanceof Data_Either.Left) {
                        return Halogen_Query_StateF.modify(Data_Inject.injectLeft)(function (_68) {
                            return new $$Error(_31.value0);
                        });
                    };
                    if (_31 instanceof Data_Either.Right) {
                        var newState = updateMatchday(Standings.standings(_31.value0))(_77.value0)(_32);
                        return Prelude.bind(Control_Monad_Free.freeBind)(Halogen_Query_StateF.modify(Data_Inject.injectLeft)(function (_69) {
                            return newState;
                        }))(function () {
                            return Control_Monad_Free.liftFI(Data_Inject.injectRight(Data_Inject.injectRight(Data_Inject.injectReflexive)))(renderCharts(newState));
                        });
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Main.purs line 198, column 1 - line 199, column 1: " + [ _31.constructor.name ]);
                })())(function () {
                    return Prelude.pure(Control_Monad_Free.freeApplicative)(_77.value1);
                });
            });
        });
    };
    if (_77 instanceof Use) {
        return Prelude.bind(Control_Monad_Free.freeBind)(Halogen_Query_StateF.get(Data_Inject.injectLeft))(function (_33) {
            var newState = updateMetric(_77.value0)(_33);
            return Prelude.bind(Control_Monad_Free.freeBind)(Halogen_Query_StateF.modify(Data_Inject.injectLeft)(function (_70) {
                return newState;
            }))(function () {
                return Prelude.bind(Control_Monad_Free.freeBind)(Control_Monad_Free.liftFI(Data_Inject.injectRight(Data_Inject.injectRight(Data_Inject.injectReflexive)))(renderCharts(newState)))(function () {
                    return Prelude.pure(Control_Monad_Free.freeApplicative)(_77.value1);
                });
            });
        });
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Main.purs line 198, column 1 - line 199, column 1: " + [ _77.constructor.name ]);
};
var ui = Halogen_Component.component(render)($$eval);
var main = (function () {
    var route = function (driver) {
        return function (_78) {
            if (_78 instanceof Routes.PlayersRoute) {
                return Control_Monad_Aff.launchAff(driver(Halogen.action(Data_Inject.injectReflexive)(Overview.create)));
            };
            if (_78 instanceof Routes.TipsRoute) {
                return Control_Monad_Aff.launchAff(driver(Halogen.action(Data_Inject.injectReflexive)(SelectPlayer.create(_78.value0))));
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Main.purs line 61, column 3 - line 62, column 3: " + [ driver.constructor.name, _78.constructor.name ]);
        };
    };
    return Control_Monad_Aff.launchAff(Prelude.bind(Control_Monad_Aff.bindAff)(Halogen.runUI(ui)(initialState))(function (_21) {
        return Prelude.bind(Control_Monad_Aff.bindAff)(Halogen_Util.appendToBody(Control_Monad_Aff.monadEffAff)(_21.node))(function () {
            return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(DOM_HTML.window))(function (_20) {
                return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(onLoad(Routing.matches(Routes.routing)(function (_63) {
                    return function ($$new) {
                        return route(_21.driver)($$new);
                    };
                })));
            });
        });
    }));
})();
module.exports = {
    Loading: Loading, 
    "Error": $$Error, 
    Players: Players, 
    Tips: Tips, 
    SelectPlayer: SelectPlayer, 
    SelectDay: SelectDay, 
    Overview: Overview, 
    Use: Use, 
    renderCurrentTable: renderCurrentTable, 
    rowColor: rowColor, 
    ratingsTable: ratingsTable, 
    pointsTable: pointsTable, 
    renderMetrics: renderMetrics, 
    renderMatchdays: renderMatchdays, 
    renderPage: renderPage, 
    "eval": $$eval, 
    renderCharts: renderCharts, 
    renderRatingsCharts: renderRatingsCharts, 
    render: render, 
    ui: ui, 
    matchdayState: matchdayState, 
    metric: metric, 
    initialMetric: initialMetric, 
    initialState: initialState, 
    updateMetric: updateMetric, 
    updateMatchday: updateMatchday, 
    onResize: onResize, 
    onLoad: onLoad, 
    main: main
};

},{"Bootstrap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Bootstrap/index.js","Charts":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Charts/index.js","Control.Apply":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Apply/index.js","Control.Bind":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Bind/index.js","Control.Monad.Aff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff/index.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","Control.Monad.Eff.Console":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Console/index.js","Control.Monad.Free":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Free/index.js","DOM":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM/index.js","DOM.Event.EventTarget":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.EventTarget/index.js","DOM.Event.EventTypes":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.EventTypes/index.js","DOM.Event.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Event.Types/index.js","DOM.HTML":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML/index.js","DOM.HTML.Document":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Document/index.js","DOM.HTML.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.HTML.Types/index.js","Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Inject":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Inject/index.js","Data.Int":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","ECharts.Chart":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/ECharts.Chart/index.js","Halogen":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen/index.js","Halogen.Component":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Component/index.js","Halogen.Effects":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Effects/index.js","Halogen.HTML":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML/index.js","Halogen.HTML.Core":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Core/index.js","Halogen.HTML.Elements":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Elements/index.js","Halogen.HTML.Events":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Events/index.js","Halogen.HTML.Properties":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.HTML.Properties/index.js","Halogen.Query.StateF":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Query.StateF/index.js","Halogen.Util":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Halogen.Util/index.js","Network.HTTP.Affjax":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.Affjax/index.js","Player":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Player/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js","Ranking":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Ranking/index.js","Ratings":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Ratings/index.js","Routes":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routes/index.js","Routing":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing/index.js","Standings":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Standings/index.js","Team":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Team/index.js","Tip":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Tip/index.js","Util":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Util/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Math/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Math

exports.abs = Math.abs;

exports.acos = Math.acos;

exports.asin = Math.asin;

exports.atan = Math.atan;

exports.atan2 = function (y) {
  return function (x) {
    return Math.atan2(y, x);
  };
};

exports.ceil = Math.ceil;

exports.cos = Math.cos;

exports.exp = Math.exp;

exports.floor = Math.floor;

exports.log = Math.log;

exports.max = function (n1) {
  return function (n2) {
    return Math.max(n1, n2);
  };
};

exports.min = function (n1) {
  return function (n2) {
    return Math.min(n1, n2);
  };
};

exports.pow = function (n) {
  return function (p) {
    return Math.pow(n, p);
  };
};

exports["%"] = function(n) {
  return function(m) {
    return n % m;
  };
};

exports.round = Math.round;

exports.sin = Math.sin;

exports.sqrt = Math.sqrt;

exports.tan = Math.tan;

exports.e = Math.E;

exports.ln2 = Math.LN2;

exports.ln10 = Math.LN10;

exports.log2e = Math.LOG2E;

exports.log10e = Math.LOG10E;

exports.pi = Math.PI;

exports.sqrt1_2 = Math.SQRT1_2;

exports.sqrt2 = Math.SQRT2;

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Math/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
module.exports = {
    sqrt2: $foreign.sqrt2, 
    sqrt1_2: $foreign.sqrt1_2, 
    pi: $foreign.pi, 
    log10e: $foreign.log10e, 
    log2e: $foreign.log2e, 
    ln10: $foreign.ln10, 
    ln2: $foreign.ln2, 
    e: $foreign.e, 
    "%": $foreign["%"], 
    tan: $foreign.tan, 
    sqrt: $foreign.sqrt, 
    sin: $foreign.sin, 
    round: $foreign.round, 
    pow: $foreign.pow, 
    min: $foreign.min, 
    max: $foreign.max, 
    log: $foreign.log, 
    floor: $foreign.floor, 
    exp: $foreign.exp, 
    cos: $foreign.cos, 
    ceil: $foreign.ceil, 
    atan2: $foreign.atan2, 
    atan: $foreign.atan, 
    asin: $foreign.asin, 
    acos: $foreign.acos, 
    abs: $foreign.abs
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Math/foreign.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.Affjax.Request/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Unsafe_Coerce = require("Unsafe.Coerce");
var DOM_File_Types = require("DOM.File.Types");
var DOM_Node_Types = require("DOM.Node.Types");
var DOM_XHR_Types = require("DOM.XHR.Types");
var Data_ArrayBuffer_Types = require("Data.ArrayBuffer.Types");
var Requestable = function (toRequest) {
    this.toRequest = toRequest;
};
var toRequest = function (dict) {
    return dict.toRequest;
};
var requestableUnit = new Requestable(Unsafe_Coerce.unsafeCoerce);
var requestableUint8ClampedArray = new Requestable(Unsafe_Coerce.unsafeCoerce);
var requestableUint8Array = new Requestable(Unsafe_Coerce.unsafeCoerce);
var requestableUint32Array = new Requestable(Unsafe_Coerce.unsafeCoerce);
var requestableUint16Array = new Requestable(Unsafe_Coerce.unsafeCoerce);
var requestableString = new Requestable(Unsafe_Coerce.unsafeCoerce);
var requestableRequestContent = new Requestable(Prelude.id(Prelude.categoryFn));
var requestableInt8Array = new Requestable(Unsafe_Coerce.unsafeCoerce);
var requestableInt32Array = new Requestable(Unsafe_Coerce.unsafeCoerce);
var requestableInt16Array = new Requestable(Unsafe_Coerce.unsafeCoerce);
var requestableFormData = new Requestable(Unsafe_Coerce.unsafeCoerce);
var requestableFloat64Array = new Requestable(Unsafe_Coerce.unsafeCoerce);
var requestableFloat32Array = new Requestable(Unsafe_Coerce.unsafeCoerce);
var requestableDocument = new Requestable(Unsafe_Coerce.unsafeCoerce);
var requestableBlob = new Requestable(Unsafe_Coerce.unsafeCoerce);
module.exports = {
    Requestable: Requestable, 
    toRequest: toRequest, 
    requestableRequestContent: requestableRequestContent, 
    requestableInt8Array: requestableInt8Array, 
    requestableInt16Array: requestableInt16Array, 
    requestableInt32Array: requestableInt32Array, 
    requestableUint8Array: requestableUint8Array, 
    requestableUint16Array: requestableUint16Array, 
    requestableUint32Array: requestableUint32Array, 
    requestableUint8ClampedArray: requestableUint8ClampedArray, 
    requestableFloat32Array: requestableFloat32Array, 
    requestableFloat64Array: requestableFloat64Array, 
    requestableBlob: requestableBlob, 
    requestableDocument: requestableDocument, 
    requestableString: requestableString, 
    requestableFormData: requestableFormData, 
    requestableUnit: requestableUnit
};

},{"DOM.File.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.File.Types/index.js","DOM.Node.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.Types/index.js","DOM.XHR.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.XHR.Types/index.js","Data.ArrayBuffer.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.ArrayBuffer.Types/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js","Unsafe.Coerce":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Unsafe.Coerce/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.Affjax.Response/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_Foreign = require("Data.Foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var DOM_File_Types = require("DOM.File.Types");
var DOM_Node_Types = require("DOM.Node.Types");
var DOM_XHR_Types = require("DOM.XHR.Types");
var Data_ArrayBuffer_Types = require("Data.ArrayBuffer.Types");
var ArrayBufferResponse = (function () {
    function ArrayBufferResponse() {

    };
    ArrayBufferResponse.value = new ArrayBufferResponse();
    return ArrayBufferResponse;
})();
var BlobResponse = (function () {
    function BlobResponse() {

    };
    BlobResponse.value = new BlobResponse();
    return BlobResponse;
})();
var DocumentResponse = (function () {
    function DocumentResponse() {

    };
    DocumentResponse.value = new DocumentResponse();
    return DocumentResponse;
})();
var JSONResponse = (function () {
    function JSONResponse() {

    };
    JSONResponse.value = new JSONResponse();
    return JSONResponse;
})();
var StringResponse = (function () {
    function StringResponse() {

    };
    StringResponse.value = new StringResponse();
    return StringResponse;
})();
var Respondable = function (fromResponse, responseType) {
    this.fromResponse = fromResponse;
    this.responseType = responseType;
};
var showResponseType = new Prelude.Show(function (_343) {
    if (_343 instanceof ArrayBufferResponse) {
        return "ArrayBufferResponse";
    };
    if (_343 instanceof BlobResponse) {
        return "BlobResponse";
    };
    if (_343 instanceof DocumentResponse) {
        return "DocumentResponse";
    };
    if (_343 instanceof JSONResponse) {
        return "JSONResponse";
    };
    if (_343 instanceof StringResponse) {
        return "StringResponse";
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-affjax/src/Network/HTTP/Affjax/Response.purs line 34, column 1 - line 41, column 1: " + [ _343.constructor.name ]);
});
var responseTypeToString = function (_340) {
    if (_340 instanceof ArrayBufferResponse) {
        return "arraybuffer";
    };
    if (_340 instanceof BlobResponse) {
        return "blob";
    };
    if (_340 instanceof DocumentResponse) {
        return "document";
    };
    if (_340 instanceof JSONResponse) {
        return "text";
    };
    if (_340 instanceof StringResponse) {
        return "text";
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-affjax/src/Network/HTTP/Affjax/Response.purs line 41, column 1 - line 42, column 1: " + [ _340.constructor.name ]);
};
var responseType = function (dict) {
    return dict.responseType;
};
var responsableUnit = new Respondable(Prelude["const"](new Data_Either.Right(Prelude.unit)), StringResponse.value);
var responsableString = new Respondable(Data_Foreign.readString, StringResponse.value);
var responsableJSON = new Respondable(Data_Either.Right.create, JSONResponse.value);
var responsableDocument = new Respondable(Data_Foreign.unsafeReadTagged("Document"), DocumentResponse.value);
var responsableBlob = new Respondable(Data_Foreign.unsafeReadTagged("Blob"), BlobResponse.value);
var fromResponse = function (dict) {
    return dict.fromResponse;
};
var eqResponseType = new Prelude.Eq(function (_341) {
    return function (_342) {
        if (_341 instanceof ArrayBufferResponse && _342 instanceof ArrayBufferResponse) {
            return true;
        };
        if (_341 instanceof BlobResponse && _342 instanceof BlobResponse) {
            return true;
        };
        if (_341 instanceof DocumentResponse && _342 instanceof DocumentResponse) {
            return true;
        };
        if (_341 instanceof JSONResponse && _342 instanceof JSONResponse) {
            return true;
        };
        if (_341 instanceof StringResponse && _342 instanceof StringResponse) {
            return true;
        };
        return false;
    };
});
module.exports = {
    ArrayBufferResponse: ArrayBufferResponse, 
    BlobResponse: BlobResponse, 
    DocumentResponse: DocumentResponse, 
    JSONResponse: JSONResponse, 
    StringResponse: StringResponse, 
    Respondable: Respondable, 
    fromResponse: fromResponse, 
    responseType: responseType, 
    responseTypeToString: responseTypeToString, 
    eqResponseType: eqResponseType, 
    showResponseType: showResponseType, 
    responsableBlob: responsableBlob, 
    responsableDocument: responsableDocument, 
    responsableJSON: responsableJSON, 
    responsableString: responsableString, 
    responsableUnit: responsableUnit
};

},{"DOM.File.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.File.Types/index.js","DOM.Node.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.Node.Types/index.js","DOM.XHR.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.XHR.Types/index.js","Data.ArrayBuffer.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.ArrayBuffer.Types/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.Affjax/foreign.js":[function(require,module,exports){
/* global exports */
/* global XMLHttpRequest */
/* global module */
"use strict";

// module Network.HTTP.Affjax

// jshint maxparams: 5
exports._ajax = function (mkHeader, options, canceler, errback, callback) {
  var platformSpecific = { };
  if (typeof module !== "undefined" && module.require) {
    // We are on node.js
    platformSpecific.newXHR = function () {
      var XHR = module.require("xmlhttprequest").XMLHttpRequest;
      return new XHR();
    };

    platformSpecific.fixupUrl = function (url) {
      var urllib = module.require("url");
      var u = urllib.parse(url);
      u.protocol = u.protocol || "http:";
      u.hostname = u.hostname || "localhost";
      return urllib.format(u);
    };

    platformSpecific.getResponse = function (xhr) {
      // the node package 'xmlhttprequest' does not support xhr.response.
      return xhr.responseText;
    };
  } else {
    // We are in the browser
    platformSpecific.newXHR = function () {
      return new XMLHttpRequest();
    };

    platformSpecific.fixupUrl = function (url) {
      return url || "/";
    };

    platformSpecific.getResponse = function (xhr) {
      return xhr.response;
    };
  }

  return function () {
    var xhr = platformSpecific.newXHR();
    var fixedUrl = platformSpecific.fixupUrl(options.url);
    xhr.open(options.method || "GET", fixedUrl, true, options.username, options.password);
    if (options.headers) {
      for (var i = 0, header; (header = options.headers[i]) != null; i++) {
        xhr.setRequestHeader(header.field, header.value);
      }
    }
    xhr.onerror = function () {
      errback(new Error("AJAX request failed: " + options.method + " " + options.url))();
    };
    xhr.onload = function () {
      callback({
        status: xhr.status,
        headers: xhr.getAllResponseHeaders().split("\n")
          .filter(function (header) {
            return header.length > 0;
          })
          .map(function (header) {
            var i = header.indexOf(":");
            return mkHeader(header.substring(0, i))(header.substring(i + 2));
          }),
        response: platformSpecific.getResponse(xhr)
      })();
    };
    xhr.responseType = options.responseType;
    xhr.send(options.content);
    return canceler(xhr);
  };
};

// jshint maxparams: 4
exports._cancelAjax = function (xhr, cancelError, errback, callback) {
  return function () {
    try { xhr.abort(); } catch (e) { return callback(false)(); }
    return callback(true)();
  };
};


},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.Affjax/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Aff = require("Control.Monad.Aff");
var Data_Int = require("Data.Int");
var $$Math = require("Math");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Monad_Eff_Ref = require("Control.Monad.Eff.Ref");
var Control_Monad_Aff_AVar = require("Control.Monad.Aff.AVar");
var Control_Monad_Eff_Exception = require("Control.Monad.Eff.Exception");
var Control_Monad_Error_Class = require("Control.Monad.Error.Class");
var Data_Either = require("Data.Either");
var Network_HTTP_Method = require("Network.HTTP.Method");
var Network_HTTP_RequestHeader = require("Network.HTTP.RequestHeader");
var Data_Nullable = require("Data.Nullable");
var Network_HTTP_Affjax_Request = require("Network.HTTP.Affjax.Request");
var Network_HTTP_Affjax_Response = require("Network.HTTP.Affjax.Response");
var Control_Bind = require("Control.Bind");
var Data_Foreign = require("Data.Foreign");
var Data_Function = require("Data.Function");
var Network_HTTP_ResponseHeader = require("Network.HTTP.ResponseHeader");
var Control_Alt = require("Control.Alt");
var Control_Monad_Aff_Par = require("Control.Monad.Aff.Par");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var DOM_XHR_Types = require("DOM.XHR.Types");
var Network_HTTP_StatusCode = require("Network.HTTP.StatusCode");
var retry = function (__dict_Requestable_0) {
    return function (policy) {
        return function (run) {
            return function (req) {
                var retryState = function (_627) {
                    if (_627 instanceof Data_Either.Left) {
                        return Data_Either.Left.create(new Data_Either.Left(_627.value0));
                    };
                    if (_627 instanceof Data_Either.Right) {
                        if (_627.value0.status === 200) {
                            return new Data_Either.Right(_627.value0);
                        };
                        var _796 = policy.shouldRetryWithStatusCode(_627.value0.status);
                        if (_796) {
                            return Data_Either.Left.create(new Data_Either.Right(_627.value0));
                        };
                        if (!_796) {
                            return new Data_Either.Right(_627.value0);
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-affjax/src/Network/HTTP/Affjax.purs line 177, column 5 - line 178, column 5: " + [ _796.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-affjax/src/Network/HTTP/Affjax.purs line 177, column 5 - line 178, column 5: " + [ _627.constructor.name ]);
                };
                var go = function (failureRef) {
                    return function (n) {
                        return Prelude.bind(Control_Monad_Aff.bindAff)(Prelude["<$>"](Control_Monad_Aff.functorAff)(retryState)(Control_Monad_Aff.attempt(run(req))))(function (_100) {
                            if (_100 instanceof Data_Either.Left) {
                                return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(failureRef)(new Data_Maybe.Just(_100.value0))))(function () {
                                    return Control_Monad_Aff["later'"](policy.delayCurve(n))(go(failureRef)(Prelude["+"](Prelude.semiringInt)(n)(1)));
                                });
                            };
                            if (_100 instanceof Data_Either.Right) {
                                return Prelude.pure(Control_Monad_Aff.applicativeAff)(_100.value0);
                            };
                            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-affjax/src/Network/HTTP/Affjax.purs line 154, column 1 - line 155, column 1: " + [ _100.constructor.name ]);
                        });
                    };
                };
                return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)))(function (_106) {
                    var loop = go(_106);
                    if (policy.timeout instanceof Data_Maybe.Nothing) {
                        return loop(1);
                    };
                    if (policy.timeout instanceof Data_Maybe.Just) {
                        return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (_105) {
                            return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.forkAff(Prelude[">>="](Control_Monad_Aff.bindAff)(loop(1))(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Aff_AVar.putVar(_105))(Data_Maybe.Just.create))))(function (_104) {
                                return Prelude.bind(Control_Monad_Aff.bindAff)(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Aff.forkAff)(Control_Monad_Aff["later'"](policy.timeout.value0))(Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(_105)(Data_Maybe.Nothing.value))(function () {
                                    return Control_Monad_Aff.cancel(_104)(Control_Monad_Eff_Exception.error("Cancel"));
                                })))(function (_103) {
                                    return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(_105))(function (_102) {
                                        if (_102 instanceof Data_Maybe.Nothing) {
                                            return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(_106)))(function (_101) {
                                                if (_101 instanceof Data_Maybe.Nothing) {
                                                    return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("Timeout"));
                                                };
                                                if (_101 instanceof Data_Maybe.Just) {
                                                    return Data_Either.either(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff))(Prelude.pure(Control_Monad_Aff.applicativeAff))(_101.value0);
                                                };
                                                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-affjax/src/Network/HTTP/Affjax.purs line 154, column 1 - line 155, column 1: " + [ _101.constructor.name ]);
                                            });
                                        };
                                        if (_102 instanceof Data_Maybe.Just) {
                                            return Prelude.pure(Control_Monad_Aff.applicativeAff)(_102.value0);
                                        };
                                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-affjax/src/Network/HTTP/Affjax.purs line 154, column 1 - line 155, column 1: " + [ _102.constructor.name ]);
                                    });
                                });
                            });
                        });
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-affjax/src/Network/HTTP/Affjax.purs line 154, column 1 - line 155, column 1: " + [ policy.timeout.constructor.name ]);
                });
            };
        };
    };
};
var defaultRetryPolicy = {
    timeout: Data_Maybe.Nothing.value, 
    delayCurve: function (n) {
        return Data_Int.round($$Math.max(30.0 * 1000.0)(100.0 * $$Math.pow(2.0)(Data_Int.toNumber(Prelude["-"](Prelude.ringInt)(n)(1)))));
    }, 
    shouldRetryWithStatusCode: function (_626) {
        return false;
    }
};
var defaultRequest = {
    method: Network_HTTP_Method.GET.value, 
    url: "/", 
    headers: [  ], 
    content: Data_Maybe.Nothing.value, 
    username: Data_Maybe.Nothing.value, 
    password: Data_Maybe.Nothing.value
};
var cancelAjax = function (xhr) {
    return function (err) {
        return Control_Monad_Aff.makeAff(function (eb) {
            return function (cb) {
                return $foreign._cancelAjax(xhr, err, eb, cb);
            };
        });
    };
};
var affjax$prime = function (__dict_Requestable_1) {
    return function (__dict_Respondable_2) {
        return function (req) {
            return function (eb) {
                return function (cb) {
                    var req$prime = {
                        method: Network_HTTP_Method.methodToString(req.method), 
                        url: req.url, 
                        headers: Prelude["<$>"](Prelude.functorArray)(function (h) {
                            return {
                                field: Network_HTTP_RequestHeader.requestHeaderName(h), 
                                value: Network_HTTP_RequestHeader.requestHeaderValue(h)
                            };
                        })(req.headers), 
                        content: Data_Nullable.toNullable(Prelude["<$>"](Data_Maybe.functorMaybe)(Network_HTTP_Affjax_Request.toRequest(__dict_Requestable_1))(req.content)), 
                        responseType: Network_HTTP_Affjax_Response.responseTypeToString(Network_HTTP_Affjax_Response.responseType(__dict_Respondable_2)), 
                        username: Data_Nullable.toNullable(req.username), 
                        password: Data_Nullable.toNullable(req.password)
                    };
                    var fromResponse$prime = (function () {
                        var _815 = Network_HTTP_Affjax_Response.responseType(__dict_Respondable_2);
                        if (_815 instanceof Network_HTTP_Affjax_Response.JSONResponse) {
                            return Control_Bind["<=<"](Data_Either.bindEither)(Network_HTTP_Affjax_Response.fromResponse(__dict_Respondable_2))(Control_Bind["<=<"](Data_Either.bindEither)(Data_Foreign.parseJSON)(Data_Foreign.readString));
                        };
                        return Network_HTTP_Affjax_Response.fromResponse(__dict_Respondable_2);
                    })();
                    var cb$prime = function (res) {
                        var _818 = Prelude["<$>"](Data_Either.functorEither)(function (_8) {
                            var _816 = {};
                            for (var _817 in res) {
                                if (res.hasOwnProperty(_817)) {
                                    _816[_817] = res[_817];
                                };
                            };
                            _816.response = _8;
                            return _816;
                        })(fromResponse$prime(res.response));
                        if (_818 instanceof Data_Either.Left) {
                            return eb(Control_Monad_Eff_Exception.error(Prelude.show(Data_Foreign.showForeignError)(_818.value0)));
                        };
                        if (_818 instanceof Data_Either.Right) {
                            return cb(_818.value0);
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-affjax/src/Network/HTTP/Affjax.purs line 197, column 1 - line 202, column 1: " + [ _818.constructor.name ]);
                    };
                    return $foreign._ajax(Network_HTTP_ResponseHeader.responseHeader, req$prime, cancelAjax, eb, cb$prime);
                };
            };
        };
    };
};
var affjax = function (__dict_Requestable_3) {
    return function (__dict_Respondable_4) {
        return Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Aff["makeAff'"])(affjax$prime(__dict_Requestable_3)(__dict_Respondable_4));
    };
};
var $$delete = function (__dict_Respondable_5) {
    return function (u) {
        return affjax(Network_HTTP_Affjax_Request.requestableUnit)(__dict_Respondable_5)((function () {
            var _821 = {};
            for (var _822 in defaultRequest) {
                if (defaultRequest.hasOwnProperty(_822)) {
                    _821[_822] = defaultRequest[_822];
                };
            };
            _821.method = Network_HTTP_Method.DELETE.value;
            _821.url = u;
            return _821;
        })());
    };
};
var delete_ = $$delete(Network_HTTP_Affjax_Response.responsableUnit);
var get = function (__dict_Respondable_6) {
    return function (u) {
        return affjax(Network_HTTP_Affjax_Request.requestableUnit)(__dict_Respondable_6)((function () {
            var _823 = {};
            for (var _824 in defaultRequest) {
                if (defaultRequest.hasOwnProperty(_824)) {
                    _823[_824] = defaultRequest[_824];
                };
            };
            _823.url = u;
            return _823;
        })());
    };
};
var post = function (__dict_Requestable_7) {
    return function (__dict_Respondable_8) {
        return function (u) {
            return function (c) {
                return affjax(__dict_Requestable_7)(__dict_Respondable_8)((function () {
                    var _825 = {};
                    for (var _826 in defaultRequest) {
                        if (defaultRequest.hasOwnProperty(_826)) {
                            _825[_826] = defaultRequest[_826];
                        };
                    };
                    _825.method = Network_HTTP_Method.POST.value;
                    _825.url = u;
                    _825.content = new Data_Maybe.Just(c);
                    return _825;
                })());
            };
        };
    };
};
var post_ = function (__dict_Requestable_9) {
    return post(__dict_Requestable_9)(Network_HTTP_Affjax_Response.responsableUnit);
};
var post$prime = function (__dict_Requestable_10) {
    return function (__dict_Respondable_11) {
        return function (u) {
            return function (c) {
                return affjax(__dict_Requestable_10)(__dict_Respondable_11)((function () {
                    var _827 = {};
                    for (var _828 in defaultRequest) {
                        if (defaultRequest.hasOwnProperty(_828)) {
                            _827[_828] = defaultRequest[_828];
                        };
                    };
                    _827.method = Network_HTTP_Method.POST.value;
                    _827.url = u;
                    _827.content = c;
                    return _827;
                })());
            };
        };
    };
};
var post_$prime = function (__dict_Requestable_12) {
    return post$prime(__dict_Requestable_12)(Network_HTTP_Affjax_Response.responsableUnit);
};
var put = function (__dict_Requestable_13) {
    return function (__dict_Respondable_14) {
        return function (u) {
            return function (c) {
                return affjax(__dict_Requestable_13)(__dict_Respondable_14)((function () {
                    var _829 = {};
                    for (var _830 in defaultRequest) {
                        if (defaultRequest.hasOwnProperty(_830)) {
                            _829[_830] = defaultRequest[_830];
                        };
                    };
                    _829.method = Network_HTTP_Method.PUT.value;
                    _829.url = u;
                    _829.content = new Data_Maybe.Just(c);
                    return _829;
                })());
            };
        };
    };
};
var put_ = function (__dict_Requestable_15) {
    return put(__dict_Requestable_15)(Network_HTTP_Affjax_Response.responsableUnit);
};
var put$prime = function (__dict_Requestable_16) {
    return function (__dict_Respondable_17) {
        return function (u) {
            return function (c) {
                return affjax(__dict_Requestable_16)(__dict_Respondable_17)((function () {
                    var _831 = {};
                    for (var _832 in defaultRequest) {
                        if (defaultRequest.hasOwnProperty(_832)) {
                            _831[_832] = defaultRequest[_832];
                        };
                    };
                    _831.method = Network_HTTP_Method.PUT.value;
                    _831.url = u;
                    _831.content = c;
                    return _831;
                })());
            };
        };
    };
};
var put_$prime = function (__dict_Requestable_18) {
    return put$prime(__dict_Requestable_18)(Network_HTTP_Affjax_Response.responsableUnit);
};
module.exports = {
    retry: retry, 
    defaultRetryPolicy: defaultRetryPolicy, 
    delete_: delete_, 
    "delete": $$delete, 
    "put_'": put_$prime, 
    "put'": put$prime, 
    put_: put_, 
    put: put, 
    "post_'": post_$prime, 
    "post'": post$prime, 
    post_: post_, 
    post: post, 
    get: get, 
    "affjax'": affjax$prime, 
    affjax: affjax, 
    defaultRequest: defaultRequest
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.Affjax/foreign.js","Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Bind":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Bind/index.js","Control.Monad.Aff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff/index.js","Control.Monad.Aff.AVar":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff.AVar/index.js","Control.Monad.Aff.Par":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff.Par/index.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Class/index.js","Control.Monad.Eff.Exception":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Exception/index.js","Control.Monad.Eff.Ref":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff.Ref/index.js","Control.Monad.Error.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Error.Class/index.js","DOM.XHR.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/DOM.XHR.Types/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foreign/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Data.Int":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Nullable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Nullable/index.js","Math":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Math/index.js","Network.HTTP.Affjax.Request":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.Affjax.Request/index.js","Network.HTTP.Affjax.Response":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.Affjax.Response/index.js","Network.HTTP.Method":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.Method/index.js","Network.HTTP.RequestHeader":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.RequestHeader/index.js","Network.HTTP.ResponseHeader":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.ResponseHeader/index.js","Network.HTTP.StatusCode":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.StatusCode/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.Method/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var DELETE = (function () {
    function DELETE() {

    };
    DELETE.value = new DELETE();
    return DELETE;
})();
var GET = (function () {
    function GET() {

    };
    GET.value = new GET();
    return GET;
})();
var HEAD = (function () {
    function HEAD() {

    };
    HEAD.value = new HEAD();
    return HEAD;
})();
var OPTIONS = (function () {
    function OPTIONS() {

    };
    OPTIONS.value = new OPTIONS();
    return OPTIONS;
})();
var PATCH = (function () {
    function PATCH() {

    };
    PATCH.value = new PATCH();
    return PATCH;
})();
var POST = (function () {
    function POST() {

    };
    POST.value = new POST();
    return POST;
})();
var PUT = (function () {
    function PUT() {

    };
    PUT.value = new PUT();
    return PUT;
})();
var MOVE = (function () {
    function MOVE() {

    };
    MOVE.value = new MOVE();
    return MOVE;
})();
var COPY = (function () {
    function COPY() {

    };
    COPY.value = new COPY();
    return COPY;
})();
var CustomMethod = (function () {
    function CustomMethod(value0) {
        this.value0 = value0;
    };
    CustomMethod.create = function (value0) {
        return new CustomMethod(value0);
    };
    return CustomMethod;
})();
var showMethod = new Prelude.Show(function (_195) {
    if (_195 instanceof DELETE) {
        return "DELETE";
    };
    if (_195 instanceof GET) {
        return "GET";
    };
    if (_195 instanceof HEAD) {
        return "HEAD";
    };
    if (_195 instanceof OPTIONS) {
        return "OPTIONS";
    };
    if (_195 instanceof PATCH) {
        return "PATCH";
    };
    if (_195 instanceof POST) {
        return "POST";
    };
    if (_195 instanceof PUT) {
        return "PUT";
    };
    if (_195 instanceof MOVE) {
        return "MOVE";
    };
    if (_195 instanceof COPY) {
        return "COPY";
    };
    if (_195 instanceof CustomMethod) {
        return "(CustomMethod " + (Prelude.show(Prelude.showString)(_195.value0) + ")");
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-affjax/src/Network/HTTP/Method.purs line 29, column 1 - line 41, column 1: " + [ _195.constructor.name ]);
});
var methodToString = function (_192) {
    if (_192 instanceof CustomMethod) {
        return _192.value0;
    };
    return Prelude.show(showMethod)(_192);
};
var eqMethod = new Prelude.Eq(function (_193) {
    return function (_194) {
        if (_193 instanceof DELETE && _194 instanceof DELETE) {
            return true;
        };
        if (_193 instanceof GET && _194 instanceof GET) {
            return true;
        };
        if (_193 instanceof HEAD && _194 instanceof HEAD) {
            return true;
        };
        if (_193 instanceof OPTIONS && _194 instanceof OPTIONS) {
            return true;
        };
        if (_193 instanceof PATCH && _194 instanceof PATCH) {
            return true;
        };
        if (_193 instanceof POST && _194 instanceof POST) {
            return true;
        };
        if (_193 instanceof PUT && _194 instanceof PUT) {
            return true;
        };
        if (_193 instanceof MOVE && _194 instanceof MOVE) {
            return true;
        };
        if (_193 instanceof COPY && _194 instanceof COPY) {
            return true;
        };
        return false;
    };
});
module.exports = {
    DELETE: DELETE, 
    GET: GET, 
    HEAD: HEAD, 
    OPTIONS: OPTIONS, 
    PATCH: PATCH, 
    POST: POST, 
    PUT: PUT, 
    MOVE: MOVE, 
    COPY: COPY, 
    CustomMethod: CustomMethod, 
    methodToString: methodToString, 
    eqMethod: eqMethod, 
    showMethod: showMethod
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.MimeType/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var MimeType = function (x) {
    return x;
};
var showMimeType = new Prelude.Show(function (_186) {
    return "(MimeType " + (Prelude.show(Prelude.showString)(_186) + ")");
});
var mimeTypeToString = function (_183) {
    return _183;
};
var eqMimeType = new Prelude.Eq(function (_184) {
    return function (_185) {
        return Prelude["=="](Prelude.eqString)(_184)(_185);
    };
});
module.exports = {
    MimeType: MimeType, 
    mimeTypeToString: mimeTypeToString, 
    eqMimeType: eqMimeType, 
    showMimeType: showMimeType
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.RequestHeader/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Network_HTTP_MimeType = require("Network.HTTP.MimeType");
var Accept = (function () {
    function Accept(value0) {
        this.value0 = value0;
    };
    Accept.create = function (value0) {
        return new Accept(value0);
    };
    return Accept;
})();
var ContentType = (function () {
    function ContentType(value0) {
        this.value0 = value0;
    };
    ContentType.create = function (value0) {
        return new ContentType(value0);
    };
    return ContentType;
})();
var RequestHeader = (function () {
    function RequestHeader(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    RequestHeader.create = function (value0) {
        return function (value1) {
            return new RequestHeader(value0, value1);
        };
    };
    return RequestHeader;
})();
var showRequestHeader = new Prelude.Show(function (_191) {
    if (_191 instanceof Accept) {
        return "(Accept " + (Prelude.show(Network_HTTP_MimeType.showMimeType)(_191.value0) + ")");
    };
    if (_191 instanceof ContentType) {
        return "(ContentType " + (Prelude.show(Network_HTTP_MimeType.showMimeType)(_191.value0) + ")");
    };
    if (_191 instanceof RequestHeader) {
        return "(RequestHeader " + (Prelude.show(Prelude.showString)(_191.value0) + (" " + (Prelude.show(Prelude.showString)(_191.value1) + ")")));
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-affjax/src/Network/HTTP/RequestHeader.purs line 18, column 1 - line 23, column 1: " + [ _191.constructor.name ]);
});
var requestHeaderValue = function (_188) {
    if (_188 instanceof Accept) {
        return Network_HTTP_MimeType.mimeTypeToString(_188.value0);
    };
    if (_188 instanceof ContentType) {
        return Network_HTTP_MimeType.mimeTypeToString(_188.value0);
    };
    if (_188 instanceof RequestHeader) {
        return _188.value1;
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-affjax/src/Network/HTTP/RequestHeader.purs line 28, column 1 - line 29, column 1: " + [ _188.constructor.name ]);
};
var requestHeaderName = function (_187) {
    if (_187 instanceof Accept) {
        return "Accept";
    };
    if (_187 instanceof ContentType) {
        return "Content-Type";
    };
    if (_187 instanceof RequestHeader) {
        return _187.value0;
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-affjax/src/Network/HTTP/RequestHeader.purs line 23, column 1 - line 24, column 1: " + [ _187.constructor.name ]);
};
var eqRequestHeader = new Prelude.Eq(function (_189) {
    return function (_190) {
        if (_189 instanceof Accept && _190 instanceof Accept) {
            return Prelude["=="](Network_HTTP_MimeType.eqMimeType)(_189.value0)(_190.value0);
        };
        if (_189 instanceof ContentType && _190 instanceof ContentType) {
            return Prelude["=="](Network_HTTP_MimeType.eqMimeType)(_189.value0)(_190.value0);
        };
        if (_189 instanceof RequestHeader && _190 instanceof RequestHeader) {
            return Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqString)(_189.value0)(_190.value0))(Prelude["=="](Prelude.eqString)(_189.value1)(_190.value1));
        };
        return false;
    };
});
module.exports = {
    Accept: Accept, 
    ContentType: ContentType, 
    RequestHeader: RequestHeader, 
    requestHeaderValue: requestHeaderValue, 
    requestHeaderName: requestHeaderName, 
    eqRequestHeader: eqRequestHeader, 
    showRequestHeader: showRequestHeader
};

},{"Network.HTTP.MimeType":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.MimeType/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.ResponseHeader/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var ResponseHeader = (function () {
    function ResponseHeader(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ResponseHeader.create = function (value0) {
        return function (value1) {
            return new ResponseHeader(value0, value1);
        };
    };
    return ResponseHeader;
})();
var showResponseHeader = new Prelude.Show(function (_182) {
    return "(ResponseHeader " + (Prelude.show(Prelude.showString)(_182.value0) + (" " + (Prelude.show(Prelude.showString)(_182.value1) + ")")));
});
var responseHeaderValue = function (_179) {
    return _179.value1;
};
var responseHeaderName = function (_178) {
    return _178.value0;
};
var responseHeader = function (field) {
    return function (value) {
        return new ResponseHeader(field, value);
    };
};
var eqResponseHeader = new Prelude.Eq(function (_180) {
    return function (_181) {
        return Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqString)(_180.value0)(_181.value0))(Prelude["=="](Prelude.eqString)(_180.value1)(_181.value1));
    };
});
module.exports = {
    responseHeaderValue: responseHeaderValue, 
    responseHeaderName: responseHeaderName, 
    responseHeader: responseHeader, 
    eqResponseHeader: eqResponseHeader, 
    showResponseHeader: showResponseHeader
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.StatusCode/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Int = require("Data.Int");
var StatusCode = function (x) {
    return x;
};
var showStatusCode = new Prelude.Show(function (_426) {
    return "(StatusCode " + (Prelude.show(Prelude.showInt)(_426) + ")");
});
var eqStatusCode = new Prelude.Eq(function (_424) {
    return function (_425) {
        return Prelude["=="](Prelude.eqInt)(_424)(_425);
    };
});
module.exports = {
    StatusCode: StatusCode, 
    eqStatusCode: eqStatusCode, 
    showStatusCode: showStatusCode
};

},{"Data.Int":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Player/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Util = require("Util");
var JanWulf = (function () {
    function JanWulf() {

    };
    JanWulf.value = new JanWulf();
    return JanWulf;
})();
var Jan = (function () {
    function Jan() {

    };
    Jan.value = new Jan();
    return Jan;
})();
var JR = (function () {
    function JR() {

    };
    JR.value = new JR();
    return JR;
})();
var Christoph = (function () {
    function Christoph() {

    };
    Christoph.value = new Christoph();
    return Christoph;
})();
var Johannes = (function () {
    function Johannes() {

    };
    Johannes.value = new Johannes();
    return Johannes;
})();
var Julia = (function () {
    function Julia() {

    };
    Julia.value = new Julia();
    return Julia;
})();
var Daniel = (function () {
    function Daniel() {

    };
    Daniel.value = new Daniel();
    return Daniel;
})();
var Mirko = (function () {
    function Mirko() {

    };
    Mirko.value = new Mirko();
    return Mirko;
})();
var Ulf = (function () {
    function Ulf() {

    };
    Ulf.value = new Ulf();
    return Ulf;
})();
var Sandra = (function () {
    function Sandra() {

    };
    Sandra.value = new Sandra();
    return Sandra;
})();
var Maike = (function () {
    function Maike() {

    };
    Maike.value = new Maike();
    return Maike;
})();
var Nikita = (function () {
    function Nikita() {

    };
    Nikita.value = new Nikita();
    return Nikita;
})();
var Henning = (function () {
    function Henning() {

    };
    Henning.value = new Henning();
    return Henning;
})();
var Spiegel = (function () {
    function Spiegel() {

    };
    Spiegel.value = new Spiegel();
    return Spiegel;
})();
var showPlayer = new Prelude.Show(function (_35) {
    if (_35 instanceof JanWulf) {
        return "JanWulf";
    };
    if (_35 instanceof Jan) {
        return "Jan";
    };
    if (_35 instanceof JR) {
        return "JR";
    };
    if (_35 instanceof Christoph) {
        return "Christoph";
    };
    if (_35 instanceof Johannes) {
        return "Johannes";
    };
    if (_35 instanceof Julia) {
        return "Julia";
    };
    if (_35 instanceof Daniel) {
        return "Daniel";
    };
    if (_35 instanceof Mirko) {
        return "Mirko";
    };
    if (_35 instanceof Ulf) {
        return "Ulf";
    };
    if (_35 instanceof Sandra) {
        return "Sandra";
    };
    if (_35 instanceof Maike) {
        return "Maike";
    };
    if (_35 instanceof Nikita) {
        return "Nikita";
    };
    if (_35 instanceof Henning) {
        return "Henning";
    };
    if (_35 instanceof Spiegel) {
        return "Spiegel";
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Player.purs line 25, column 1 - line 41, column 1: " + [ _35.constructor.name ]);
});
var prettyPlayer = new Util.Pretty(function (_36) {
    if (_36 instanceof JanWulf) {
        return "Jan W.";
    };
    if (_36 instanceof Jan) {
        return "Jan";
    };
    if (_36 instanceof JR) {
        return "JR";
    };
    if (_36 instanceof Christoph) {
        return "Christoph";
    };
    if (_36 instanceof Johannes) {
        return "Johannes";
    };
    if (_36 instanceof Julia) {
        return "Julia";
    };
    if (_36 instanceof Daniel) {
        return "Daniel";
    };
    if (_36 instanceof Mirko) {
        return "Mirko";
    };
    if (_36 instanceof Ulf) {
        return "Ulf";
    };
    if (_36 instanceof Sandra) {
        return "Sandra";
    };
    if (_36 instanceof Maike) {
        return "Maike";
    };
    if (_36 instanceof Nikita) {
        return "Nikita (alias Zufallstipp)";
    };
    if (_36 instanceof Henning) {
        return "Prof. Henning";
    };
    if (_36 instanceof Spiegel) {
        return "Spiegel.de-Prognose";
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Player.purs line 41, column 1 - line 58, column 1: " + [ _36.constructor.name ]);
});
var allPlayers = [ JanWulf.value, Jan.value, JR.value, Christoph.value, Johannes.value, Julia.value, Daniel.value, Mirko.value, Ulf.value, Sandra.value, Maike.value, Nikita.value, Henning.value, Spiegel.value ];
module.exports = {
    JanWulf: JanWulf, 
    Jan: Jan, 
    JR: JR, 
    Christoph: Christoph, 
    Johannes: Johannes, 
    Julia: Julia, 
    Daniel: Daniel, 
    Mirko: Mirko, 
    Ulf: Ulf, 
    Sandra: Sandra, 
    Maike: Maike, 
    Nikita: Nikita, 
    Henning: Henning, 
    Spiegel: Spiegel, 
    allPlayers: allPlayers, 
    showPlayer: showPlayer, 
    prettyPlayer: prettyPlayer
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js","Util":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Util/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Prelude

//- Functor --------------------------------------------------------------------

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

//- Bind -----------------------------------------------------------------------

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

//- Monoid ---------------------------------------------------------------------

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    return xs.concat(ys);
  };
};

//- Semiring -------------------------------------------------------------------

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};

//- ModuloSemiring -------------------------------------------------------------

exports.intDiv = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.intMod = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};

//- Ring -----------------------------------------------------------------------

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};

//- Eq -------------------------------------------------------------------------

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.refIneq = function (r1) {
  return function (r2) {
    return r1 !== r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs.length !== ys.length) return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }
      return true;
    };
  };
};

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

//- Ord ------------------------------------------------------------------------

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x > y ? gt : eq;
        };
      };
    };
  };
};

//- Bounded --------------------------------------------------------------------

exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);

//- BooleanAlgebra -------------------------------------------------------------

exports.boolOr = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolAnd = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};

//- Show -----------------------------------------------------------------------

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  /* jshint bitwise: false */
  return n === (n | 0) ? n + ".0" : n.toString();
};

exports.showCharImpl = function (c) {
  return c === "'" ? "'\\''" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  return JSON.stringify(s);
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];
    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }
    return "[" + ss.join(",") + "]";
  };
};

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Unit = function (x) {
    return x;
};
var LT = (function () {
    function LT() {

    };
    LT.value = new LT();
    return LT;
})();
var GT = (function () {
    function GT() {

    };
    GT.value = new GT();
    return GT;
})();
var EQ = (function () {
    function EQ() {

    };
    EQ.value = new EQ();
    return EQ;
})();
var Semigroupoid = function (compose) {
    this.compose = compose;
};
var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
    this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
    this.id = id;
};
var Functor = function (map) {
    this.map = map;
};
var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.apply = apply;
};
var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.pure = pure;
};
var Bind = function (__superclass_Prelude$dotApply_0, bind) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.bind = bind;
};
var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
};
var Semigroup = function (append) {
    this.append = append;
};
var Semiring = function (add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var Ring = function (__superclass_Prelude$dotSemiring_0, sub) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.sub = sub;
};
var ModuloSemiring = function (__superclass_Prelude$dotSemiring_0, div, mod) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.div = div;
    this.mod = mod;
};
var DivisionRing = function (__superclass_Prelude$dotModuloSemiring_1, __superclass_Prelude$dotRing_0) {
    this["__superclass_Prelude.ModuloSemiring_1"] = __superclass_Prelude$dotModuloSemiring_1;
    this["__superclass_Prelude.Ring_0"] = __superclass_Prelude$dotRing_0;
};
var Num = function (__superclass_Prelude$dotDivisionRing_0) {
    this["__superclass_Prelude.DivisionRing_0"] = __superclass_Prelude$dotDivisionRing_0;
};
var Eq = function (eq) {
    this.eq = eq;
};
var Ord = function (__superclass_Prelude$dotEq_0, compare) {
    this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
    this.compare = compare;
};
var Bounded = function (bottom, top) {
    this.bottom = bottom;
    this.top = top;
};
var BoundedOrd = function (__superclass_Prelude$dotBounded_0, __superclass_Prelude$dotOrd_1) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this["__superclass_Prelude.Ord_1"] = __superclass_Prelude$dotOrd_1;
};
var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this.conj = conj;
    this.disj = disj;
    this.not = not;
};
var Show = function (show) {
    this.show = show;
};
var $dollar = function (f) {
    return function (x) {
        return f(x);
    };
};
var $hash = function (x) {
    return function (f) {
        return f(x);
    };
};
var zero = function (dict) {
    return dict.zero;
};
var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
var unit = {};
var top = function (dict) {
    return dict.top;
};
var sub = function (dict) {
    return dict.sub;
};
var $minus = function (__dict_Ring_0) {
    return sub(__dict_Ring_0);
};
var showUnit = new Show(function (_171) {
    return "unit";
});
var showString = new Show($foreign.showStringImpl);
var showOrdering = new Show(function (_172) {
    if (_172 instanceof LT) {
        return "LT";
    };
    if (_172 instanceof GT) {
        return "GT";
    };
    if (_172 instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-prelude/src/Prelude.purs line 860, column 1 - line 865, column 1: " + [ _172.constructor.name ]);
});
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (_170) {
    if (_170) {
        return "true";
    };
    if (!_170) {
        return "false";
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-prelude/src/Prelude.purs line 838, column 1 - line 842, column 1: " + [ _170.constructor.name ]);
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (__dict_Show_1) {
    return new Show($foreign.showArrayImpl(show(__dict_Show_1)));
};
var semiringUnit = new Semiring(function (_143) {
    return function (_144) {
        return unit;
    };
}, function (_145) {
    return function (_146) {
        return unit;
    };
}, unit, unit);
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var semigroupUnit = new Semigroup(function (_140) {
    return function (_141) {
        return unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupOrdering = new Semigroup(function (_142) {
    return function (y) {
        if (_142 instanceof LT) {
            return LT.value;
        };
        if (_142 instanceof GT) {
            return GT.value;
        };
        if (_142 instanceof EQ) {
            return y;
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-prelude/src/Prelude.purs line 413, column 1 - line 418, column 1: " + [ _142.constructor.name, y.constructor.name ]);
    };
});
var semigroupArray = new Semigroup($foreign.concatArray);
var ringUnit = new Ring(function () {
    return semiringUnit;
}, function (_147) {
    return function (_148) {
        return unit;
    };
});
var ringNumber = new Ring(function () {
    return semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
    return semiringInt;
}, $foreign.intSub);
var pure = function (dict) {
    return dict.pure;
};
var $$return = function (__dict_Applicative_2) {
    return pure(__dict_Applicative_2);
};
var otherwise = true;
var one = function (dict) {
    return dict.one;
};
var not = function (dict) {
    return dict.not;
};
var negate = function (__dict_Ring_3) {
    return function (a) {
        return $minus(__dict_Ring_3)(zero(__dict_Ring_3["__superclass_Prelude.Semiring_0"]()))(a);
    };
};
var mul = function (dict) {
    return dict.mul;
};
var $times = function (__dict_Semiring_4) {
    return mul(__dict_Semiring_4);
};
var moduloSemiringUnit = new ModuloSemiring(function () {
    return semiringUnit;
}, function (_151) {
    return function (_152) {
        return unit;
    };
}, function (_153) {
    return function (_154) {
        return unit;
    };
});
var moduloSemiringNumber = new ModuloSemiring(function () {
    return semiringNumber;
}, $foreign.numDiv, function (_149) {
    return function (_150) {
        return 0.0;
    };
});
var moduloSemiringInt = new ModuloSemiring(function () {
    return semiringInt;
}, $foreign.intDiv, $foreign.intMod);
var mod = function (dict) {
    return dict.mod;
};
var map = function (dict) {
    return dict.map;
};
var $less$dollar$greater = function (__dict_Functor_5) {
    return map(__dict_Functor_5);
};
var $less$hash$greater = function (__dict_Functor_6) {
    return function (fa) {
        return function (f) {
            return $less$dollar$greater(__dict_Functor_6)(f)(fa);
        };
    };
};
var id = function (dict) {
    return dict.id;
};
var functorArray = new Functor($foreign.arrayMap);
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var eqUnit = new Eq(function (_155) {
    return function (_156) {
        return true;
    };
});
var ordUnit = new Ord(function () {
    return eqUnit;
}, function (_159) {
    return function (_160) {
        return EQ.value;
    };
});
var eqString = new Eq($foreign.refEq);
var ordString = new Ord(function () {
    return eqString;
}, unsafeCompare);
var eqOrdering = new Eq(function (_157) {
    return function (_158) {
        if (_157 instanceof LT && _158 instanceof LT) {
            return true;
        };
        if (_157 instanceof GT && _158 instanceof GT) {
            return true;
        };
        if (_157 instanceof EQ && _158 instanceof EQ) {
            return true;
        };
        return false;
    };
});
var ordOrdering = new Ord(function () {
    return eqOrdering;
}, function (_161) {
    return function (_162) {
        if (_161 instanceof LT && _162 instanceof LT) {
            return EQ.value;
        };
        if (_161 instanceof EQ && _162 instanceof EQ) {
            return EQ.value;
        };
        if (_161 instanceof GT && _162 instanceof GT) {
            return EQ.value;
        };
        if (_161 instanceof LT) {
            return LT.value;
        };
        if (_161 instanceof EQ && _162 instanceof LT) {
            return GT.value;
        };
        if (_161 instanceof EQ && _162 instanceof GT) {
            return LT.value;
        };
        if (_161 instanceof GT) {
            return GT.value;
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-prelude/src/Prelude.purs line 668, column 1 - line 677, column 1: " + [ _161.constructor.name, _162.constructor.name ]);
    };
});
var eqNumber = new Eq($foreign.refEq);
var ordNumber = new Ord(function () {
    return eqNumber;
}, unsafeCompare);
var eqInt = new Eq($foreign.refEq);
var ordInt = new Ord(function () {
    return eqInt;
}, unsafeCompare);
var eqChar = new Eq($foreign.refEq);
var ordChar = new Ord(function () {
    return eqChar;
}, unsafeCompare);
var eqBoolean = new Eq($foreign.refEq);
var ordBoolean = new Ord(function () {
    return eqBoolean;
}, unsafeCompare);
var eq = function (dict) {
    return dict.eq;
};
var $eq$eq = function (__dict_Eq_7) {
    return eq(__dict_Eq_7);
};
var eqArray = function (__dict_Eq_8) {
    return new Eq($foreign.eqArrayImpl($eq$eq(__dict_Eq_8)));
};
var divisionRingUnit = new DivisionRing(function () {
    return moduloSemiringUnit;
}, function () {
    return ringUnit;
});
var numUnit = new Num(function () {
    return divisionRingUnit;
});
var divisionRingNumber = new DivisionRing(function () {
    return moduloSemiringNumber;
}, function () {
    return ringNumber;
});
var numNumber = new Num(function () {
    return divisionRingNumber;
});
var div = function (dict) {
    return dict.div;
};
var $div = function (__dict_ModuloSemiring_10) {
    return div(__dict_ModuloSemiring_10);
};
var disj = function (dict) {
    return dict.disj;
};
var $bar$bar = function (__dict_BooleanAlgebra_11) {
    return disj(__dict_BooleanAlgebra_11);
};
var $$const = function (a) {
    return function (_138) {
        return a;
    };
};
var $$void = function (__dict_Functor_12) {
    return function (fa) {
        return $less$dollar$greater(__dict_Functor_12)($$const(unit))(fa);
    };
};
var conj = function (dict) {
    return dict.conj;
};
var $amp$amp = function (__dict_BooleanAlgebra_13) {
    return conj(__dict_BooleanAlgebra_13);
};
var compose = function (dict) {
    return dict.compose;
};
var functorFn = new Functor(compose(semigroupoidFn));
var $less$less$less = function (__dict_Semigroupoid_14) {
    return compose(__dict_Semigroupoid_14);
};
var $greater$greater$greater = function (__dict_Semigroupoid_15) {
    return flip(compose(__dict_Semigroupoid_15));
};
var compare = function (dict) {
    return dict.compare;
};
var ordArray = function (__dict_Ord_16) {
    return new Ord(function () {
        return eqArray(__dict_Ord_16["__superclass_Prelude.Eq_0"]());
    }, function (xs) {
        return function (ys) {
            return $dollar(compare(ordInt)(0))($foreign.ordArrayImpl(function (x) {
                return function (y) {
                    var _1146 = compare(__dict_Ord_16)(x)(y);
                    if (_1146 instanceof EQ) {
                        return 0;
                    };
                    if (_1146 instanceof LT) {
                        return 1;
                    };
                    if (_1146 instanceof GT) {
                        return negate(ringInt)(1);
                    };
                    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-prelude/src/Prelude.purs line 660, column 1 - line 666, column 1: " + [ _1146.constructor.name ]);
                };
            })(xs)(ys));
        };
    });
};
var $less = function (__dict_Ord_17) {
    return function (a1) {
        return function (a2) {
            var _1147 = compare(__dict_Ord_17)(a1)(a2);
            if (_1147 instanceof LT) {
                return true;
            };
            return false;
        };
    };
};
var $less$eq = function (__dict_Ord_18) {
    return function (a1) {
        return function (a2) {
            var _1148 = compare(__dict_Ord_18)(a1)(a2);
            if (_1148 instanceof GT) {
                return false;
            };
            return true;
        };
    };
};
var $greater = function (__dict_Ord_19) {
    return function (a1) {
        return function (a2) {
            var _1149 = compare(__dict_Ord_19)(a1)(a2);
            if (_1149 instanceof GT) {
                return true;
            };
            return false;
        };
    };
};
var $greater$eq = function (__dict_Ord_20) {
    return function (a1) {
        return function (a2) {
            var _1150 = compare(__dict_Ord_20)(a1)(a2);
            if (_1150 instanceof LT) {
                return false;
            };
            return true;
        };
    };
};
var categoryFn = new Category(function () {
    return semigroupoidFn;
}, function (x) {
    return x;
});
var boundedUnit = new Bounded(unit, unit);
var boundedOrdering = new Bounded(LT.value, GT.value);
var boundedOrdUnit = new BoundedOrd(function () {
    return boundedUnit;
}, function () {
    return ordUnit;
});
var boundedOrdOrdering = new BoundedOrd(function () {
    return boundedOrdering;
}, function () {
    return ordOrdering;
});
var boundedInt = new Bounded(negate(ringInt)(2147483648), 2147483647);
var boundedOrdInt = new BoundedOrd(function () {
    return boundedInt;
}, function () {
    return ordInt;
});
var boundedChar = new Bounded($foreign.bottomChar, $foreign.topChar);
var boundedOrdChar = new BoundedOrd(function () {
    return boundedChar;
}, function () {
    return ordChar;
});
var boundedBoolean = new Bounded(false, true);
var boundedOrdBoolean = new BoundedOrd(function () {
    return boundedBoolean;
}, function () {
    return ordBoolean;
});
var bottom = function (dict) {
    return dict.bottom;
};
var boundedFn = function (__dict_Bounded_21) {
    return new Bounded(function (_164) {
        return bottom(__dict_Bounded_21);
    }, function (_163) {
        return top(__dict_Bounded_21);
    });
};
var booleanAlgebraUnit = new BooleanAlgebra(function () {
    return boundedUnit;
}, function (_165) {
    return function (_166) {
        return unit;
    };
}, function (_167) {
    return function (_168) {
        return unit;
    };
}, function (_169) {
    return unit;
});
var booleanAlgebraFn = function (__dict_BooleanAlgebra_22) {
    return new BooleanAlgebra(function () {
        return boundedFn(__dict_BooleanAlgebra_22["__superclass_Prelude.Bounded_0"]());
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return conj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return disj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (a) {
            return not(__dict_BooleanAlgebra_22)(fx(a));
        };
    });
};
var booleanAlgebraBoolean = new BooleanAlgebra(function () {
    return boundedBoolean;
}, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
var $div$eq = function (__dict_Eq_9) {
    return function (x) {
        return function (y) {
            return not(booleanAlgebraBoolean)($eq$eq(__dict_Eq_9)(x)(y));
        };
    };
};
var bind = function (dict) {
    return dict.bind;
};
var liftM1 = function (__dict_Monad_23) {
    return function (f) {
        return function (a) {
            return bind(__dict_Monad_23["__superclass_Prelude.Bind_1"]())(a)(function (_23) {
                return $$return(__dict_Monad_23["__superclass_Prelude.Applicative_0"]())(f(_23));
            });
        };
    };
};
var $greater$greater$eq = function (__dict_Bind_24) {
    return bind(__dict_Bind_24);
};
var asTypeOf = function (x) {
    return function (_139) {
        return x;
    };
};
var applyFn = new Apply(function () {
    return functorFn;
}, function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
});
var bindFn = new Bind(function () {
    return applyFn;
}, function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
});
var apply = function (dict) {
    return dict.apply;
};
var $less$times$greater = function (__dict_Apply_25) {
    return apply(__dict_Apply_25);
};
var liftA1 = function (__dict_Applicative_26) {
    return function (f) {
        return function (a) {
            return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
        };
    };
};
var applicativeFn = new Applicative(function () {
    return applyFn;
}, $$const);
var monadFn = new Monad(function () {
    return applicativeFn;
}, function () {
    return bindFn;
});
var append = function (dict) {
    return dict.append;
};
var $plus$plus = function (__dict_Semigroup_27) {
    return append(__dict_Semigroup_27);
};
var $less$greater = function (__dict_Semigroup_28) {
    return append(__dict_Semigroup_28);
};
var semigroupFn = function (__dict_Semigroup_29) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return $less$greater(__dict_Semigroup_29)(f(x))(g(x));
            };
        };
    });
};
var ap = function (__dict_Monad_30) {
    return function (f) {
        return function (a) {
            return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_25) {
                return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_24) {
                    return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_25(_24));
                });
            });
        };
    };
};
var monadArray = new Monad(function () {
    return applicativeArray;
}, function () {
    return bindArray;
});
var bindArray = new Bind(function () {
    return applyArray;
}, $foreign.arrayBind);
var applyArray = new Apply(function () {
    return functorArray;
}, ap(monadArray));
var applicativeArray = new Applicative(function () {
    return applyArray;
}, function (x) {
    return [ x ];
});
var add = function (dict) {
    return dict.add;
};
var $plus = function (__dict_Semiring_31) {
    return add(__dict_Semiring_31);
};
module.exports = {
    LT: LT, 
    GT: GT, 
    EQ: EQ, 
    Show: Show, 
    BooleanAlgebra: BooleanAlgebra, 
    BoundedOrd: BoundedOrd, 
    Bounded: Bounded, 
    Ord: Ord, 
    Eq: Eq, 
    DivisionRing: DivisionRing, 
    Num: Num, 
    Ring: Ring, 
    ModuloSemiring: ModuloSemiring, 
    Semiring: Semiring, 
    Semigroup: Semigroup, 
    Monad: Monad, 
    Bind: Bind, 
    Applicative: Applicative, 
    Apply: Apply, 
    Functor: Functor, 
    Category: Category, 
    Semigroupoid: Semigroupoid, 
    show: show, 
    "||": $bar$bar, 
    "&&": $amp$amp, 
    not: not, 
    disj: disj, 
    conj: conj, 
    bottom: bottom, 
    top: top, 
    unsafeCompare: unsafeCompare, 
    ">=": $greater$eq, 
    "<=": $less$eq, 
    ">": $greater, 
    "<": $less, 
    compare: compare, 
    "/=": $div$eq, 
    "==": $eq$eq, 
    eq: eq, 
    "-": $minus, 
    negate: negate, 
    sub: sub, 
    "/": $div, 
    mod: mod, 
    div: div, 
    "*": $times, 
    "+": $plus, 
    one: one, 
    mul: mul, 
    zero: zero, 
    add: add, 
    "++": $plus$plus, 
    "<>": $less$greater, 
    append: append, 
    ap: ap, 
    liftM1: liftM1, 
    "return": $$return, 
    ">>=": $greater$greater$eq, 
    bind: bind, 
    liftA1: liftA1, 
    pure: pure, 
    "<*>": $less$times$greater, 
    apply: apply, 
    "void": $$void, 
    "<#>": $less$hash$greater, 
    "<$>": $less$dollar$greater, 
    map: map, 
    id: id, 
    ">>>": $greater$greater$greater, 
    "<<<": $less$less$less, 
    compose: compose, 
    otherwise: otherwise, 
    asTypeOf: asTypeOf, 
    "const": $$const, 
    flip: flip, 
    "#": $hash, 
    "$": $dollar, 
    unit: unit, 
    semigroupoidFn: semigroupoidFn, 
    categoryFn: categoryFn, 
    functorFn: functorFn, 
    functorArray: functorArray, 
    applyFn: applyFn, 
    applyArray: applyArray, 
    applicativeFn: applicativeFn, 
    applicativeArray: applicativeArray, 
    bindFn: bindFn, 
    bindArray: bindArray, 
    monadFn: monadFn, 
    monadArray: monadArray, 
    semigroupString: semigroupString, 
    semigroupUnit: semigroupUnit, 
    semigroupFn: semigroupFn, 
    semigroupOrdering: semigroupOrdering, 
    semigroupArray: semigroupArray, 
    semiringInt: semiringInt, 
    semiringNumber: semiringNumber, 
    semiringUnit: semiringUnit, 
    ringInt: ringInt, 
    ringNumber: ringNumber, 
    ringUnit: ringUnit, 
    moduloSemiringInt: moduloSemiringInt, 
    moduloSemiringNumber: moduloSemiringNumber, 
    moduloSemiringUnit: moduloSemiringUnit, 
    divisionRingNumber: divisionRingNumber, 
    divisionRingUnit: divisionRingUnit, 
    numNumber: numNumber, 
    numUnit: numUnit, 
    eqBoolean: eqBoolean, 
    eqInt: eqInt, 
    eqNumber: eqNumber, 
    eqChar: eqChar, 
    eqString: eqString, 
    eqUnit: eqUnit, 
    eqArray: eqArray, 
    eqOrdering: eqOrdering, 
    ordBoolean: ordBoolean, 
    ordInt: ordInt, 
    ordNumber: ordNumber, 
    ordString: ordString, 
    ordChar: ordChar, 
    ordUnit: ordUnit, 
    ordArray: ordArray, 
    ordOrdering: ordOrdering, 
    boundedBoolean: boundedBoolean, 
    boundedUnit: boundedUnit, 
    boundedOrdering: boundedOrdering, 
    boundedInt: boundedInt, 
    boundedChar: boundedChar, 
    boundedFn: boundedFn, 
    boundedOrdBoolean: boundedOrdBoolean, 
    boundedOrdUnit: boundedOrdUnit, 
    boundedOrdOrdering: boundedOrdOrdering, 
    boundedOrdInt: boundedOrdInt, 
    boundedOrdChar: boundedOrdChar, 
    booleanAlgebraBoolean: booleanAlgebraBoolean, 
    booleanAlgebraUnit: booleanAlgebraUnit, 
    booleanAlgebraFn: booleanAlgebraFn, 
    showBoolean: showBoolean, 
    showInt: showInt, 
    showNumber: showNumber, 
    showChar: showChar, 
    showString: showString, 
    showUnit: showUnit, 
    showArray: showArray, 
    showOrdering: showOrdering
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/foreign.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Ranking/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_Array = require("Data.Array");
var Prelude = require("Prelude");
var Tip = require("Tip");
var Player = require("Player");
var Data_Function = require("Data.Function");
var Team = require("Team");
var rankingsForStandings = function (metric) {
    return function (standings) {
        return Data_Array.sortBy(Data_Function.on(Prelude.compare(Prelude.ordNumber))(function (_0) {
            return _0.points;
        }))(Prelude.map(Prelude.functorArray)(function (p) {
            return {
                player: p, 
                points: Tip.ratePlayer(metric)(standings)(p)
            };
        })(Player.allPlayers));
    };
};
module.exports = {
    rankingsForStandings: rankingsForStandings
};

},{"Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Function":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Function/index.js","Player":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Player/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js","Team":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Team/index.js","Tip":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Tip/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Ratings/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_Int = require("Data.Int");
var Tip = require("Tip");
var Data_Array = require("Data.Array");
var Data_Maybe = require("Data.Maybe");
var Team = require("Team");
var ratings = function (metric) {
    return function (tips) {
        return function (standings) {
            var rating = function (i) {
                return function (team) {
                    var value = Tip.rateTip(metric)(standings)(team)(i);
                    var t = Tip.trend(standings)(team)(i);
                    var dist = (function () {
                        var _85 = Data_Int.fromNumber(Tip.rateTip(Tip.Manhattan.value)(standings)(team)(i));
                        if (_85 instanceof Data_Maybe.Just) {
                            return _85.value0;
                        };
                        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Ratings.purs line 18, column 3 - line 24, column 62: " + [ _85.constructor.name ]);
                    })();
                    return {
                        pos: i, 
                        team: team, 
                        value: value, 
                        dist: dist, 
                        trend: t
                    };
                };
            };
            return Data_Array.zipWith(rating)(Data_Array.range(1)(Data_Array.length(tips)))(tips);
        };
    };
};
module.exports = {
    ratings: ratings
};

},{"Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Int":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Team":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Team/index.js","Tip":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Tip/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routes/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Routing_Match_Class = require("Routing.Match.Class");
var Data_Foldable = require("Data.Foldable");
var Control_Plus = require("Control.Plus");
var Player = require("Player");
var Routing = require("Routing");
var Routing_Match = require("Routing.Match");
var PlayersRoute = (function () {
    function PlayersRoute() {

    };
    PlayersRoute.value = new PlayersRoute();
    return PlayersRoute;
})();
var TipsRoute = (function () {
    function TipsRoute(value0) {
        this.value0 = value0;
    };
    TipsRoute.create = function (value0) {
        return new TipsRoute(value0);
    };
    return TipsRoute;
})();
var playerLit = function (_59) {
    if (_59 instanceof Player.JanWulf) {
        return "janw";
    };
    if (_59 instanceof Player.Jan) {
        return "jan";
    };
    if (_59 instanceof Player.JR) {
        return "jr";
    };
    if (_59 instanceof Player.Christoph) {
        return "christoph";
    };
    if (_59 instanceof Player.Johannes) {
        return "johannes";
    };
    if (_59 instanceof Player.Julia) {
        return "julia";
    };
    if (_59 instanceof Player.Daniel) {
        return "daniel";
    };
    if (_59 instanceof Player.Mirko) {
        return "mirko";
    };
    if (_59 instanceof Player.Ulf) {
        return "ulf";
    };
    if (_59 instanceof Player.Sandra) {
        return "sandra";
    };
    if (_59 instanceof Player.Maike) {
        return "maike";
    };
    if (_59 instanceof Player.Nikita) {
        return "nikita";
    };
    if (_59 instanceof Player.Henning) {
        return "henning";
    };
    if (_59 instanceof Player.Spiegel) {
        return "spiegel";
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Routes.purs line 33, column 1 - line 34, column 1: " + [ _59.constructor.name ]);
};
var reverseRoute = function (_58) {
    if (_58 instanceof PlayersRoute) {
        return "#";
    };
    if (_58 instanceof TipsRoute) {
        return "#" + playerLit(_58.value0);
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Routes.purs line 19, column 1 - line 20, column 1: " + [ _58.constructor.name ]);
};
var routingPlayer = Data_Foldable.foldr(Data_Foldable.foldableArray)(Control_Alt["<|>"](Routing_Match.matchAlt))(Control_Plus.empty(Routing_Match.matchPlus))(Prelude.map(Prelude.functorArray)(function (p) {
    return Prelude["<$>"](Routing_Match.matchFunctor)(Prelude["const"](p))(Routing_Match_Class.lit(Routing_Match.matchMatchClass)(playerLit(p)));
})(Player.allPlayers));
var routing = Control_Alt["<|>"](Routing_Match.matchAlt)(Prelude["<$>"](Routing_Match.matchFunctor)(Prelude["const"](PlayersRoute.value))(Routing_Match_Class.lit(Routing_Match.matchMatchClass)("")))(Prelude["<$>"](Routing_Match.matchFunctor)(TipsRoute.create)(routingPlayer));
module.exports = {
    PlayersRoute: PlayersRoute, 
    TipsRoute: TipsRoute, 
    playerLit: playerLit, 
    routingPlayer: routingPlayer, 
    routing: routing, 
    reverseRoute: reverseRoute
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Player":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Player/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js","Routing":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing/index.js","Routing.Match":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing.Match/index.js","Routing.Match.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing.Match.Class/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing.Match.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Alternative = require("Control.Alternative");
var MatchClass = function (__superclass_Control$dotAlternative$dotAlternative_0, bool, fail, lit, num, param, str) {
    this["__superclass_Control.Alternative.Alternative_0"] = __superclass_Control$dotAlternative$dotAlternative_0;
    this.bool = bool;
    this.fail = fail;
    this.lit = lit;
    this.num = num;
    this.param = param;
    this.str = str;
};
var str = function (dict) {
    return dict.str;
};
var param = function (dict) {
    return dict.param;
};
var num = function (dict) {
    return dict.num;
};
var lit = function (dict) {
    return dict.lit;
};
var fail = function (dict) {
    return dict.fail;
};
var bool = function (dict) {
    return dict.bool;
};
module.exports = {
    MatchClass: MatchClass, 
    fail: fail, 
    bool: bool, 
    num: num, 
    param: param, 
    str: str, 
    lit: lit
};

},{"Control.Alternative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alternative/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing.Match.Error/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var UnexpectedPath = (function () {
    function UnexpectedPath(value0) {
        this.value0 = value0;
    };
    UnexpectedPath.create = function (value0) {
        return new UnexpectedPath(value0);
    };
    return UnexpectedPath;
})();
var ExpectedBoolean = (function () {
    function ExpectedBoolean() {

    };
    ExpectedBoolean.value = new ExpectedBoolean();
    return ExpectedBoolean;
})();
var ExpectedNumber = (function () {
    function ExpectedNumber() {

    };
    ExpectedNumber.value = new ExpectedNumber();
    return ExpectedNumber;
})();
var ExpectedString = (function () {
    function ExpectedString() {

    };
    ExpectedString.value = new ExpectedString();
    return ExpectedString;
})();
var ExpectedQuery = (function () {
    function ExpectedQuery() {

    };
    ExpectedQuery.value = new ExpectedQuery();
    return ExpectedQuery;
})();
var ExpectedPathPart = (function () {
    function ExpectedPathPart() {

    };
    ExpectedPathPart.value = new ExpectedPathPart();
    return ExpectedPathPart;
})();
var KeyNotFound = (function () {
    function KeyNotFound(value0) {
        this.value0 = value0;
    };
    KeyNotFound.create = function (value0) {
        return new KeyNotFound(value0);
    };
    return KeyNotFound;
})();
var Fail = (function () {
    function Fail(value0) {
        this.value0 = value0;
    };
    Fail.create = function (value0) {
        return new Fail(value0);
    };
    return Fail;
})();
var showMatchError = function (err) {
    if (err instanceof UnexpectedPath) {
        return "expected path part: " + err.value0;
    };
    if (err instanceof KeyNotFound) {
        return "key: " + (err.value0 + " has not found in query part");
    };
    if (err instanceof ExpectedQuery) {
        return "expected query - found path";
    };
    if (err instanceof ExpectedNumber) {
        return "expected number";
    };
    if (err instanceof ExpectedBoolean) {
        return "expected boolean";
    };
    if (err instanceof ExpectedString) {
        return "expected string var";
    };
    if (err instanceof ExpectedPathPart) {
        return "expected path part, found query";
    };
    if (err instanceof Fail) {
        return "match error: " + err.value0;
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-routing/src/Routing/Match/Error.purs line 23, column 1 - line 24, column 1: " + [ err.constructor.name ]);
};
module.exports = {
    UnexpectedPath: UnexpectedPath, 
    ExpectedBoolean: ExpectedBoolean, 
    ExpectedNumber: ExpectedNumber, 
    ExpectedString: ExpectedString, 
    ExpectedQuery: ExpectedQuery, 
    ExpectedPathPart: ExpectedPathPart, 
    KeyNotFound: KeyNotFound, 
    Fail: Fail, 
    showMatchError: showMatchError
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing.Match/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Validation_Semiring = require("Data.Validation.Semiring");
var Data_Semiring_Free = require("Data.Semiring.Free");
var Global = require("Global");
var Data_StrMap = require("Data.StrMap");
var Control_Alt = require("Control.Alt");
var Data_List = require("Data.List");
var Data_Foldable = require("Data.Foldable");
var Routing_Match_Error = require("Routing.Match.Error");
var Data_Tuple = require("Data.Tuple");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Control_Plus = require("Control.Plus");
var Control_Apply = require("Control.Apply");
var Control_Alternative = require("Control.Alternative");
var Control_Monad_Error = require("Control.Monad.Error");
var Data_Array = require("Data.Array");
var Routing_Parser = require("Routing.Parser");
var Routing_Types = require("Routing.Types");
var Routing_Match_Class = require("Routing.Match.Class");
var Match = function (x) {
    return x;
};
var runMatch = function (_644) {
    return function (route) {
        var foldErrors = function (errs) {
            return Data_Either.Left.create(Data_Foldable.foldl(Data_List.foldableList)(function (b) {
                return function (a) {
                    return a + ("\n" + b);
                };
            })("")(Prelude.bind(Data_List.bindList)(Prelude["<$>"](Data_List.functorList)(Data_List.reverse)(Data_Semiring_Free.runFree(errs)))(function (_116) {
                return Prelude.pure(Data_List.applicativeList)(Data_Foldable.foldl(Data_List.foldableList)(function (b) {
                    return function (a) {
                        return a + (";" + b);
                    };
                })("")(Prelude["<$>"](Data_List.functorList)(Routing_Match_Error.showMatchError)(_116)));
            })));
        };
        return Data_Validation_Semiring.runV(foldErrors)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Right.create)(Data_Tuple.snd))(_644(route));
    };
};
var matchFunctor = new Prelude.Functor(function (fn) {
    return function (_646) {
        return Match(function (r) {
            return Data_Validation_Semiring.runV(Data_Validation_Semiring.invalid)(function (_640) {
                return Prelude.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(_640.value0, fn(_640.value1)));
            })(_646(r));
        });
    };
});
var matchApply = new Prelude.Apply(function () {
    return matchFunctor;
}, function (_649) {
    return function (_650) {
        var processFnRes = function (_651) {
            return Data_Validation_Semiring.runV(Data_Validation_Semiring.invalid)(function (_641) {
                return Prelude.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(_641.value0, _651.value1(_641.value1)));
            })(_650(_651.value0));
        };
        var processFnErr = function (r) {
            return function (err) {
                return Data_Validation_Semiring.invalid(Prelude["*"](Data_Semiring_Free.semiringFree)(err)(Data_Validation_Semiring.runV(Prelude.id(Prelude.categoryFn))(Prelude["const"](Prelude.one(Data_Semiring_Free.semiringFree)))(_650(r))));
            };
        };
        return Match(function (r) {
            return Data_Validation_Semiring.runV(processFnErr(r))(processFnRes)(_649(r));
        });
    };
});
var matchApplicative = new Prelude.Applicative(function () {
    return matchApply;
}, function (a) {
    return function (r) {
        return Prelude.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(r, a));
    };
});
var matchAlt = new Control_Alt.Alt(function () {
    return matchFunctor;
}, function (_647) {
    return function (_648) {
        return Match(function (r) {
            return Control_Alt["<|>"](Data_Validation_Semiring.altV(Data_Semiring_Free.semiringFree))(_647(r))(_648(r));
        });
    };
});
var matchPlus = new Control_Plus.Plus(function () {
    return matchAlt;
}, Match(Prelude["const"](Data_Validation_Semiring.invalid(Prelude.one(Data_Semiring_Free.semiringFree)))));
var matchAlternative = new Control_Alternative.Alternative(function () {
    return matchPlus;
}, function () {
    return matchApplicative;
});
var matchMatchClass = new Routing_Match_Class.MatchClass(function () {
    return matchAlternative;
}, Match(function (route) {
    if (route instanceof Data_List.Cons && (route.value0 instanceof Routing_Types.Path && Prelude["=="](Prelude.eqString)(route.value0.value0)("true"))) {
        return Prelude.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, true));
    };
    if (route instanceof Data_List.Cons && (route.value0 instanceof Routing_Types.Path && Prelude["=="](Prelude.eqString)(route.value0.value0)("false"))) {
        return Prelude.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, false));
    };
    return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedBoolean.value));
}), function (msg) {
    return function (_639) {
        return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(new Routing_Match_Error.Fail(msg)));
    };
}, function (input) {
    return Match(function (route) {
        if (route instanceof Data_List.Cons && (route.value0 instanceof Routing_Types.Path && Prelude["=="](Prelude.eqString)(route.value0.value0)(input))) {
            return Prelude.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, Prelude.unit));
        };
        if (route instanceof Data_List.Cons && route.value0 instanceof Routing_Types.Path) {
            return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(new Routing_Match_Error.UnexpectedPath(input)));
        };
        return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedPathPart.value));
    });
}, Match(function (route) {
    if (route instanceof Data_List.Cons && route.value0 instanceof Routing_Types.Path) {
        var res = Global.readFloat(route.value0.value0);
        var _829 = Global.isNaN(res);
        if (_829) {
            return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedNumber.value));
        };
        if (!_829) {
            return Prelude.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, res));
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-routing/src/Routing/Match.purs line 27, column 1 - line 76, column 1: " + [ _829.constructor.name ]);
    };
    return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedNumber.value));
}), function (key) {
    return Match(function (route) {
        if (route instanceof Data_List.Cons && route.value0 instanceof Routing_Types.Query) {
            var _834 = Data_StrMap.lookup(key)(route.value0.value0);
            if (_834 instanceof Data_Maybe.Nothing) {
                return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(new Routing_Match_Error.KeyNotFound(key)));
            };
            if (_834 instanceof Data_Maybe.Just) {
                return Prelude.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(new Data_List.Cons(Prelude["<<<"](Prelude.semigroupoidFn)(Routing_Types.Query.create)(Data_StrMap["delete"](key))(route.value0.value0), route.value1), _834.value0));
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-routing/src/Routing/Match.purs line 27, column 1 - line 76, column 1: " + [ _834.constructor.name ]);
        };
        return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedQuery.value));
    });
}, Match(function (route) {
    if (route instanceof Data_List.Cons && route.value0 instanceof Routing_Types.Path) {
        return Prelude.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, route.value0.value0));
    };
    return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedString.value));
}));
var list = function (_643) {
    var go = function (accum) {
        return function (r) {
            return Data_Validation_Semiring.runV(Prelude["const"](Prelude.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(r, Data_List.reverse(accum)))))(function (_642) {
                return go(new Data_List.Cons(_642.value1, accum))(_642.value0);
            })(_643(r));
        };
    };
    return Match(go(Data_List.Nil.value));
};
var eitherMatch = function (_645) {
    var runEither = function (_652) {
        if (_652.value1 instanceof Data_Either.Left) {
            return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(new Routing_Match_Error.Fail("Nested check failed")));
        };
        if (_652.value1 instanceof Data_Either.Right) {
            return Prelude.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(_652.value0, _652.value1.value0));
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/bower_components/purescript-routing/src/Routing/Match.purs line 146, column 9 - line 149, column 42: " + [ _652.value1.constructor.name ]);
    };
    return Match(function (r) {
        return Data_Validation_Semiring.runV(Data_Validation_Semiring.invalid)(runEither)(_645(r));
    });
};
module.exports = {
    Match: Match, 
    eitherMatch: eitherMatch, 
    runMatch: runMatch, 
    list: list, 
    matchMatchClass: matchMatchClass, 
    matchFunctor: matchFunctor, 
    matchAlt: matchAlt, 
    matchPlus: matchPlus, 
    matchAlternative: matchAlternative, 
    matchApply: matchApply, 
    matchApplicative: matchApplicative
};

},{"Control.Alt":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alt/index.js","Control.Alternative":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Alternative/index.js","Control.Apply":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Apply/index.js","Control.Monad.Error":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Error/index.js","Control.Plus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Plus/index.js","Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Semiring.Free":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Semiring.Free/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Data.Validation.Semiring":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Validation.Semiring/index.js","Global":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Global/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js","Routing.Match.Class":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing.Match.Class/index.js","Routing.Match.Error":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing.Match.Error/index.js","Routing.Parser":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing.Parser/index.js","Routing.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing.Types/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing.Parser/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_List = require("Data.List");
var Data_String = require("Data.String");
var Control_MonadPlus = require("Control.MonadPlus");
var Data_Array = require("Data.Array");
var Data_Maybe = require("Data.Maybe");
var Data_StrMap = require("Data.StrMap");
var Data_Traversable = require("Data.Traversable");
var Data_Tuple = require("Data.Tuple");
var Routing_Types = require("Routing.Types");
var Data_Foldable = require("Data.Foldable");
var tryQuery = function (_619) {
    if (_619 instanceof Routing_Types.Path) {
        var parts = Data_List.toList(Data_Foldable.foldableArray)(Data_String.split("&")(Data_String.drop(1)(_619.value0)));
        var part2tuple = function (input) {
            var keyVal = Data_String.split("=")(input);
            return Prelude.bind(Data_Maybe.bindMaybe)(Control_MonadPlus.guard(Data_Maybe.monadPlusMaybe)(Prelude["<="](Prelude.ordInt)(Data_Array.length(keyVal))(2)))(function () {
                return Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(Data_Array.head(keyVal)))(Data_Array["!!"](keyVal)(1));
            });
        };
        return Data_Maybe.fromMaybe(_619)(Prelude.bind(Data_Maybe.bindMaybe)(Control_MonadPlus.guard(Data_Maybe.monadPlusMaybe)(Prelude["=="](Prelude.eqString)(Data_String.take(1)(_619.value0))("?")))(function () {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<$>"](Prelude.functorFn)(Routing_Types.Query.create)(Data_StrMap.fromList))(Data_Traversable.traverse(Data_List.traversableList)(Data_Maybe.applicativeMaybe)(part2tuple)(parts));
        }));
    };
    return _619;
};
var parse = function (decoder) {
    return function (hash) {
        return Prelude["<$>"](Data_List.functorList)(Prelude["<$>"](Prelude.functorFn)(Prelude["<$>"](Prelude.functorFn)(tryQuery)(Routing_Types.Path.create))(decoder))(Data_List.toList(Data_Foldable.foldableArray)(Data_String.split("/")(hash)));
    };
};
module.exports = {
    parse: parse
};

},{"Control.MonadPlus":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.MonadPlus/index.js","Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js","Data.String":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js","Routing.Types":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing.Types/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_StrMap = require("Data.StrMap");
var Data_List = require("Data.List");
var Path = (function () {
    function Path(value0) {
        this.value0 = value0;
    };
    Path.create = function (value0) {
        return new Path(value0);
    };
    return Path;
})();
var Query = (function () {
    function Query(value0) {
        this.value0 = value0;
    };
    Query.create = function (value0) {
        return new Query(value0);
    };
    return Query;
})();
module.exports = {
    Path: Path, 
    Query: Query
};

},{"Data.List":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.List/index.js","Data.StrMap":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.StrMap/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing/foreign.js":[function(require,module,exports){
// module Routing

exports.hashChanged = function(handler) {
    return function() {
        var getHash = function() {
            return document.location.href.split('#').splice(1).join('#');
        };
        var oldHash = '';
        handler('')(getHash())();
        window.addEventListener('hashchange', function(ev) {
            var newHash = getHash();
            handler(oldHash)(newHash)();
            oldHash = newHash;
        });
    };
};

exports.decodeURIComponent = window.decodeURIComponent;

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_String_Regex = require("Data.String.Regex");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Control_Monad_Aff = require("Control.Monad.Aff");
var Routing_Match = require("Routing.Match");
var Routing_Parser = require("Routing.Parser");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var matchHash$prime = function (decoder) {
    return function (matcher) {
        return function (hash) {
            return Routing_Match.runMatch(matcher)(Routing_Parser.parse(decoder)(hash));
        };
    };
};
var matchHash = matchHash$prime($foreign.decodeURIComponent);
var hashes = function (cb) {
    var dropHash = function (h) {
        return Data_String_Regex.replace(Data_String_Regex.regex("^[^#]*#")(Data_String_Regex.noFlags))("")(h);
    };
    return $foreign.hashChanged(function (old) {
        return function ($$new) {
            return cb(dropHash(old))(dropHash($$new));
        };
    });
};
var matches$prime = function (decoder) {
    return function (routing) {
        return function (cb) {
            return hashes(function (old) {
                return function ($$new) {
                    var mr = matchHash$prime(decoder)(routing);
                    var fst = Data_Either.either(Prelude["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(mr(old));
                    return Data_Either.either(Prelude["const"](Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit)))(cb(fst))(mr($$new));
                };
            });
        };
    };
};
var matches = matches$prime($foreign.decodeURIComponent);
var matchesAff$prime = function (decoder) {
    return function (routing) {
        return Control_Monad_Aff.makeAff(function (_653) {
            return function (k) {
                return matches$prime(decoder)(routing)(function (old) {
                    return function ($$new) {
                        return k(new Data_Tuple.Tuple(old, $$new));
                    };
                });
            };
        });
    };
};
var matchesAff = matchesAff$prime($foreign.decodeURIComponent);
module.exports = {
    "matchesAff'": matchesAff$prime, 
    matchesAff: matchesAff, 
    "matchHash'": matchHash$prime, 
    matchHash: matchHash, 
    "matches'": matches$prime, 
    matches: matches, 
    hashes: hashes, 
    hashChanged: $foreign.hashChanged
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing/foreign.js","Control.Monad.Aff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff/index.js","Control.Monad.Eff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Eff/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.String.Regex":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.String.Regex/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js","Routing.Match":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing.Match/index.js","Routing.Parser":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Routing.Parser/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Standings/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Network_HTTP_Affjax = require("Network.HTTP.Affjax");
var Data_JSON = require("Data.JSON");
var Data_Maybe = require("Data.Maybe");
var Data_Map = require("Data.Map");
var Data_Traversable = require("Data.Traversable");
var Control_Monad_Aff = require("Control.Monad.Aff");
var Data_Array = require("Data.Array");
var Data_Either = require("Data.Either");
var Data_Tuple = require("Data.Tuple");
var Network_HTTP_RequestHeader = require("Network.HTTP.RequestHeader");
var Team = require("Team");
var Network_HTTP_Affjax_Request = require("Network.HTTP.Affjax.Request");
var Network_HTTP_Affjax_Response = require("Network.HTTP.Affjax.Response");
var LeagueTable = (function () {
    function LeagueTable(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    LeagueTable.create = function (value0) {
        return function (value1) {
            return new LeagueTable(value0, value1);
        };
    };
    return LeagueTable;
})();
var standings = function (_48) {
    return _48.value1;
};
var parseUrl = function (_55) {
    if (_55 instanceof Data_JSON.JString) {
        return new Data_Either.Right(_55.value0);
    };
    return new Data_Either.Left("cresUrl should be a string");
};
var parseTeamName = function (_53) {
    if (_53 === "FC Bayern München") {
        return new Data_Either.Right(Team.Bayern.value);
    };
    if (_53 === "Borussia Dortmund") {
        return new Data_Either.Right(Team.Dortmund.value);
    };
    if (_53 === "FC Schalke 04") {
        return new Data_Either.Right(Team.Schalke.value);
    };
    if (_53 === "1. FC Köln") {
        return new Data_Either.Right(Team.Koeln.value);
    };
    if (_53 === "Bayer Leverkusen") {
        return new Data_Either.Right(Team.Leverkusen.value);
    };
    if (_53 === "VfL Wolfsburg") {
        return new Data_Either.Right(Team.Wolfsburg.value);
    };
    if (_53 === "Hertha BSC") {
        return new Data_Either.Right(Team.Berlin.value);
    };
    if (_53 === "FC Ingolstadt 04") {
        return new Data_Either.Right(Team.Ingolstadt.value);
    };
    if (_53 === "SV Darmstadt 98") {
        return new Data_Either.Right(Team.Darmstadt.value);
    };
    if (_53 === "Hannover 96") {
        return new Data_Either.Right(Team.Hannover.value);
    };
    if (_53 === "Eintracht Frankfurt") {
        return new Data_Either.Right(Team.Frankfurt.value);
    };
    if (_53 === "TSG 1899 Hoffenheim") {
        return new Data_Either.Right(Team.Hoffenheim.value);
    };
    if (_53 === "FC Augsburg") {
        return new Data_Either.Right(Team.Augsburg.value);
    };
    if (_53 === "1. FSV Mainz 05") {
        return new Data_Either.Right(Team.Mainz.value);
    };
    if (_53 === "VfB Stuttgart") {
        return new Data_Either.Right(Team.Stuttgart.value);
    };
    if (_53 === "Werder Bremen") {
        return new Data_Either.Right(Team.Bremen.value);
    };
    if (_53 === "Bor. Mönchengladbach") {
        return new Data_Either.Right(Team.Gladbach.value);
    };
    if (_53 === "Hamburger SV") {
        return new Data_Either.Right(Team.Hamburg.value);
    };
    return new Data_Either.Left("TeamName \"" + (_53 + "\" cannot be parsed"));
};
var parseTeam = function (_52) {
    if (_52 instanceof Data_JSON.JObject) {
        var parseJSTeamName = function (_57) {
            if (_57 instanceof Data_JSON.JString) {
                return parseTeamName(_57.value0);
            };
            return new Data_Either.Left("TeamName is not a string");
        };
        return Prelude[">>="](Data_Either.bindEither)(Data_Maybe.maybe(new Data_Either.Left("No property teamName"))(Data_Either.Right.create)(Data_Map.lookup(Prelude.ordString)("teamName")(_52.value0)))(parseJSTeamName);
    };
    return new Data_Either.Left("Team is not an object");
};
var parseStanding = function (_51) {
    if (_51 instanceof Data_JSON.JArray) {
        return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(parseTeam)(_51.value0);
    };
    return new Data_Either.Left("Standing is not an array");
};
var parseInt = function (_50) {
    if (_50 instanceof Data_JSON.JInt) {
        return new Data_Either.Right(_50.value0);
    };
    return new Data_Either.Left("Data is not an integer");
};
var parseField = function (fieldName) {
    return function (_49) {
        if (_49 instanceof Data_JSON.JObject) {
            return Data_Maybe.maybe(new Data_Either.Left("No property " + (Prelude.show(Prelude.showString)(fieldName) + (" in " + Prelude.show(Data_JSON.showValue)(_49)))))(Data_Either.Right.create)(Data_Map.lookup(Prelude.ordString)(fieldName)(_49.value0));
        };
        return new Data_Either.Left("Data is not a object");
    };
};
var parseMatchday = function (jValue) {
    return Prelude[">>="](Data_Either.bindEither)(parseField("matchday")(jValue))(parseInt);
};
var parseStandings = function (jValue) {
    return Prelude[">>="](Data_Either.bindEither)(parseField("standing")(jValue))(parseStanding);
};
var parseCode = function (_54) {
    if (_54 instanceof Data_JSON.JString) {
        return new Data_Either.Right(_54.value0);
    };
    return new Data_Either.Left("code should be a string");
};
var parseSvgUrl = function (jValue) {
    return Prelude.bind(Data_Either.bindEither)(parseField("crestUrl")(jValue))(function (_14) {
        return Prelude.bind(Data_Either.bindEither)(parseCode(_14))(function (_13) {
            return Prelude.bind(Data_Either.bindEither)(parseUrl(_14))(function (_12) {
                return Prelude["return"](Data_Either.applicativeEither)(new Data_Tuple.Tuple(_13, _12));
            });
        });
    });
};
var matchday = function (_47) {
    return _47.value0;
};
var leagueTable = function (mDay) {
    var matchdayQuery = function (_56) {
        if (_56 instanceof Data_Maybe.Nothing) {
            return "";
        };
        if (_56 instanceof Data_Maybe.Just) {
            return "?matchday=" + Prelude.show(Prelude.showInt)(_56.value0);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Standings.purs line 39, column 3 - line 40, column 3: " + [ _56.constructor.name ]);
    };
    var reqHeader = new Network_HTTP_RequestHeader.RequestHeader("X-Auth-Token", "9d7d681dea7c4cf49b095d7cc1d8d9c5");
    var req = (function () {
        var _113 = {};
        for (var _114 in Network_HTTP_Affjax.defaultRequest) {
            if (Network_HTTP_Affjax.defaultRequest.hasOwnProperty(_114)) {
                _113[_114] = Network_HTTP_Affjax.defaultRequest[_114];
            };
        };
        _113.headers = [ reqHeader ];
        _113.url = "http://api.football-data.org/alpha/soccerseasons/394/leagueTable" + matchdayQuery(mDay);
        return _113;
    })();
    return Prelude.bind(Control_Monad_Aff.bindAff)(Network_HTTP_Affjax.affjax(Network_HTTP_Affjax_Request.requestableUnit)(Network_HTTP_Affjax_Response.responsableString)(req))(function (_9) {
        return Prelude["return"](Control_Monad_Aff.applicativeAff)(Prelude.bind(Data_Either.bindEither)(Data_JSON.eitherDecode(Data_JSON.valueFromJSON)(_9.response))(function (_8) {
            return Prelude.bind(Data_Either.bindEither)(parseMatchday(_8))(function (_7) {
                return Prelude.bind(Data_Either.bindEither)(parseStandings(_8))(function (_6) {
                    return Prelude["return"](Data_Either.applicativeEither)(new LeagueTable(_7, _6));
                });
            });
        }));
    });
};
var icon = function (teamNo) {
    var reqHeader = new Network_HTTP_RequestHeader.RequestHeader("X-Auth-Token", "9d7d681dea7c4cf49b095d7cc1d8d9c5");
    var req = (function () {
        var _119 = {};
        for (var _120 in Network_HTTP_Affjax.defaultRequest) {
            if (Network_HTTP_Affjax.defaultRequest.hasOwnProperty(_120)) {
                _119[_120] = Network_HTTP_Affjax.defaultRequest[_120];
            };
        };
        _119.headers = [ reqHeader ];
        _119.url = "http://api.football-data.org/alpha/teams/" + Prelude.show(Prelude.showInt)(teamNo);
        return _119;
    })();
    return Prelude.bind(Control_Monad_Aff.bindAff)(Network_HTTP_Affjax.affjax(Network_HTTP_Affjax_Request.requestableUnit)(Network_HTTP_Affjax_Response.responsableString)(req))(function (_11) {
        return Prelude["return"](Control_Monad_Aff.applicativeAff)(Prelude.bind(Data_Either.bindEither)(Data_JSON.eitherDecode(Data_JSON.valueFromJSON)(_11.response))(function (_10) {
            return parseSvgUrl(_10);
        }));
    });
};
module.exports = {
    LeagueTable: LeagueTable, 
    parseUrl: parseUrl, 
    parseCode: parseCode, 
    parseSvgUrl: parseSvgUrl, 
    icon: icon, 
    parseTeamName: parseTeamName, 
    parseTeam: parseTeam, 
    parseStanding: parseStanding, 
    parseStandings: parseStandings, 
    parseInt: parseInt, 
    parseMatchday: parseMatchday, 
    parseField: parseField, 
    leagueTable: leagueTable, 
    standings: standings, 
    matchday: matchday
};

},{"Control.Monad.Aff":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Control.Monad.Aff/index.js","Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Either":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Either/index.js","Data.JSON":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.JSON/index.js","Data.Map":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Map/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Data.Traversable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Traversable/index.js","Data.Tuple":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Tuple/index.js","Network.HTTP.Affjax":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.Affjax/index.js","Network.HTTP.Affjax.Request":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.Affjax.Request/index.js","Network.HTTP.Affjax.Response":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.Affjax.Response/index.js","Network.HTTP.RequestHeader":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Network.HTTP.RequestHeader/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js","Team":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Team/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Team/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Util = require("Util");
var Bayern = (function () {
    function Bayern() {

    };
    Bayern.value = new Bayern();
    return Bayern;
})();
var Leverkusen = (function () {
    function Leverkusen() {

    };
    Leverkusen.value = new Leverkusen();
    return Leverkusen;
})();
var Dortmund = (function () {
    function Dortmund() {

    };
    Dortmund.value = new Dortmund();
    return Dortmund;
})();
var Wolfsburg = (function () {
    function Wolfsburg() {

    };
    Wolfsburg.value = new Wolfsburg();
    return Wolfsburg;
})();
var Mainz = (function () {
    function Mainz() {

    };
    Mainz.value = new Mainz();
    return Mainz;
})();
var Schalke = (function () {
    function Schalke() {

    };
    Schalke.value = new Schalke();
    return Schalke;
})();
var Gladbach = (function () {
    function Gladbach() {

    };
    Gladbach.value = new Gladbach();
    return Gladbach;
})();
var Hannover = (function () {
    function Hannover() {

    };
    Hannover.value = new Hannover();
    return Hannover;
})();
var Hoffenheim = (function () {
    function Hoffenheim() {

    };
    Hoffenheim.value = new Hoffenheim();
    return Hoffenheim;
})();
var Stuttgart = (function () {
    function Stuttgart() {

    };
    Stuttgart.value = new Stuttgart();
    return Stuttgart;
})();
var Hamburg = (function () {
    function Hamburg() {

    };
    Hamburg.value = new Hamburg();
    return Hamburg;
})();
var Bremen = (function () {
    function Bremen() {

    };
    Bremen.value = new Bremen();
    return Bremen;
})();
var Augsburg = (function () {
    function Augsburg() {

    };
    Augsburg.value = new Augsburg();
    return Augsburg;
})();
var Frankfurt = (function () {
    function Frankfurt() {

    };
    Frankfurt.value = new Frankfurt();
    return Frankfurt;
})();
var Koeln = (function () {
    function Koeln() {

    };
    Koeln.value = new Koeln();
    return Koeln;
})();
var Berlin = (function () {
    function Berlin() {

    };
    Berlin.value = new Berlin();
    return Berlin;
})();
var Darmstadt = (function () {
    function Darmstadt() {

    };
    Darmstadt.value = new Darmstadt();
    return Darmstadt;
})();
var Ingolstadt = (function () {
    function Ingolstadt() {

    };
    Ingolstadt.value = new Ingolstadt();
    return Ingolstadt;
})();
var showTeam = new Prelude.Show(function (_40) {
    if (_40 instanceof Bayern) {
        return "Bayern";
    };
    if (_40 instanceof Leverkusen) {
        return "Leverkusen";
    };
    if (_40 instanceof Dortmund) {
        return "Dortmund";
    };
    if (_40 instanceof Wolfsburg) {
        return "Wolfsburg";
    };
    if (_40 instanceof Mainz) {
        return "Mainz";
    };
    if (_40 instanceof Schalke) {
        return "Schalke";
    };
    if (_40 instanceof Gladbach) {
        return "Gladbach";
    };
    if (_40 instanceof Hannover) {
        return "Hannover";
    };
    if (_40 instanceof Hoffenheim) {
        return "Hoffenheim";
    };
    if (_40 instanceof Stuttgart) {
        return "Stuttgart";
    };
    if (_40 instanceof Hamburg) {
        return "Hamburg";
    };
    if (_40 instanceof Bremen) {
        return "Bremen";
    };
    if (_40 instanceof Augsburg) {
        return "Augsburg";
    };
    if (_40 instanceof Frankfurt) {
        return "Frankfurt";
    };
    if (_40 instanceof Koeln) {
        return "Koeln";
    };
    if (_40 instanceof Berlin) {
        return "Berlin";
    };
    if (_40 instanceof Darmstadt) {
        return "Darmstadt";
    };
    if (_40 instanceof Ingolstadt) {
        return "Ingolstadt";
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Team.purs line 49, column 1 - line 69, column 1: " + [ _40.constructor.name ]);
});
var $$short = function (_37) {
    if (_37 instanceof Bayern) {
        return "FCB";
    };
    if (_37 instanceof Leverkusen) {
        return "B04";
    };
    if (_37 instanceof Dortmund) {
        return "BVB";
    };
    if (_37 instanceof Wolfsburg) {
        return "WOB";
    };
    if (_37 instanceof Mainz) {
        return "M05";
    };
    if (_37 instanceof Schalke) {
        return "S04";
    };
    if (_37 instanceof Gladbach) {
        return "BMG";
    };
    if (_37 instanceof Hannover) {
        return "H96";
    };
    if (_37 instanceof Hoffenheim) {
        return "TSG";
    };
    if (_37 instanceof Stuttgart) {
        return "VFB";
    };
    if (_37 instanceof Hamburg) {
        return "HSV";
    };
    if (_37 instanceof Bremen) {
        return "SVW";
    };
    if (_37 instanceof Augsburg) {
        return "FCA";
    };
    if (_37 instanceof Frankfurt) {
        return "SGE";
    };
    if (_37 instanceof Koeln) {
        return "1.FC";
    };
    if (_37 instanceof Berlin) {
        return "BSC";
    };
    if (_37 instanceof Darmstadt) {
        return "D98";
    };
    if (_37 instanceof Ingolstadt) {
        return "I04";
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Team.purs line 89, column 1 - line 90, column 1: " + [ _37.constructor.name ]);
};
var prettyTeam = new Util.Pretty(function (_41) {
    if (_41 instanceof Bayern) {
        return "FC Bayern München";
    };
    if (_41 instanceof Leverkusen) {
        return "Bayer 04 Leverkusen";
    };
    if (_41 instanceof Dortmund) {
        return "BVB Borussia Dortmund";
    };
    if (_41 instanceof Wolfsburg) {
        return "VfL Wolfsburg";
    };
    if (_41 instanceof Mainz) {
        return "FSV Mainz 05";
    };
    if (_41 instanceof Schalke) {
        return "FC Schalke 04";
    };
    if (_41 instanceof Gladbach) {
        return "Borussia Mönchengladbach";
    };
    if (_41 instanceof Hannover) {
        return "Hannover 96";
    };
    if (_41 instanceof Hoffenheim) {
        return "TSG 1899 Hoffenheim";
    };
    if (_41 instanceof Stuttgart) {
        return "VfB Stuttgart";
    };
    if (_41 instanceof Hamburg) {
        return "Hamburger SV";
    };
    if (_41 instanceof Bremen) {
        return "SV Werder Bremen";
    };
    if (_41 instanceof Augsburg) {
        return "FC Augsburg";
    };
    if (_41 instanceof Frankfurt) {
        return "SG Eintracht Frankfurt";
    };
    if (_41 instanceof Koeln) {
        return "1.FC Köln";
    };
    if (_41 instanceof Berlin) {
        return "Hertha BSC Berlin";
    };
    if (_41 instanceof Darmstadt) {
        return "SV Darmstadt 98";
    };
    if (_41 instanceof Ingolstadt) {
        return "FC Ingolstadt 04";
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Team.purs line 69, column 1 - line 89, column 1: " + [ _41.constructor.name ]);
});
var eqTeam = new Prelude.Eq(function (_38) {
    return function (_39) {
        if (_38 instanceof Bayern && _39 instanceof Bayern) {
            return true;
        };
        if (_38 instanceof Leverkusen && _39 instanceof Leverkusen) {
            return true;
        };
        if (_38 instanceof Dortmund && _39 instanceof Dortmund) {
            return true;
        };
        if (_38 instanceof Wolfsburg && _39 instanceof Wolfsburg) {
            return true;
        };
        if (_38 instanceof Mainz && _39 instanceof Mainz) {
            return true;
        };
        if (_38 instanceof Schalke && _39 instanceof Schalke) {
            return true;
        };
        if (_38 instanceof Gladbach && _39 instanceof Gladbach) {
            return true;
        };
        if (_38 instanceof Hannover && _39 instanceof Hannover) {
            return true;
        };
        if (_38 instanceof Hoffenheim && _39 instanceof Hoffenheim) {
            return true;
        };
        if (_38 instanceof Stuttgart && _39 instanceof Stuttgart) {
            return true;
        };
        if (_38 instanceof Hamburg && _39 instanceof Hamburg) {
            return true;
        };
        if (_38 instanceof Bremen && _39 instanceof Bremen) {
            return true;
        };
        if (_38 instanceof Augsburg && _39 instanceof Augsburg) {
            return true;
        };
        if (_38 instanceof Frankfurt && _39 instanceof Frankfurt) {
            return true;
        };
        if (_38 instanceof Koeln && _39 instanceof Koeln) {
            return true;
        };
        if (_38 instanceof Berlin && _39 instanceof Berlin) {
            return true;
        };
        if (_38 instanceof Darmstadt && _39 instanceof Darmstadt) {
            return true;
        };
        if (_38 instanceof Ingolstadt && _39 instanceof Ingolstadt) {
            return true;
        };
        return false;
    };
});
module.exports = {
    Bayern: Bayern, 
    Leverkusen: Leverkusen, 
    Dortmund: Dortmund, 
    Wolfsburg: Wolfsburg, 
    Mainz: Mainz, 
    Schalke: Schalke, 
    Gladbach: Gladbach, 
    Hannover: Hannover, 
    Hoffenheim: Hoffenheim, 
    Stuttgart: Stuttgart, 
    Hamburg: Hamburg, 
    Bremen: Bremen, 
    Augsburg: Augsburg, 
    Frankfurt: Frankfurt, 
    Koeln: Koeln, 
    Berlin: Berlin, 
    Darmstadt: Darmstadt, 
    Ingolstadt: Ingolstadt, 
    "short": $$short, 
    eqTeam: eqTeam, 
    showTeam: showTeam, 
    prettyTeam: prettyTeam
};

},{"Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js","Util":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Util/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Tip/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_Array = require("Data.Array");
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var $$Math = require("Math");
var Data_Int = require("Data.Int");
var Data_Maybe = require("Data.Maybe");
var Team = require("Team");
var Player = require("Player");
var Better = (function () {
    function Better() {

    };
    Better.value = new Better();
    return Better;
})();
var Correct = (function () {
    function Correct() {

    };
    Correct.value = new Correct();
    return Correct;
})();
var Worse = (function () {
    function Worse() {

    };
    Worse.value = new Worse();
    return Worse;
})();
var Manhattan = (function () {
    function Manhattan() {

    };
    Manhattan.value = new Manhattan();
    return Manhattan;
})();
var Euclid = (function () {
    function Euclid() {

    };
    Euclid.value = new Euclid();
    return Euclid;
})();
var Wulf = (function () {
    function Wulf() {

    };
    Wulf.value = new Wulf();
    return Wulf;
})();
var wulf = function (tip) {
    return function (actual) {
        return $$Math.sqrt($$Math.abs(Data_Int.toNumber(tip) - Data_Int.toNumber(actual)));
    };
};
var trend = function (standings) {
    return function (team) {
        return function (pos) {
            var _83 = Data_Array.elemIndex(Team.eqTeam)(team)(standings);
            if (_83 instanceof Data_Maybe.Nothing) {
                return Correct.value;
            };
            if (_83 instanceof Data_Maybe.Just) {
                var _84 = Prelude["=="](Prelude.eqInt)(Prelude["+"](Prelude.semiringInt)(_83.value0)(1))(pos);
                if (_84) {
                    return Correct.value;
                };
                if (!_84) {
                    var _85 = Prelude["<"](Prelude.ordInt)(Prelude["+"](Prelude.semiringInt)(_83.value0)(1))(pos);
                    if (_85) {
                        return Better.value;
                    };
                    if (!_85) {
                        return Worse.value;
                    };
                    throw new Error("Failed pattern match: " + [ _85.constructor.name ]);
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Tip.purs line 17, column 1 - line 18, column 1: " + [ _84.constructor.name ]);
            };
            throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Tip.purs line 17, column 1 - line 18, column 1: " + [ _83.constructor.name ]);
        };
    };
};
var tipsForPlayer = function (_44) {
    if (_44 instanceof Player.JanWulf) {
        return [ Team.Bayern.value, Team.Leverkusen.value, Team.Dortmund.value, Team.Wolfsburg.value, Team.Mainz.value, Team.Schalke.value, Team.Gladbach.value, Team.Hannover.value, Team.Hoffenheim.value, Team.Stuttgart.value, Team.Hamburg.value, Team.Bremen.value, Team.Augsburg.value, Team.Frankfurt.value, Team.Koeln.value, Team.Berlin.value, Team.Darmstadt.value, Team.Ingolstadt.value ];
    };
    if (_44 instanceof Player.Christoph) {
        return [ Team.Bayern.value, Team.Gladbach.value, Team.Wolfsburg.value, Team.Leverkusen.value, Team.Schalke.value, Team.Dortmund.value, Team.Hoffenheim.value, Team.Augsburg.value, Team.Bremen.value, Team.Mainz.value, Team.Frankfurt.value, Team.Koeln.value, Team.Hannover.value, Team.Berlin.value, Team.Ingolstadt.value, Team.Hamburg.value, Team.Darmstadt.value, Team.Stuttgart.value ];
    };
    if (_44 instanceof Player.Johannes) {
        return [ Team.Bayern.value, Team.Dortmund.value, Team.Wolfsburg.value, Team.Leverkusen.value, Team.Gladbach.value, Team.Schalke.value, Team.Mainz.value, Team.Augsburg.value, Team.Hoffenheim.value, Team.Bremen.value, Team.Frankfurt.value, Team.Stuttgart.value, Team.Koeln.value, Team.Hamburg.value, Team.Berlin.value, Team.Hannover.value, Team.Darmstadt.value, Team.Ingolstadt.value ];
    };
    if (_44 instanceof Player.Jan) {
        return [ Team.Bayern.value, Team.Gladbach.value, Team.Dortmund.value, Team.Wolfsburg.value, Team.Leverkusen.value, Team.Stuttgart.value, Team.Augsburg.value, Team.Koeln.value, Team.Schalke.value, Team.Bremen.value, Team.Mainz.value, Team.Hamburg.value, Team.Hoffenheim.value, Team.Ingolstadt.value, Team.Frankfurt.value, Team.Berlin.value, Team.Hannover.value, Team.Darmstadt.value ];
    };
    if (_44 instanceof Player.JR) {
        return [ Team.Bayern.value, Team.Gladbach.value, Team.Wolfsburg.value, Team.Schalke.value, Team.Leverkusen.value, Team.Dortmund.value, Team.Mainz.value, Team.Stuttgart.value, Team.Berlin.value, Team.Hoffenheim.value, Team.Augsburg.value, Team.Koeln.value, Team.Bremen.value, Team.Hamburg.value, Team.Ingolstadt.value, Team.Hannover.value, Team.Frankfurt.value, Team.Darmstadt.value ];
    };
    if (_44 instanceof Player.Ulf) {
        return [ Team.Bayern.value, Team.Wolfsburg.value, Team.Dortmund.value, Team.Leverkusen.value, Team.Gladbach.value, Team.Schalke.value, Team.Augsburg.value, Team.Hoffenheim.value, Team.Mainz.value, Team.Bremen.value, Team.Stuttgart.value, Team.Frankfurt.value, Team.Hannover.value, Team.Koeln.value, Team.Hamburg.value, Team.Berlin.value, Team.Ingolstadt.value, Team.Darmstadt.value ];
    };
    if (_44 instanceof Player.Mirko) {
        return [ Team.Wolfsburg.value, Team.Bayern.value, Team.Dortmund.value, Team.Leverkusen.value, Team.Gladbach.value, Team.Schalke.value, Team.Hamburg.value, Team.Augsburg.value, Team.Bremen.value, Team.Berlin.value, Team.Mainz.value, Team.Stuttgart.value, Team.Hoffenheim.value, Team.Ingolstadt.value, Team.Koeln.value, Team.Hannover.value, Team.Frankfurt.value, Team.Darmstadt.value ];
    };
    if (_44 instanceof Player.Julia) {
        return [ Team.Bayern.value, Team.Dortmund.value, Team.Wolfsburg.value, Team.Leverkusen.value, Team.Gladbach.value, Team.Schalke.value, Team.Frankfurt.value, Team.Augsburg.value, Team.Hannover.value, Team.Mainz.value, Team.Darmstadt.value, Team.Stuttgart.value, Team.Hamburg.value, Team.Hoffenheim.value, Team.Bremen.value, Team.Berlin.value, Team.Koeln.value, Team.Ingolstadt.value ];
    };
    if (_44 instanceof Player.Daniel) {
        return [ Team.Dortmund.value, Team.Bayern.value, Team.Wolfsburg.value, Team.Gladbach.value, Team.Frankfurt.value, Team.Leverkusen.value, Team.Augsburg.value, Team.Schalke.value, Team.Bremen.value, Team.Hannover.value, Team.Hoffenheim.value, Team.Mainz.value, Team.Koeln.value, Team.Stuttgart.value, Team.Hamburg.value, Team.Berlin.value, Team.Darmstadt.value, Team.Ingolstadt.value ];
    };
    if (_44 instanceof Player.Sandra) {
        return [ Team.Gladbach.value, Team.Bayern.value, Team.Wolfsburg.value, Team.Dortmund.value, Team.Leverkusen.value, Team.Hoffenheim.value, Team.Bremen.value, Team.Augsburg.value, Team.Schalke.value, Team.Frankfurt.value, Team.Mainz.value, Team.Hamburg.value, Team.Ingolstadt.value, Team.Stuttgart.value, Team.Koeln.value, Team.Berlin.value, Team.Hannover.value, Team.Darmstadt.value ];
    };
    if (_44 instanceof Player.Maike) {
        return [ Team.Bayern.value, Team.Dortmund.value, Team.Wolfsburg.value, Team.Gladbach.value, Team.Schalke.value, Team.Augsburg.value, Team.Leverkusen.value, Team.Frankfurt.value, Team.Bremen.value, Team.Hoffenheim.value, Team.Hannover.value, Team.Koeln.value, Team.Stuttgart.value, Team.Mainz.value, Team.Hamburg.value, Team.Berlin.value, Team.Darmstadt.value, Team.Ingolstadt.value ];
    };
    if (_44 instanceof Player.Nikita) {
        return [ Team.Frankfurt.value, Team.Darmstadt.value, Team.Stuttgart.value, Team.Bayern.value, Team.Ingolstadt.value, Team.Mainz.value, Team.Berlin.value, Team.Dortmund.value, Team.Schalke.value, Team.Koeln.value, Team.Augsburg.value, Team.Gladbach.value, Team.Hoffenheim.value, Team.Hannover.value, Team.Bremen.value, Team.Hamburg.value, Team.Wolfsburg.value, Team.Leverkusen.value ];
    };
    if (_44 instanceof Player.Spiegel) {
        return [ Team.Bayern.value, Team.Leverkusen.value, Team.Wolfsburg.value, Team.Dortmund.value, Team.Gladbach.value, Team.Schalke.value, Team.Stuttgart.value, Team.Augsburg.value, Team.Hoffenheim.value, Team.Hamburg.value, Team.Frankfurt.value, Team.Koeln.value, Team.Mainz.value, Team.Bremen.value, Team.Berlin.value, Team.Hannover.value, Team.Ingolstadt.value, Team.Darmstadt.value ];
    };
    if (_44 instanceof Player.Henning) {
        return [ Team.Bayern.value, Team.Dortmund.value, Team.Leverkusen.value, Team.Gladbach.value, Team.Schalke.value, Team.Wolfsburg.value, Team.Hamburg.value, Team.Hoffenheim.value, Team.Stuttgart.value, Team.Augsburg.value, Team.Frankfurt.value, Team.Bremen.value, Team.Mainz.value, Team.Koeln.value, Team.Berlin.value, Team.Hannover.value, Team.Ingolstadt.value, Team.Darmstadt.value ];
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Tip.purs line 70, column 1 - line 71, column 1: " + [ _44.constructor.name ]);
};
var normalize = function (_42) {
    return function (s) {
        if (_42 instanceof Manhattan) {
            return s;
        };
        if (_42 instanceof Euclid) {
            return $$Math.sqrt(s);
        };
        if (_42 instanceof Wulf) {
            return $$Math.pow(s)(2.0);
        };
        throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Tip.purs line 43, column 1 - line 44, column 1: " + [ _42.constructor.name, s.constructor.name ]);
    };
};
var manhattan = function (tip) {
    return function (actual) {
        return $$Math.abs(Data_Int.toNumber(tip) - Data_Int.toNumber(actual));
    };
};
var euclid = function (tip) {
    return function (actual) {
        return $$Math.pow(Data_Int.toNumber(tip) - Data_Int.toNumber(actual))(2.0);
    };
};
var eqMetric = new Prelude.Eq(function (_45) {
    return function (_46) {
        if (_45 instanceof Manhattan && _46 instanceof Manhattan) {
            return true;
        };
        if (_45 instanceof Euclid && _46 instanceof Euclid) {
            return true;
        };
        if (_45 instanceof Wulf && _46 instanceof Wulf) {
            return true;
        };
        return false;
    };
});
var calculate = function (_43) {
    if (_43 instanceof Manhattan) {
        return manhattan;
    };
    if (_43 instanceof Euclid) {
        return euclid;
    };
    if (_43 instanceof Wulf) {
        return wulf;
    };
    throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Tip.purs line 55, column 1 - line 56, column 1: " + [ _43.constructor.name ]);
};
var rateTip = function (metric) {
    return function (standings) {
        return function (team) {
            return function (pos) {
                var _93 = Data_Array.elemIndex(Team.eqTeam)(team)(standings);
                if (_93 instanceof Data_Maybe.Nothing) {
                    return 0.0;
                };
                if (_93 instanceof Data_Maybe.Just) {
                    return calculate(metric)(pos)(Prelude["+"](Prelude.semiringInt)(_93.value0)(1));
                };
                throw new Error("Failed pattern match at /Users/plancalculus/Documents/Projects/PureScript/Bundesliga/src/Tip.purs line 49, column 1 - line 50, column 1: " + [ _93.constructor.name ]);
            };
        };
    };
};
var rateTips = function (metric) {
    return function (standings) {
        return function (tips) {
            return normalize(metric)(Data_Foldable.sum(Data_Foldable.foldableArray)(Prelude.semiringNumber)(Data_Array.zipWith(rateTip(metric)(standings))(tips)(Data_Array.range(1)(Data_Array.length(tips)))));
        };
    };
};
var ratePlayer = function (metric) {
    return function (standings) {
        return function (p) {
            return rateTips(metric)(standings)(tipsForPlayer(p));
        };
    };
};
module.exports = {
    Manhattan: Manhattan, 
    Euclid: Euclid, 
    Wulf: Wulf, 
    Better: Better, 
    Correct: Correct, 
    Worse: Worse, 
    tipsForPlayer: tipsForPlayer, 
    wulf: wulf, 
    euclid: euclid, 
    manhattan: manhattan, 
    calculate: calculate, 
    rateTip: rateTip, 
    normalize: normalize, 
    rateTips: rateTips, 
    ratePlayer: ratePlayer, 
    trend: trend, 
    eqMetric: eqMetric
};

},{"Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Foldable":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Foldable/index.js","Data.Int":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int/index.js","Data.Maybe":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Maybe/index.js","Math":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Math/index.js","Player":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Player/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js","Team":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Team/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Unsafe.Coerce/foreign.js":[function(require,module,exports){
"use strict";

// module Unsafe.Coerce

exports.unsafeCoerce = function(x) { return x; }

},{}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Unsafe.Coerce/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
module.exports = {
    unsafeCoerce: $foreign.unsafeCoerce
};

},{"./foreign":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Unsafe.Coerce/foreign.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Util/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var $$Math = require("Math");
var Data_Int = require("Data.Int");
var Data_Array = require("Data.Array");
var Pretty = function (pretty) {
    this.pretty = pretty;
};
var roundTo = function (d) {
    return function (x) {
        var m = $$Math.pow(10.0)(Data_Int.toNumber(d));
        return $$Math.round(x * m) / m;
    };
};
var showNumber = function (d) {
    return function (p) {
        return Prelude.show(Prelude.showNumber)(roundTo(d)(p));
    };
};
var pretty = function (dict) {
    return dict.pretty;
};
var chunks = function (i) {
    return function (_34) {
        if (_34.length === 0) {
            return [  ];
        };
        return Data_Array[":"](Data_Array.take(i)(_34))(chunks(i)(Data_Array.drop(i)(_34)));
    };
};
module.exports = {
    Pretty: Pretty, 
    chunks: chunks, 
    roundTo: roundTo, 
    showNumber: showNumber, 
    pretty: pretty
};

},{"Data.Array":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Array/index.js","Data.Int":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Data.Int/index.js","Math":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Math/index.js","Prelude":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Prelude/index.js"}],"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/browserify.js":[function(require,module,exports){
require('Main').main();

},{"Main":"/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/Main/index.js"}],"/usr/local/lib/node_modules/pulp/node_modules/browserify/node_modules/browser-resolve/empty.js":[function(require,module,exports){

},{}]},{},["/Users/plancalculus/Documents/Projects/PureScript/Bundesliga/output/browserify.js"]);
